<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>梦不成</title>
    <link>https://shulu520.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>君子生非异也，善假于物也</description>
    <pubDate>Thu, 04 Mar 2021 09:48:31 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>模块</title>
      <link>https://shulu520.com/python/Python-%E6%A8%A1%E5%9D%97/</link>
      <guid>https://shulu520.com/python/Python-%E6%A8%A1%E5%9D%97/</guid>
      <pubDate>Thu, 04 Mar 2021 09:45:30 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="常见的datetime日期时间模块"><a href="#常见的datetime日期时间模块" class="headerlink" title="常见的datetime日期时间模块"></a>常见的datetime日期时间模块</h1><h1 id="datetime模块重新封装了time模块"><a href="#datetime模块重新封装了time模块" class="headerlink" title="datetime模块重新封装了time模块"></a>datetime模块重新封装了time模块</h1><p>import datetime</p><p>time1=datetime.datetime.now()<br>print(time1) #2021-02-27 18:59:13.885794</p><p>time2=datetime.date.today()<br>print(time2) #2021-02-27</p><p>time3=datetime.datetime.today()<br>print(time3) #2021-02-27 18:58:39.614459</p><p>time4=datetime.datetime.today().timestamp()<br>print(time4) #1614423830.81342</p><h1 id="返回当前日期时间的日期部分：2021-02-27"><a href="#返回当前日期时间的日期部分：2021-02-27" class="headerlink" title="返回当前日期时间的日期部分：2021-02-27"></a>返回当前日期时间的日期部分：2021-02-27</h1><p>print(datetime.datetime.now().date())</p><h1 id="返回当前日期时间的时间部分：19-13-45-310397"><a href="#返回当前日期时间的时间部分：19-13-45-310397" class="headerlink" title="返回当前日期时间的时间部分：19:13:45.310397"></a>返回当前日期时间的时间部分：19:13:45.310397</h1><p>print(datetime.datetime.now().time())</p><h1 id="delta时间间隔"><a href="#delta时间间隔" class="headerlink" title="delta时间间隔"></a>delta时间间隔</h1><p>past=datetime.datetime(2017, 4, 16, 21, 21, 20, 871000)<br>now=datetime.datetime.now()<br>delta=now-past<br>print(delta) #1412 days, 22:07:46.382359<br>print(delta.days) #1412</p><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/python/Python-%E6%A8%A1%E5%9D%97/#disqus_thread</comments>
    </item>
    
    <item>
      <title>python操作Word文档</title>
      <link>https://shulu520.com/py-word/Python-word/</link>
      <guid>https://shulu520.com/py-word/Python-word/</guid>
      <pubDate>Fri, 26 Feb 2021 05:48:10 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="python操作Word文档"><a href="#python操作Word文档" class="headerlink" title="python操作Word文档"></a>python操作Word文档</h1><p><code>https://python-docx.readthedocs.io/en/latest/user/quickstart.html</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from docx import Document</span><br><span class="line"># 获取文档对象</span><br><span class="line">doc=Document(&apos;./我的.docx&apos;)</span><br><span class="line"></span><br><span class="line"># 获取段落</span><br><span class="line">paragraphs=doc.paragraphs</span><br><span class="line">for para in paragraphs:</span><br><span class="line">  # 每一段落的内容</span><br><span class="line">  print(para.text)</span><br><span class="line">  # 文字块 相同格式的内容</span><br><span class="line">  runs=para.runs</span><br><span class="line">  for run in runs:</span><br><span class="line">    print(run.text)</span><br></pre></td></tr></table></figure><h2 id="word基础"><a href="#word基础" class="headerlink" title="word基础"></a>word基础</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">from docx import Document</span><br><span class="line">from docx.shared import Cm #图片单位厘米</span><br><span class="line"># 创建新的文本对象</span><br><span class="line">doc= Document()</span><br><span class="line"></span><br><span class="line"># 添加标题</span><br><span class="line">doc.add_heading(&apos;这是标题&apos;)</span><br><span class="line"># 默认情况下，这会添加一个顶级标题，在Word中显示为“标题1”。</span><br><span class="line"># 当您想要一个小节的标题时，只需将所需的级别指定为1到9之间的整数即可：</span><br><span class="line">doc.add_heading(&apos;二级标题&apos;,level=2)</span><br><span class="line"></span><br><span class="line"># 段落是Word的基础。它们用于正文，也用于标题和项目符号</span><br><span class="line"># 此方法返回对段落的引用</span><br><span class="line">para=doc.add_paragraph(&apos;添加一段内容添一段内容添加一段内容添加一段内容&apos;)</span><br><span class="line"></span><br><span class="line">para2=doc.add_paragraph()</span><br><span class="line">para2.add_run(&apos;fdfdfdfdf&apos;)</span><br><span class="line"></span><br><span class="line"># 也可以将一个段落用作“光标”，并在其上方直接插入一个新段落</span><br><span class="line">ins_para=para.insert_paragraph_before(&apos;把某一段落当做光标，可以在其上方直接插入一个新段落&apos;)</span><br><span class="line"></span><br><span class="line"># 添加分页</span><br><span class="line">doc.add_page_break()</span><br><span class="line"></span><br><span class="line"># 添加表格</span><br><span class="line">table=doc.add_table(rows=2,cols=3,style=&apos;Light List Accent 4&apos;)</span><br><span class="line"></span><br><span class="line"># 访问单个单元,您始终可以通过其行和列索引访问单元格：就像坐标一样</span><br><span class="line">cell=table.cell(0, 1)</span><br><span class="line">cell.text=&apos;表格内容&apos;</span><br><span class="line"></span><br><span class="line"># rows 表的属性提供对各个行的访问，每个行都有一个 .cells属性。</span><br><span class="line"># 该.cells两个属性Row和Column 支持索引访问，就像一个列表：</span><br><span class="line">row=table.rows[1]</span><br><span class="line">row.cells[2].text=&apos;表格内容&apos;</span><br><span class="line"># rows和.columns集合是可迭代的</span><br><span class="line"></span><br><span class="line"># 使用一个两层元组或两层列表的方式循环写入表格</span><br><span class="line">table2=doc.add_table(rows=3,cols=2)</span><br><span class="line">lst=[</span><br><span class="line">  [&apos;姓名&apos;,&apos;成绩&apos;],</span><br><span class="line">  [&apos;shulu&apos;,&apos;100&apos;],</span><br><span class="line">  [&apos;qiuyun&apos;,&apos;99&apos;]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">for i in range(0,len(table2.rows)):</span><br><span class="line">  row=table2.rows[i]</span><br><span class="line">  for x in range(0,len(row.cells)):</span><br><span class="line">    cell=row.cells[x]</span><br><span class="line">    cell.text=lst[i][x]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 添加图片</span><br><span class="line"># doc.add_picture(&apos;shulu520.com.png&apos;)</span><br><span class="line"># 宽度高度设置一个，另一个自动缩放</span><br><span class="line">doc.add_picture(&apos;shulu520.com.png&apos;, width=Cm(5))</span><br><span class="line"></span><br><span class="line"># 保存</span><br><span class="line">doc.save(&apos;我的文档.docx&apos;)</span><br></pre></td></tr></table></figure><h2 id="搜索指定内容"><a href="#搜索指定内容" class="headerlink" title="搜索指定内容"></a>搜索指定内容</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 这一块的思路 非常重要！</span><br><span class="line"># 每次前进一个字符长度，每次匹配输入内容的长度个字符</span><br><span class="line"></span><br><span class="line">from docx import Document</span><br><span class="line">doc=Document(&apos;我的.docx&apos;)</span><br><span class="line"></span><br><span class="line">word=input(&apos;请输入搜索内容：&apos;)</span><br><span class="line"># 输入内容的长度，以此为每次切片搜索的长度单位</span><br><span class="line">word_len=len(word)</span><br><span class="line"></span><br><span class="line">count=0</span><br><span class="line"></span><br><span class="line">for para in doc.paragraphs:</span><br><span class="line">  # 每一段文本的长度</span><br><span class="line">  text_len=len(para.text) </span><br><span class="line"></span><br><span class="line">  for i in range(0,text_len-word_len+1):</span><br><span class="line">    if word==para.text[i:word_len+i]:</span><br><span class="line">      count+=1</span><br><span class="line"></span><br><span class="line">print(word+&apos;出现了&apos;+str(count)+&apos;次&apos;)</span><br></pre></td></tr></table></figure><h2 id="文本对齐方式和间距"><a href="#文本对齐方式和间距" class="headerlink" title="文本对齐方式和间距"></a>文本对齐方式和间距</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from docx import Document</span><br><span class="line">from docx.shared import Pt #英镑单位</span><br><span class="line"># WD_PARAGRAPH_ALIGNMENT 即word段落对齐</span><br><span class="line">from docx.enum.text import WD_PARAGRAPH_ALIGNMENT </span><br><span class="line">doc=Document(&apos;./word/美文.docx&apos;)</span><br><span class="line"></span><br><span class="line">for para in doc.paragraphs:</span><br><span class="line">  para.alignment=WD_PARAGRAPH_ALIGNMENT.CENTER</span><br><span class="line">  # WD_PARAGRAPH_ALIGNMENT虽然编辑器对其飘红，但程序会执行的</span><br><span class="line"></span><br><span class="line">  # 行间距</span><br><span class="line">  para.paragraph_format.line_spacing=2.0</span><br><span class="line">  </span><br><span class="line">  # 段前段后间距</span><br><span class="line">  para.paragraph_format.space_before=Pt(12)</span><br><span class="line">  para.paragraph_format.space_after=Pt(12)</span><br><span class="line"></span><br><span class="line">doc.save(&apos;./word/美文.docx&apos;)</span><br></pre></td></tr></table></figure><h2 id="设置字体和字体样式"><a href="#设置字体和字体样式" class="headerlink" title="设置字体和字体样式"></a>设置字体和字体样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">from docx import Document</span><br><span class="line">from docx.oxml.ns import qn</span><br><span class="line">from docx.shared import Pt,RGBColor</span><br><span class="line">doc=Document()</span><br><span class="line">para=doc.add_paragraph()</span><br><span class="line">para.add_run(&apos;人生苦短&apos;).font.bold=True #加粗</span><br><span class="line">para.add_run(&apos;人生苦短&apos;).font.shadow=True #阴影</span><br><span class="line">para.add_run(&apos;Python&apos;).font.italic=True #倾斜</span><br><span class="line">para.add_run(&apos;你好吗&apos;).font.underline=True #下划线</span><br><span class="line">para.add_run(&apos;shulu&apos;).font.strike=True #删除线</span><br><span class="line">para.add_run(&apos;哈哈哈&apos;).font.size=Pt(20) #字体大小</span><br><span class="line">para.add_run(&apos;睡大觉&apos;).font.color.rgb=RGBColor(255,255,0) #字体颜色</span><br><span class="line"></span><br><span class="line"># 设置中文字体 宋体、楷体等等</span><br><span class="line">doc.styles[&apos;Normal&apos;].font.name = u&apos;楷体&apos;</span><br><span class="line">doc.styles[&apos;Normal&apos;]._element.rPr.rFonts.set(qn(&apos;w:eastAsia&apos;), u&apos;楷体&apos;)</span><br><span class="line"></span><br><span class="line">doc.save(&apos;中文字体.docx&apos;)</span><br></pre></td></tr></table></figure><h2 id="设置表格样式"><a href="#设置表格样式" class="headerlink" title="设置表格样式"></a>设置表格样式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">from docx import *</span><br><span class="line"># word当中的样式类型WD_STYLE_TYPE</span><br><span class="line">from docx.enum.style import WD_STYLE_TYPE </span><br><span class="line">doc=Document()</span><br><span class="line">styles=doc.styles</span><br><span class="line">print(styles) #所有文档样式</span><br><span class="line"></span><br><span class="line">for style in styles:</span><br><span class="line">  # 表格的样式</span><br><span class="line">  if style.type==WD_STYLE_TYPE.TABLE:</span><br><span class="line">    doc.add_paragraph(&apos;表格样式：&apos;+style.name)</span><br><span class="line">    table=doc.add_table(3,3,style=style)</span><br><span class="line">    cells=table.rows[0].cells</span><br><span class="line">    cells[0].text=&apos;第1列&apos;</span><br><span class="line">    cells[1].text=&apos;第2列&apos;</span><br><span class="line">    cells[2].text=&apos;第3列&apos;</span><br><span class="line"></span><br><span class="line"># 如上代码得到所有表格的样式名称，</span><br><span class="line"># 创建表格时，指定样式名称即可：</span><br><span class="line">doc.add_table(4,5,style=&apos;Light List Accent 4&apos;)</span><br><span class="line"></span><br><span class="line">doc.save(&apos;所有表格样式.docx&apos;)</span><br></pre></td></tr></table></figure><h2 id="读取文本文档并按指定的格式写入Word"><a href="#读取文本文档并按指定的格式写入Word" class="headerlink" title="读取文本文档并按指定的格式写入Word"></a>读取文本文档并按指定的格式写入Word</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"># 读取文本文档</span><br><span class="line"># 这里的line一行指的是上一个换行符&apos;\n&apos;&apos;与下一个\n&apos;之间的内容</span><br><span class="line"># 原文中的软回车删不掉！！！！！！</span><br><span class="line"></span><br><span class="line">from docx import Document</span><br><span class="line">from docx.shared import Pt</span><br><span class="line">from docx.oxml.ns import qn</span><br><span class="line">from docx.enum.text import WD_PARAGRAPH_ALIGNMENT</span><br><span class="line"></span><br><span class="line">with open(&apos;./word/生活.txt&apos;,&apos;r&apos;) as r_file:</span><br><span class="line">  lines=r_file.readlines()</span><br><span class="line"></span><br><span class="line">with open(&apos;./word/生活.txt&apos;,&apos;w&apos;) as w_file:</span><br><span class="line">  for line in lines:</span><br><span class="line">    if line!=&apos;\n&apos;:</span><br><span class="line">      w_file.write(line)</span><br><span class="line"></span><br><span class="line">with open(&apos;./word/生活.txt&apos;,&apos;r&apos;) as r_file:</span><br><span class="line">  lines=r_file.readlines()</span><br><span class="line">  for line in lines:</span><br><span class="line">    if line==&apos;\n&apos;:</span><br><span class="line">      lines.remove(line)</span><br><span class="line">print(len(lines))</span><br><span class="line"></span><br><span class="line">doc=Document()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 标题部分</span><br><span class="line">title=doc.add_paragraph(lines[0])</span><br><span class="line">for run1 in title.runs:</span><br><span class="line">  run1.font.bold=True</span><br><span class="line">  run1.font.name=&apos;宋体&apos;</span><br><span class="line">  run1.font.size=Pt(20)</span><br><span class="line">  r=run1._element.rPr.rFonts</span><br><span class="line">  r.set(qn(&apos;w:eastAsia&apos;), &apos;微软雅黑&apos;)</span><br><span class="line"></span><br><span class="line">title.alignment=WD_PARAGRAPH_ALIGNMENT.CENTER</span><br><span class="line"></span><br><span class="line"># 日期部分</span><br><span class="line">para1=doc.add_paragraph(lines[1])</span><br><span class="line">para1.alignment=WD_PARAGRAPH_ALIGNMENT.RIGHT</span><br><span class="line"></span><br><span class="line"># 正文部分</span><br><span class="line">for i in range(2,len(lines)):</span><br><span class="line"></span><br><span class="line">  para_others=doc.add_paragraph(lines[i])</span><br><span class="line">  </span><br><span class="line">  for run2 in para_others.runs:</span><br><span class="line">    run2.font.size=Pt(12)</span><br><span class="line">    run2.font.name=&apos;微软雅黑&apos;</span><br><span class="line">    r=run2._element.rPr.rFonts</span><br><span class="line">    r.set(qn(&apos;w:eastAsia&apos;), &apos;微软雅黑&apos;)</span><br><span class="line">  para_others.paragraph_format.line_spacing=1.5 #行间距</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">doc.save(&apos;./word/生活.docx&apos;)</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/py-word/Python-word/#disqus_thread</comments>
    </item>
    
    <item>
      <title>officePython2</title>
      <link>https://shulu520.com/officePython/officePython2/</link>
      <guid>https://shulu520.com/officePython/officePython2/</guid>
      <pubDate>Sat, 20 Feb 2021 23:24:42 GMT</pubDate>
      <description>
      
        Python操作excel
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="打开一个Excel表格"><a href="#打开一个Excel表格" class="headerlink" title="打开一个Excel表格"></a>打开一个Excel表格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"># 获取一个工作簿对象</span><br><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line"># 获取所有工作簿的名称</span><br><span class="line">print(workbook.sheetnames)</span><br><span class="line"></span><br><span class="line"># 获取某一个具体的sheet工作表</span><br><span class="line">sheet=workbook[&apos;评论信息&apos;]</span><br><span class="line"># 获取这个工作表的大小范围</span><br><span class="line">print(sheet.dimensions)</span><br><span class="line"></span><br><span class="line"># 获取单元格和内容</span><br><span class="line">cell=sheet[&apos;A2&apos;]</span><br><span class="line">print(cell.value)</span><br><span class="line"></span><br><span class="line"># 获取一些列的单元格</span><br><span class="line">cells=sheet[&apos;A1:A3&apos;]</span><br><span class="line">print(cells)</span><br><span class="line"></span><br><span class="line">for cell in cells:</span><br><span class="line">  print(cell[0].value) #两层元组</span><br><span class="line"></span><br><span class="line"># 获取一整列</span><br><span class="line">cols=sheet[&apos;A&apos;]</span><br><span class="line">for col in cols:</span><br><span class="line">  print(col.value)</span><br><span class="line"></span><br><span class="line"># 获取一整行</span><br><span class="line">row=sheet[3]</span><br><span class="line">for cell in row:</span><br><span class="line">  print(cell.value)</span><br><span class="line"></span><br><span class="line"># 获取所有行，再遍历输出</span><br><span class="line">rows=sheet.rows</span><br><span class="line"></span><br><span class="line"># 获取所有列，再遍历输出</span><br><span class="line">cols=sheet.columns</span><br><span class="line"></span><br><span class="line"># 在第1行到第5行，第1列到第3之间</span><br><span class="line">rows=sheet.iter_rows(min_row=1,max_row=5,min_col=1,max_col=3)</span><br><span class="line">for row in rows:</span><br><span class="line">  for cell in row:</span><br><span class="line">    print(cell.value)</span><br><span class="line">  print(&apos;-----------------&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 在一列中筛选某一个值,也可以做个统计</span><br><span class="line">count=0</span><br><span class="line">cols=sheet[&apos;A&apos;]</span><br><span class="line">for col in cols:</span><br><span class="line">  if col.value==2:</span><br><span class="line">    count+=1</span><br><span class="line">    print(col.row) #输出目标值所在行</span><br><span class="line"></span><br><span class="line">print(&apos;count=&apos;+str(count))</span><br></pre></td></tr></table></figure><h2 id="创建一个工作薄-一个Excel文件"><a href="#创建一个工作薄-一个Excel文件" class="headerlink" title="创建一个工作薄(一个Excel文件)"></a>创建一个工作薄(一个Excel文件)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># 关于报错：关闭手动打开的文件，重新运行即可</span><br><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.Workbook()</span><br><span class="line"></span><br><span class="line"># 创建sheet工作表</span><br><span class="line">sheet=workbook.create_sheet() #在excel中显示为sheet1,默认的活动页</span><br><span class="line"></span><br><span class="line"># 向表中写入内容</span><br><span class="line">sheet[&apos;A1&apos;]=&apos;shulu520哈哈哈&apos;</span><br><span class="line">cell=sheet[&apos;A2&apos;]</span><br><span class="line">cell.value=&apos;do you love me?&apos;</span><br><span class="line"></span><br><span class="line">lst=[&apos;姓名&apos;,&apos;爱好&apos;]</span><br><span class="line">sheet.append(lst)</span><br><span class="line"></span><br><span class="line">stu_lst=[</span><br><span class="line">  [&apos;张三&apos;,80],</span><br><span class="line">  [&apos;李思&apos;,90],</span><br><span class="line">  [&apos;王武&apos;,100]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">for cell in stu_lst:</span><br><span class="line">  sheet.append(cell)</span><br><span class="line"></span><br><span class="line"># 可以给单元格赋求值公式</span><br><span class="line">sheet[&apos;B7&apos;]=&apos;=sum(B4:B6)&apos;</span><br><span class="line"></span><br><span class="line"># 保存工作簿并命名</span><br><span class="line">workbook.save(&apos;写入内容.xlsx&apos;)</span><br><span class="line"></span><br><span class="line"># 查看openpyxl支持的Excel公式</span><br><span class="line">from openpyxl.utils import FORMULAE</span><br><span class="line">print(FORMULAE)</span><br><span class="line"># https://product.pconline.com.cn/itbk/software/excel/1506/6538476.html</span><br></pre></td></tr></table></figure><h2 id="向工作表中指定位置插入一列"><a href="#向工作表中指定位置插入一列" class="headerlink" title="向工作表中指定位置插入一列"></a>向工作表中指定位置插入一列</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 插入行与插入列做法一样，就不写了</span><br><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;评论信息&apos;]</span><br><span class="line">sheet.insert_cols(idx=1) #往第一列插入一列</span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="向工作表中指定位置插入多列"><a href="#向工作表中指定位置插入多列" class="headerlink" title="向工作表中指定位置插入多列"></a>向工作表中指定位置插入多列</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;评论信息&apos;]</span><br><span class="line">sheet.insert_cols(idx=3,amount=2) #在第三列插入两列</span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="删除行列"><a href="#删除行列" class="headerlink" title="删除行列"></a>删除行列</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;评论信息&apos;]</span><br><span class="line">sheet.delete_cols(idx=1,amount=2) </span><br><span class="line">sheet.delete_rows(idx=1,amount=1) #从第一行开始删除一行</span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="移动一些单元格"><a href="#移动一些单元格" class="headerlink" title="移动一些单元格"></a>移动一些单元格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 向下向右为正数，向左向上为负数</span><br><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;评论信息&apos;]</span><br><span class="line">sheet.move_range(&apos;A1:B4&apos;,rows=2,cols=2)</span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="sheet工作表的创建"><a href="#sheet工作表的创建" class="headerlink" title="sheet工作表的创建"></a>sheet工作表的创建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line"># 创建工作表</span><br><span class="line">workbook.create_sheet(&apos;学生信息&apos;)</span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="删除工作表"><a href="#删除工作表" class="headerlink" title="删除工作表"></a>删除工作表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;Sheet2&apos;]</span><br><span class="line">workbook.remove(sheet)</span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="复制sheet和重命名"><a href="#复制sheet和重命名" class="headerlink" title="复制sheet和重命名"></a>复制sheet和重命名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line">src_sheet=workbook[&apos;评论信息&apos;]</span><br><span class="line">sheet=workbook.copy_worksheet(src_sheet) #名称叫做：评论信息 Copy</span><br></pre></td></tr></table></figure><h2 id="修改sheet名称"><a href="#修改sheet名称" class="headerlink" title="修改sheet名称"></a>修改sheet名称</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sheet.title=&apos;mysheet&apos;</span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="冻结窗格"><a href="#冻结窗格" class="headerlink" title="冻结窗格"></a>冻结窗格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">如果对于太大而不能一屏显示的电子表格，“冻结”顶部的几行或最左边的几列，是很有帮助的，</span><br><span class="line">可以帮助你来判断这行或这列所对应的数据类型，比如查看你的成绩排名。</span><br><span class="line">例如，冻结的列或行表头，就算用户滚动电子表格，也是始终可见的。</span><br><span class="line">在 Openpyxl中，每个 Worksheet 对象都有一个 freeze_panes 属性，</span><br><span class="line">可以设置为一个 Cell 对象或一个单元格坐标的字符串。</span><br><span class="line">请注意，单元格上边的所有行和左边的所有列都会冻结，但单元格所在的行和列不会冻结。</span><br><span class="line">要解冻所有的单元格，就将 freeze_panes 设置为 None 或’A1’</span><br><span class="line"></span><br><span class="line">sheet.freeze_panes=‘A2’冻结第一行</span><br><span class="line">sheet.freeze_panes=‘B1’冻结第一列</span><br><span class="line">sheet.freeze_panes=‘C2’冻结第一行，第一列和第二列</span><br><span class="line">sheet.freeze_panes=None什么也不冻结</span><br><span class="line">sheet.freeze_panes=‘A1’什么也不冻结</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;冻结.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;Sheet1&apos;]</span><br><span class="line"># 冻结，固定它的位置</span><br><span class="line">sheet.freeze_panes=&apos;A2&apos; #冻结第一行</span><br><span class="line">workbook.save(&apos;冻结.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="添加筛选按钮"><a href="#添加筛选按钮" class="headerlink" title="添加筛选按钮"></a>添加筛选按钮</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;筛选.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;Sheet1&apos;]</span><br><span class="line">sheet.auto_filter.ref=sheet.dimensions</span><br><span class="line">workbook.save(&apos;筛选.xlsx&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># 筛选出所有关于41码鞋子的评论，并且将其添加到一个新的excel文件</span><br><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;课堂练习.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;Sheet1&apos;]</span><br><span class="line">rows=sheet.rows #获取所有行 一个迭代器对象</span><br><span class="line"></span><br><span class="line">lst=[] #放入41码相关的所有行</span><br><span class="line"></span><br><span class="line">for row in rows:</span><br><span class="line">  # print(row) #每一行都是一个元组 每个元组共三个数据(只写了三列数据)</span><br><span class="line">  sub_lst=[] #把sub_lst在这里定义是为了每次进来它都是空的列表，然后再赋值，不重复添加</span><br><span class="line">  if row[2].value==41:</span><br><span class="line">    # print(row)</span><br><span class="line">    for i in range(0,3):</span><br><span class="line">      sub_lst.append(row[i].value)</span><br><span class="line">    lst.append(sub_lst) #这一行的缩进也很讲究</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 存放到一个新的excel文件中 创建新的工作簿</span><br><span class="line">new_workbook=openpyxl.Workbook()</span><br><span class="line">new_sheet=new_workbook.active #获取默认的活动页(Sheet)</span><br><span class="line">for row in lst:</span><br><span class="line">  new_sheet.append(row) </span><br><span class="line">  #因为lst是双层列表，所以这样就可以将相同类型的数据放到一列</span><br><span class="line"></span><br><span class="line">new_workbook.save(&apos;所有41码鞋子.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="填充颜色"><a href="#填充颜色" class="headerlink" title="填充颜色"></a>填充颜色</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">from openpyxl.styles import PatternFill</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;填充颜色.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;Sheet1&apos;]</span><br><span class="line">cell_b5=sheet[&apos;B5&apos;]</span><br><span class="line">pattren_fill=PatternFill(fill_type=&apos;solid&apos;,fgColor=&apos;ff0000&apos;)</span><br><span class="line">cell_b5.fill=pattren_fill</span><br><span class="line"></span><br><span class="line"># workbook.save(&apos;填充颜色.xlsx&apos;)</span><br><span class="line"></span><br><span class="line"># 填充渐变色</span><br><span class="line">from openpyxl.styles import GradientFill</span><br><span class="line">cell_c3=sheet[&apos;C3&apos;]</span><br><span class="line">gradient=GradientFill(stop=(&apos;ff00ff&apos;,&apos;00ff00&apos;))</span><br><span class="line">cell_c3.fill=gradient</span><br><span class="line"></span><br><span class="line">workbook.save(&apos;填充颜色.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="正则匹配"><a href="#正则匹配" class="headerlink" title="正则匹配"></a>正则匹配</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">rows=sheet.rows</span><br><span class="line">for row in rows:</span><br><span class="line">  if re.search(&apos;.*好.*&apos;,row[0].value):</span><br><span class="line">    for i in range(0,3):</span><br><span class="line">      row[i].fill=gradient </span><br><span class="line"></span><br><span class="line">workbook.save(&apos;看看.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="设置单元格的大小"><a href="#设置单元格的大小" class="headerlink" title="设置单元格的大小"></a>设置单元格的大小</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;练习.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;Sheet1&apos;]</span><br><span class="line">sheet.row_dimensions[2].height=50</span><br><span class="line">sheet.column_dimensions[&apos;B&apos;].width=50</span><br></pre></td></tr></table></figure><h2 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sheet.merge_cells(&apos;C2:E4&apos;)</span><br><span class="line"></span><br><span class="line"># 取消合并单元格</span><br><span class="line">sheet.unmerge_cells(&apos;C2:E4&apos;)</span><br><span class="line">workbook.save(&apos;练习.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="向excel中插入图片"><a href="#向excel中插入图片" class="headerlink" title="向excel中插入图片"></a>向excel中插入图片</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">from openpyxl.drawing.image import Image</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line">sheet=workbook.create_sheet(&apos;插入图片&apos;)</span><br><span class="line"></span><br><span class="line"># 创建图片对象</span><br><span class="line">logo=Image(&apos;shulu520.com.png&apos;)</span><br><span class="line"></span><br><span class="line"># 设置宽高</span><br><span class="line">logo.height=200</span><br><span class="line">logo.width=180</span><br><span class="line"></span><br><span class="line"># 添加图片</span><br><span class="line">sheet.add_image(logo,&apos;E3&apos;)</span><br><span class="line"></span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="创建柱状图图表"><a href="#创建柱状图图表" class="headerlink" title="创建柱状图图表"></a>创建柱状图图表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">from openpyxl.chart import BarChart,Reference</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;成绩&apos;]</span><br><span class="line"></span><br><span class="line"># 创建柱状图图表对象</span><br><span class="line">chart=BarChart()</span><br><span class="line"></span><br><span class="line"># 数据引用来源</span><br><span class="line">data=Reference(worksheet=sheet,min_row=1,max_row=7,min_col=1,max_col=2)</span><br><span class="line"></span><br><span class="line"># 将数据插入图表当中</span><br><span class="line">chart.add_data(data,titles_from_data=True)</span><br><span class="line"></span><br><span class="line"># 类别的引用范围 (柱子下面的东西)</span><br><span class="line">categorys=Reference(sheet,min_row=2,max_row=7,min_col=1)</span><br><span class="line"></span><br><span class="line"># 设置类别</span><br><span class="line">chart.set_categories(categorys)</span><br><span class="line"></span><br><span class="line"># 插入图表</span><br><span class="line">sheet.add_chart(chart,&apos;F8&apos;)</span><br><span class="line"></span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="生成条形图"><a href="#生成条形图" class="headerlink" title="生成条形图"></a>生成条形图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">from openpyxl.chart import LineChart,Reference</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;我的工作簿.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;工资&apos;]</span><br><span class="line"></span><br><span class="line"># 创建图表对象</span><br><span class="line">chart=LineChart()</span><br><span class="line"></span><br><span class="line"># 数据引用来源</span><br><span class="line">data=Reference(worksheet=sheet,min_row=1,max_row=2,min_col=1,max_col=13)</span><br><span class="line"></span><br><span class="line"># # 将数据插入图表当中</span><br><span class="line">chart.add_data(data,from_rows=True,titles_from_data=True)</span><br><span class="line"></span><br><span class="line"># 类别的引用范围</span><br><span class="line">categorys=Reference(sheet,min_row=1,min_col=2,max_col=13)</span><br><span class="line"></span><br><span class="line"># 设置类别</span><br><span class="line">chart.set_categories(categorys)</span><br><span class="line"></span><br><span class="line"># 插入图表</span><br><span class="line">sheet.add_chart(chart,&apos;F8&apos;)</span><br><span class="line"></span><br><span class="line">workbook.save(&apos;我的工作簿.xlsx&apos;)</span><br></pre></td></tr></table></figure><h2 id="案例：工资明细"><a href="#案例：工资明细" class="headerlink" title="案例：工资明细"></a>案例：工资明细</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">import openpyxl</span><br><span class="line">from openpyxl.styles import Font,Alignment,Border,Side</span><br><span class="line">workbook=openpyxl.load_workbook(&apos;工资明细.xlsx&apos;)</span><br><span class="line">sheet=workbook[&apos;Sheet1&apos;]</span><br><span class="line"></span><br><span class="line"># 设置字体样式</span><br><span class="line">font=Font(name=&apos;宋体&apos;,sz=20,b=True)</span><br><span class="line">font2=Font(name=&apos;宋体&apos;,sz=12,b=True)</span><br><span class="line"></span><br><span class="line"># 设置对其方式</span><br><span class="line">alignment=Alignment(horizontal=&apos;center&apos;,vertical=&apos;center&apos;,wrap_text=True)</span><br><span class="line"></span><br><span class="line"># 边框和线条</span><br><span class="line">side=Side(style=&apos;thin&apos;,color=&apos;000000&apos;)</span><br><span class="line">border=Border(left=side,right=side,top=side,bottom=side)</span><br><span class="line"></span><br><span class="line"># 获取指定单元格的值</span><br><span class="line">a1_value=sheet[&apos;A1&apos;].value</span><br><span class="line">l2_value=sheet[&apos;L2&apos;].value</span><br><span class="line"></span><br><span class="line"># 获取指定的行</span><br><span class="line">row3=sheet[3] #第三行 </span><br><span class="line"># 每一行都是一个元组 遍历元组，拿出每一个值，放入列表</span><br><span class="line">list_value=[]</span><br><span class="line">for cell in row3:</span><br><span class="line">  list_value.append(cell.value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 将需要的内容进新的excel文件</span><br><span class="line"># print(sheet.max_row) #工作表总共的行数 int类型</span><br><span class="line"></span><br><span class="line">for i in range(4,sheet.max_row+1):</span><br><span class="line">  write_book=openpyxl.Workbook()</span><br><span class="line">  write_sheet=write_book.active</span><br><span class="line"></span><br><span class="line">  # 合并新文件标题的单元格 </span><br><span class="line">  write_sheet.merge_cells(start_row=1,end_row=1,start_column=1,end_column=12)</span><br><span class="line">  write_sheet.row_dimensions[1].height=25.8 #第一行的高度</span><br><span class="line">  write_sheet[&apos;A1&apos;]=a1_value</span><br><span class="line">  write_sheet[&apos;A1&apos;].font=font</span><br><span class="line">  write_sheet[&apos;A1&apos;].alignment=alignment</span><br><span class="line"></span><br><span class="line">  # 薪水单位的单元格样式</span><br><span class="line">  write_sheet[&apos;L2&apos;]=l2_value</span><br><span class="line">  write_sheet[&apos;L2&apos;].font=font2</span><br><span class="line"></span><br><span class="line">  # 第三行样式</span><br><span class="line">  write_sheet.append(list_value) </span><br><span class="line">  three_rows=write_sheet[3]</span><br><span class="line">  for cell in three_rows:</span><br><span class="line">    cell.font=font2</span><br><span class="line">    cell.alignment=alignment</span><br><span class="line">    cell.border=border</span><br><span class="line">    # 设置每一列列宽</span><br><span class="line">    write_sheet.column_dimensions[cell.column_letter].width=13</span><br><span class="line"></span><br><span class="line">  # 第三行的高度</span><br><span class="line">  write_sheet.row_dimensions[3].height=40.8</span><br><span class="line"></span><br><span class="line">  # 第四行样式</span><br><span class="line">  four_rows=write_sheet[4]</span><br><span class="line">  for cell in four_rows:</span><br><span class="line">    cell.font=Font(name=&apos;宋体&apos;,sz=12)</span><br><span class="line">    cell.alignment=alignment</span><br><span class="line">    cell.border=border</span><br><span class="line"></span><br><span class="line">  # 向第四行的每一格添加数据</span><br><span class="line">  lst=[&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;D&apos;,&apos;E&apos;,&apos;F&apos;,&apos;G&apos;,&apos;H&apos;,&apos;I&apos;,&apos;J&apos;,&apos;K&apos;,&apos;L&apos;]</span><br><span class="line">  for letter in lst:</span><br><span class="line">    write_sheet[letter+&apos;4&apos;].value=sheet[letter+str(i)].value</span><br><span class="line"></span><br><span class="line">  # 这两格的原内容是公式 </span><br><span class="line">  write_sheet[&apos;F4&apos;].value=&apos;=SUM(C4:E4)&apos;</span><br><span class="line">  write_sheet[&apos;L4&apos;].value=&apos;=F4-G4-H4-I4-J4-K4&apos;</span><br><span class="line"></span><br><span class="line">  # 以每一个人的姓名命名文件</span><br><span class="line">  write_book.save(&apos;工资/&apos;+write_sheet[&apos;B4&apos;].value+&apos;个人工资明细.xlsx&apos;)</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/officePython/officePython2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>officePython1</title>
      <link>https://shulu520.com/officePython/officePython1/</link>
      <guid>https://shulu520.com/officePython/officePython1/</guid>
      <pubDate>Thu, 18 Feb 2021 03:56:12 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;python -m pip install –upgrade pip 升级pip包管理器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;python -m pip install –upgrade pip 升级pip包管理器</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="Excel-无法打开文件“新建-Microsoft-Excel-工作表-xlsx”，因为文件格式或文件扩展名无效-windows-r-输入regedit-打开注册表，按如下连接指示，发现问题之所在：Excel原模板路径是wps的，按照下面教程改回来就好了"><a href="#Excel-无法打开文件“新建-Microsoft-Excel-工作表-xlsx”，因为文件格式或文件扩展名无效-windows-r-输入regedit-打开注册表，按如下连接指示，发现问题之所在：Excel原模板路径是wps的，按照下面教程改回来就好了" class="headerlink" title="Excel 无法打开文件“新建 Microsoft Excel 工作表.xlsx”，因为文件格式或文件扩展名无效  windows+r 输入regedit 打开注册表，按如下连接指示，发现问题之所在：Excel原模板路径是wps的，按照下面教程改回来就好了"></a>Excel 无法打开文件“新建 Microsoft Excel 工作表.xlsx”，因为文件格式或文件扩展名无效  windows+r 输入regedit 打开注册表，按如下连接指示，发现问题之所在：Excel原模板路径是wps的，按照下面教程改回来就好了</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/learllp/article/details/79723078?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=229aed61-e516-4d52-bab0-8fb76592087b&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control</span><br></pre></td></tr></table></figure><h2 id="os-scandir查询文件信息"><a href="#os-scandir查询文件信息" class="headerlink" title="os.scandir查询文件信息"></a>os.scandir查询文件信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import time </span><br><span class="line">import datetime </span><br><span class="line">print(os.scandir()) #得到一个可遍历的对象</span><br><span class="line">for file in os.scandir(&apos;xue3&apos;): #可以指定路径</span><br><span class="line">  print(file.stat()) # 得到好多属性</span><br><span class="line"></span><br><span class="line">  # st_size 文件的体积大小(字节)</span><br><span class="line">  # st_atime 文件最近访问时间 时间戳</span><br><span class="line">  # st_mtime 文件最近修改时间 时间戳</span><br><span class="line">  # st_ctime 文件创建时间 时间戳</span><br><span class="line"></span><br><span class="line">  print(time.ctime(file.stat().st_atime)) </span><br><span class="line">  print(time.ctime(file.stat().st_mtime))</span><br><span class="line">  print(time.ctime(file.stat().st_ctime))</span><br><span class="line">  # #Thu Feb 18 12:20:17 2021</span><br><span class="line"></span><br><span class="line">  print(datetime.datetime.fromtimestamp(file.stat().st_atime))</span><br><span class="line">  # 2021-02-18 21:09:39.046517</span><br><span class="line"></span><br><span class="line">## 某一个指定文件的信息</span><br><span class="line">print(os.stat(&apos;./xue3/3.py&apos;))</span><br></pre></td></tr></table></figure><h2 id="创建临时文件、文件夹"><a href="#创建临时文件、文件夹" class="headerlink" title="创建临时文件、文件夹"></a>创建临时文件、文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 学习爬虫的时候需要使用</span><br><span class="line"># 用完之后自动删除</span><br><span class="line">from tempfile import TemporaryFile</span><br><span class="line">file=TemporaryFile(&apos;w+&apos;)</span><br><span class="line">file.write(&apos;我最帅&apos;)</span><br><span class="line">file.seek(0) # 将光标移动到第一位</span><br><span class="line">print(file.readlines())</span><br><span class="line">print(file.name) #得到文件位置和名称</span><br><span class="line">input(&apos;我去找找临时文件在哪里：随便输入&apos;)</span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line"># 推荐这种写法</span><br><span class="line">with TemporaryFile(&apos;w+&apos;) as file:</span><br><span class="line">  file.write(&apos;你最帅了&apos;)</span><br><span class="line">  file.seek(2)</span><br><span class="line">  print(file.readlines())</span><br><span class="line"></span><br><span class="line"># 创建临时文件夹</span><br><span class="line">from tempfile import TemporaryDirectory</span><br><span class="line"></span><br><span class="line">with TemporaryDirectory() as tem_dir:</span><br><span class="line">  print(tem_dir)</span><br><span class="line">  input(&apos;我去找找它在哪里：随便输入&apos;)</span><br></pre></td></tr></table></figure><h2 id="创建文件或文件夹"><a href="#创建文件或文件夹" class="headerlink" title="创建文件或文件夹"></a>创建文件或文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"># os.mkdir(&apos;我的文件夹&apos;) #在5.py文件夹同层创建一个文件夹</span><br><span class="line"># 老师演示时创建的是与5.py文件同级的文件夹，可能是编辑器的不同</span><br><span class="line"></span><br><span class="line"># os.mkdir(&apos;xue3\我的文件夹&apos;) #创建成功了，但是有警告！！！</span><br><span class="line"></span><br><span class="line"># 先判断有没有，再创建</span><br><span class="line">if not os.path.exists(&apos;我的文件夹2&apos;):</span><br><span class="line">  os.mkdir(&apos;我的文件夹2&apos;)</span><br><span class="line"></span><br><span class="line"># 创建多层文件夹</span><br><span class="line">os.makedirs(&apos;第一层/第二层/第三层&apos;)</span><br></pre></td></tr></table></figure><h2 id="复制文件、文件夹"><a href="#复制文件、文件夹" class="headerlink" title="复制文件、文件夹"></a>复制文件、文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import shutil</span><br><span class="line"># 将当前test.py复制到xue3文件夹下</span><br><span class="line">shutil.copy(&apos;test.py&apos;,&apos;xue3&apos;) </span><br><span class="line">#复制并改名字为test2.py</span><br><span class="line">shutil.copy(&apos;test.py&apos;,&apos;xue3/test2.py&apos;) </span><br><span class="line"></span><br><span class="line"># 复制文件夹</span><br><span class="line">shutil.copytree(&apos;xue3&apos;,&apos;hh/jj/xue3&apos;)</span><br><span class="line"># 注意：hh/jj/xue3 这个xue3文件夹原先要不存在才行</span><br></pre></td></tr></table></figure><h2 id="剪贴文件、文件夹"><a href="#剪贴文件、文件夹" class="headerlink" title="剪贴文件、文件夹"></a>剪贴文件、文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import shutil</span><br><span class="line"># shutil.move(&apos;./xue3/test2.py&apos;,&apos;./&apos;) #移动文件</span><br><span class="line"></span><br><span class="line">#剪贴并重命名 </span><br><span class="line"># shutil.move(&apos;./test2.py&apos;,&apos;./xue3/move_test2.py&apos;) </span><br><span class="line"></span><br><span class="line"># 剪贴文件夹</span><br><span class="line">shutil.move(&apos;./test&apos;,&apos;./xue3&apos;)</span><br></pre></td></tr></table></figure><h2 id="删除文件或文件夹"><a href="#删除文件或文件夹" class="headerlink" title="删除文件或文件夹"></a>删除文件或文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"># 注意：利用Python会彻底删除</span><br><span class="line">os.remove(&apos;./xue3/move_test2.py&apos;)</span><br><span class="line"></span><br><span class="line"># 删除文件夹</span><br><span class="line">import shutil</span><br><span class="line">shutil.rmtree(&apos;./xue3/test&apos;)</span><br></pre></td></tr></table></figure><h2 id="文件或文件夹重命名"><a href="#文件或文件夹重命名" class="headerlink" title="文件或文件夹重命名"></a>文件或文件夹重命名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">os.rename(&apos;./xue3/8.py&apos;,&apos;./xue3/re8.py&apos;)</span><br><span class="line">os.rename(&apos;./xue&apos;,&apos;./xue1&apos;)</span><br></pre></td></tr></table></figure><h3 id="读取压缩文件包"><a href="#读取压缩文件包" class="headerlink" title="读取压缩文件包"></a>读取压缩文件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line">with zipfile.ZipFile(&apos;./hh.zip&apos;,&apos;r&apos;) as zipobj:</span><br><span class="line">  # 列出此压缩包下的所有文件和文件夹，带路径的</span><br><span class="line">  print(zipobj.namelist())</span><br><span class="line"></span><br><span class="line">  # 获取压缩包内文件信息</span><br><span class="line">  for file_name in zipobj.namelist():</span><br><span class="line">    info=zipobj.getinfo(file_name)</span><br><span class="line"></span><br><span class="line">    #file_size 压缩之前大小</span><br><span class="line">    #compress_size 压缩之后大小</span><br><span class="line">    print(file_name,info.file_size,info.compress_size)</span><br></pre></td></tr></table></figure><h2 id="解压压缩包"><a href="#解压压缩包" class="headerlink" title="解压压缩包"></a>解压压缩包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 将压缩包内单个文件解压出来</span><br><span class="line">import zipfile</span><br><span class="line">with zipfile.ZipFile(&apos;hh.zip&apos;,&apos;r&apos;) as zipobj:</span><br><span class="line">  # extract(要解压的文件路径，解压后放置位置)</span><br><span class="line">  # 注意解压后文件的相对路径不会变，会带上路径</span><br><span class="line">  # 比如要放置的位置没有hh/jj/xue3这个路径，则会创建再放入</span><br><span class="line">  zipobj.extract(&apos;hh/jj/xue3/test2.py&apos;,&apos;./&apos;)</span><br><span class="line">  print(zipobj.namelist())</span><br><span class="line"></span><br><span class="line">  # 解压出所有的文件</span><br><span class="line">  zipobj.extractall(&apos;./zip&apos;) #要放置的位置</span><br></pre></td></tr></table></figure><h2 id="创建压缩包"><a href="#创建压缩包" class="headerlink" title="创建压缩包"></a>创建压缩包</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import zipfile</span><br><span class="line">file_list=[&apos;./xue3/1.py&apos;,&apos;./xue3/2.py&apos;,&apos;./xue3/3.py&apos;]</span><br><span class="line"></span><br><span class="line"># 要创建的压缩包名叫压缩包.zip,在程序中起个别名叫zipobj,方便操作</span><br><span class="line">with zipfile.ZipFile(&apos;压缩包.zip&apos;,&apos;w&apos;) as zipobj:</span><br><span class="line">  for file in file_list:</span><br><span class="line">    zipobj.write(file)</span><br><span class="line"></span><br><span class="line"># 向压缩包中添加文件 a是append的意思</span><br><span class="line">with zipfile.ZipFile(&apos;压缩包.zip&apos;,&apos;a&apos;) as zipobj:</span><br><span class="line">  zipobj.write(&apos;./test.py&apos;)</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/officePython/officePython1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Python-文件系统</title>
      <link>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
      <guid>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
      <pubDate>Sun, 14 Feb 2021 00:49:13 GMT</pubDate>
      <description>
      
        模块化和文件系统
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="模块化、文件系统"><a href="#模块化、文件系统" class="headerlink" title="模块化、文件系统"></a>模块化、文件系统</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 一个.py文件就是一个模块</span><br><span class="line"># 导入内置模块</span><br><span class="line"># import 模块名 [as 可以起个别名使用]</span><br><span class="line"># from 模块名 import 包/模块/函数/变量/类等</span><br></pre></td></tr></table></figure><h2 id="导入自定义模块"><a href="#导入自定义模块" class="headerlink" title="导入自定义模块"></a>导入自定义模块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 学习到这里时遇到了问题，搜索得到：https://www.jianshu.com/p/6692b48c7295</span><br><span class="line"># 选择了其中一个方法:</span><br><span class="line"># 将自定义模块打包:将一揽子的模块（.py文件）放在一个文件夹里面，再添加一个__init__.py，这样这个文件夹就成为了一个包。</span><br><span class="line"># 自定义模块打包后，放在需要调用的.py文件同一个目录下</span><br><span class="line"># 注意要包名+模块名的前缀写完整</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">这是我创建的myfun包下的模块</span><br><span class="line">#calc.py</span><br><span class="line"></span><br><span class="line">def add(a,b):</span><br><span class="line">  return a+b</span><br><span class="line"></span><br><span class="line">def div(c,d):</span><br><span class="line">  return c/d</span><br><span class="line"></span><br><span class="line"># 只有当此模块以主程序运行时才会运行下面内容</span><br><span class="line"># 被其他模块导入使用时不会出现如下内容</span><br><span class="line"># 如点击本.py文件运行的时候</span><br><span class="line">if __name__ == &apos;__main__&apos;: </span><br><span class="line">  print(add(1,22)) #33</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import myfun.calc as calc #导入整个模块,并起个别名，方便使用</span><br><span class="line">print(calc.add(1,5)) #6</span><br><span class="line"></span><br><span class="line">from myfun.calc import div #导入模块下指定函数</span><br><span class="line">print(div(6,2)) #3.0</span><br></pre></td></tr></table></figure><h2 id="第三方模块的安装与使用"><a href="#第三方模块的安装与使用" class="headerlink" title="第三方模块的安装与使用"></a>第三方模块的安装与使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 安装：window + r 输入cmd进入黑窗口</span><br><span class="line"># pip install schedule(要安装的模块) </span><br><span class="line"></span><br><span class="line">import schedule</span><br><span class="line"></span><br><span class="line">def job():</span><br><span class="line">  print(&apos;你好呀！&apos;)</span><br><span class="line"></span><br><span class="line">schedule.every(3).seconds.do(job)</span><br><span class="line">while True:</span><br><span class="line">  schedule.run_pending()</span><br><span class="line">&lt;!-- 每隔三秒输出：你好呀！ --&gt;</span><br><span class="line">schedule 该模块可以应用于邮件自动化</span><br></pre></td></tr></table></figure><h2 id="python编码格式"><a href="#python编码格式" class="headerlink" title="python编码格式"></a>python编码格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># .py文件默认存储方式为utf-8</span><br><span class="line"># 修改储存方式：在.py文件最开始加一句#encoding=gbk,我这里会报错</span><br><span class="line"></span><br><span class="line"># 文件读写io操作 input output</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">file=open(&apos;xue2/c.txt&apos;,&apos;r&apos;,encoding=&apos;UTF-8&apos;)</span><br><span class="line">print(file.readlines())</span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line">file2=open(&apos;xue2/d.txt&apos;,&apos;w&apos;,encoding=&apos;UTF-8&apos;)</span><br><span class="line">file2.write(&apos;Python,shulu,啥啥啥&apos;)</span><br><span class="line">file2.close()</span><br><span class="line"></span><br><span class="line">file2=open(&apos;xue2/d.txt&apos;,&apos;a&apos;,encoding=&apos;UTF-8&apos;)</span><br><span class="line">file2.write(&apos;Python,shulu,啥啥啥&apos;)</span><br><span class="line">file2.close()</span><br></pre></td></tr></table></figure><h2 id="文件路径（相对或者绝对路径）"><a href="#文件路径（相对或者绝对路径）" class="headerlink" title="文件路径（相对或者绝对路径）"></a>文件路径（相对或者绝对路径）</h2><h3 id="rb-以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。一般用于非文本文件如图片等。"><a href="#rb-以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。一般用于非文本文件如图片等。" class="headerlink" title="rb    以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。一般用于非文本文件如图片等。"></a>rb    以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</h3><h3 id="注意：使用-open-方法一定要保证关闭文件对象，即调用-close-方法。"><a href="#注意：使用-open-方法一定要保证关闭文件对象，即调用-close-方法。" class="headerlink" title="注意：使用 open() 方法一定要保证关闭文件对象，即调用 close() 方法。"></a>注意：使用 open() 方法一定要保证关闭文件对象，即调用 close() 方法。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">src_file=open(&apos;xue2/s.jpg&apos;,&apos;rb&apos;) #源文件</span><br><span class="line">target_file=open(&apos;xue2/copy.jpg&apos;,&apos;wb&apos;) #目标文件</span><br><span class="line"></span><br><span class="line">target_file.write(src_file.read()) #读取并写入</span><br><span class="line"></span><br><span class="line">src_file.close() #关闭文件。关闭后文件不能再进行读写操作。</span><br><span class="line">target_file.close()</span><br></pre></td></tr></table></figure><h2 id="文件读写io操作open"><a href="#文件读写io操作open" class="headerlink" title="文件读写io操作open"></a>文件读写io操作open</h2><h2 id="文件路径（相对或者绝对路径）-1"><a href="#文件路径（相对或者绝对路径）-1" class="headerlink" title="文件路径（相对或者绝对路径）"></a>文件路径（相对或者绝对路径）</h2><h2 id="rb-以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。一般用于非文本文件如图片等。-1"><a href="#rb-以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。一般用于非文本文件如图片等。-1" class="headerlink" title="rb    以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。一般用于非文本文件如图片等。"></a>rb    以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。一般用于非文本文件如图片等。</h2><h2 id="注意：使用-open-方法一定要保证关闭文件对象，即调用-close-方法。-1"><a href="#注意：使用-open-方法一定要保证关闭文件对象，即调用-close-方法。-1" class="headerlink" title="注意：使用 open() 方法一定要保证关闭文件对象，即调用 close() 方法。"></a>注意：使用 open() 方法一定要保证关闭文件对象，即调用 close() 方法。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">src_file=open(&apos;xue2/s.jpg&apos;,&apos;rb&apos;) #源文件</span><br><span class="line">target_file=open(&apos;xue2/copy.jpg&apos;,&apos;wb&apos;) #目标文件</span><br><span class="line"></span><br><span class="line">target_file.write(src_file.read()) #读取并写入</span><br><span class="line"></span><br><span class="line">src_file.close() #关闭文件。关闭后文件不能再进行读写操作。</span><br><span class="line">target_file.close()</span><br></pre></td></tr></table></figure><h2 id="with语句，上写文管理器，自动释放资源"><a href="#with语句，上写文管理器，自动释放资源" class="headerlink" title="with语句，上写文管理器，自动释放资源"></a>with语句，上写文管理器，自动释放资源</h2><h4 id="这三句代码相当于上面的5行代码"><a href="#这三句代码相当于上面的5行代码" class="headerlink" title="这三句代码相当于上面的5行代码"></a>这三句代码相当于上面的5行代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with open(&apos;xue2/s.jpg&apos;,&apos;rb&apos;) as src_file:</span><br><span class="line">  with open(&apos;xue2/copy2.jpg&apos;,&apos;wb&apos;) as target_file:</span><br><span class="line">    target_file.write(src_file.read())</span><br></pre></td></tr></table></figure><h2 id="OS模块，操作系统相关的"><a href="#OS模块，操作系统相关的" class="headerlink" title="OS模块，操作系统相关的"></a>OS模块，操作系统相关的</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"># os.system(&apos;calc.exe&apos;) #打开系统自带程序</span><br><span class="line"># os.system(&apos;notepad.exe&apos;)</span><br><span class="line"></span><br><span class="line"># 直接调用可执行文件</span><br><span class="line"># os.startfile(&apos;C:\\Program Files (x86)\\Tencent\\QQ\\Bin\\qq.exe&apos;) #打开QQ</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">print(os.getcwd()) #获取当前目录路劲</span><br><span class="line"># E:\Users\lqy\Desktop\xuexiPy</span><br><span class="line"></span><br><span class="line">os.mkdir(&apos;haha&apos;) #创建文件目录</span><br><span class="line"></span><br><span class="line">os.rmdir(&apos;haha&apos;) #s删除指定目录</span><br><span class="line"></span><br><span class="line">os.chdir(&apos;E:\\Users\\lqy\\Desktop&apos;) #将path设置为当前工作目录</span><br><span class="line"># print(os.getcwd())</span><br></pre></td></tr></table></figure><h2 id="os-path模块"><a href="#os-path模块" class="headerlink" title="os.path模块"></a>os.path模块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">import os.path</span><br><span class="line"></span><br><span class="line">#获取文件或目录的绝对路径</span><br><span class="line">print(os.path.abspath(&apos;xue2\\11.py&apos;)) </span><br><span class="line"># E:\Users\lqy\Desktop\xuexiPy\xue2\11.py</span><br><span class="line"></span><br><span class="line">#路径拼接：文件和目录名之间</span><br><span class="line">print(os.path.join(&apos;E:\\Users\\lqy\\Desktop\\xuexiPy&apos;,&apos;jj.py&apos;)) </span><br><span class="line"># E:\Users\lqy\Desktop\xuexiPy\jj.py</span><br><span class="line"></span><br><span class="line">#拆分路径：文件和目录名之间</span><br><span class="line">print(os.path.split(&apos;E:\\Users\\lqy\\Desktop\\xuexiPy\\jj.py&apos;)) </span><br><span class="line"># (&apos;E:\\Users\\lqy\\Desktop\\xuexiPy&apos;, &apos;jj.py&apos;)</span><br><span class="line"></span><br><span class="line">#拆分路径：文件名和扩展名之间</span><br><span class="line">print(os.path.splitext(&apos;E:\\Users\\lqy\\Desktop\\xuexiPy\\jj.py&apos;)) </span><br><span class="line"># (&apos;E:\\Users\\lqy\\Desktop\\xuexiPy\\jj&apos;, &apos;.py&apos;)</span><br><span class="line"></span><br><span class="line"># 从一个目录中提取文件名</span><br><span class="line">print(os.path.basename(&apos;E:\\Users\\lqy\\Desktop\\xuexiPy\\jj.py&apos;))</span><br><span class="line"># jj.py</span><br><span class="line"></span><br><span class="line"># 从一个目录中提取文件路径</span><br><span class="line">print(os.path.dirname(&apos;E:\\Users\\lqy\\Desktop\\xuexiPy\\jj.py&apos;))</span><br><span class="line"># E:\Users\lqy\Desktop\xuexiPy</span><br><span class="line"></span><br><span class="line"># 判断路径是否存在 True False</span><br><span class="line">print(os.path.exists(&apos;E:\\Users\\lqy\\Desktop\\xuexiPy\\jj.py&apos;))</span><br><span class="line"></span><br><span class="line"># 是否为路径 True False</span><br><span class="line">print(os.path.exists(&apos;E:\\Users\\lqy\\Desktop\\xuexiPy&apos;))</span><br></pre></td></tr></table></figure><h2 id="搜索文件"><a href="#搜索文件" class="headerlink" title="搜索文件"></a>搜索文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">lts=os.listdir(&apos;xue2&apos;)</span><br><span class="line">for pyfile in lts:</span><br><span class="line">  if pyfile.endswith(&apos;.py&apos;): #以谁结尾</span><br><span class="line">    print(pyfile)</span><br><span class="line">for item in lts:</span><br><span class="line">  if item.startswith(&apos;c&apos;): #以谁开头</span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import glob</span><br><span class="line">print(glob.glob(&apos;xue2\\*.py&apos;)) #查找更方便</span><br></pre></td></tr></table></figure><h2 id="搜索指定文件"><a href="#搜索指定文件" class="headerlink" title="搜索指定文件"></a>搜索指定文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> #全部包括子文件夹的全找出来了 强</span><br><span class="line">import glob</span><br><span class="line">print(glob.glob(&apos;xue2/**/*.py&apos;,recursive=True))</span><br></pre></td></tr></table></figure><h2 id="glob模块"><a href="#glob模块" class="headerlink" title="glob模块"></a>glob模块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 类似正则表达式</span><br><span class="line">#  *匹配所有，任意字符</span><br><span class="line">#  ?匹配任意单个字符</span><br><span class="line">#  []匹配其中任何字符，如[1-8], [1,2,3]</span><br><span class="line">#  [!]不匹配其中任何字符,如[!8]</span><br></pre></td></tr></table></figure><h2 id="遍历文件os-listdir与os-scandir"><a href="#遍历文件os-listdir与os-scandir" class="headerlink" title="遍历文件os.listdir与os.scandir"></a>遍历文件os.listdir与os.scandir</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># print(os.listdir(&apos;xue2&apos;)) #返回指定目录下的文件嗯和目录</span><br><span class="line"></span><br><span class="line"># os.scandir() 比os.listdir强大一些</span><br><span class="line">for file in os.scandir():</span><br><span class="line">  print(file.name,file.path,file.is_dir())</span><br></pre></td></tr></table></figure><h2 id="os-walk-遍历所有文件和目录"><a href="#os-walk-遍历所有文件和目录" class="headerlink" title="os.walk 遍历所有文件和目录"></a>os.walk 遍历所有文件和目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">path=os.getcwd() #获取当前目录</span><br><span class="line">lts_files=os.walk(path) #遍历当前目录</span><br><span class="line">for dirpath,dirname,filename in lts_files:</span><br><span class="line">  # print(dirpath) #目录路径</span><br><span class="line">  # print(dirname) #目录名称</span><br><span class="line">  # print(filename) #文件名</span><br><span class="line">  for pyfiles in filename:</span><br><span class="line">    if pyfiles.endswith(&apos;.py&apos;): #输出所有的Python文件</span><br><span class="line">      print(pyfiles)</span><br></pre></td></tr></table></figure><h2 id="验证文件名是否符合指定的要求"><a href="#验证文件名是否符合指定的要求" class="headerlink" title="验证文件名是否符合指定的要求"></a>验证文件名是否符合指定的要求</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import fnmatch</span><br><span class="line">print(fnmatch.fnmatch(&apos;8.py&apos;,&apos;?.py&apos;))</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Python-面向对象</title>
      <link>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</link>
      <guid>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</guid>
      <pubDate>Thu, 11 Feb 2021 13:13:36 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="class类-面向对象"><a href="#class类-面向对象" class="headerlink" title="class类 面向对象"></a>class类 面向对象</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 类，人类，鸟类，物以类聚，类即具有某些共同特征的一些对象 </span><br><span class="line"></span><br><span class="line"># self代表类的实例，而非类</span><br><span class="line"># 类的方法与普通的函数只有一个特别的区别：</span><br><span class="line"># 它们必须有一个额外的第一个参数名称, 按照惯例它的名称是 self。</span><br><span class="line"># 与一般函数定义不同，类方法必须包含参数 self, 且为第一个参数</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">class Test: #类名 一个或多个字母组成，且每个字母开头要大写，这是规范</span><br><span class="line">  love=&apos;shu&apos; #公开属性</span><br><span class="line"></span><br><span class="line">  #类的私有属性 两个下划线开头，声明该属性为私有，</span><br><span class="line">  不能在类的外部被使用或直接访问。</span><br><span class="line">  __love=&apos;lu&apos; </span><br><span class="line"></span><br><span class="line">  # 普通方法(参数self)</span><br><span class="line">  def prt(self): </span><br><span class="line">    print(self.love) #可以访问</span><br><span class="line">    print(self.__love) #可以访问</span><br><span class="line">    print(self)</span><br><span class="line">    print(self.__class__)</span><br><span class="line"></span><br><span class="line">  # 类的私有方法</span><br><span class="line">  # 两个下划线开头，声明该方法为私有方法，只能在类的内部调用 ，不能在类的外部调用。</span><br><span class="line">  def __foo(self):         </span><br><span class="line">    print(&apos;这是私有方法&apos;)</span><br><span class="line"></span><br><span class="line">t = Test() #实例化一个对象</span><br><span class="line"></span><br><span class="line">print(t.love) #shu</span><br><span class="line"></span><br><span class="line">t.prt() </span><br><span class="line"># &lt;__main__.Test instance at 0x100771878&gt; # __main__.Test </span><br><span class="line"># 从执行结果可以很明显的看出，self 代表的是类的实例，代表当前对象的地址，而 self.class 则指向类。</span><br><span class="line"></span><br><span class="line">print(t._Test__love) 这样是可以访问类的私有方法的</span><br></pre></td></tr></table></figure><h2 id="类方法和静态方法"><a href="#类方法和静态方法" class="headerlink" title="类方法和静态方法"></a>类方法和静态方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 静态方法是类中的函数，不需要实例。</span><br><span class="line"># 主要是用来存放逻辑性的代码，主要是一些逻辑属于类，但是和类本身没有交互，</span><br><span class="line"># 即在静态方法中，不会涉及到类中的方法和属性的操作。</span><br><span class="line"></span><br><span class="line">类方法（@classmethod）和静态方法（@staticmethod）都是为了对类参数进行一些预处理的过程，</span><br><span class="line">方便使用不同参数对类的调用</span><br><span class="line">类方法推荐使用类名直接调用，当然也可以使用实例对象来调用（不推荐）</span><br><span class="line"></span><br><span class="line">静态方法，其实就是我们学过的函数，和函数唯一的区别是，静态方法定义在类这个空间（类命名空间）中，而函数则定义在程序所在的空间（全局命名空间）中。</span><br><span class="line">在实际编程中，几乎不会用到类方法和静态方法，因为我们完全可以使用函数代替它们实现想要的功能，但在一些特殊的场景中（例如工厂模式中），使用类方法和静态方法也是很不错的选择。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class Classname:</span><br><span class="line">  @staticmethod #静态方法</span><br><span class="line">  def fun():</span><br><span class="line">    print(&apos;静态方法&apos;)</span><br><span class="line"></span><br><span class="line">  @classmethod #类方法 默认有个 cls 参数，可以被类和对象调用</span><br><span class="line">  def a(cls):</span><br><span class="line">    print(&apos;类方法&apos;)</span><br><span class="line"></span><br><span class="line">  # 实例方法 默认有个self参数，且只能被实例对象调用。</span><br><span class="line">  def b(self):</span><br><span class="line">    print(&apos;普通方法&apos;)</span><br><span class="line"></span><br><span class="line">Classname.fun()</span><br><span class="line">Classname.a()</span><br><span class="line"># Classname.b() 报错</span><br><span class="line"></span><br><span class="line">C = Classname()</span><br><span class="line">C.fun()</span><br><span class="line">C.a()</span><br><span class="line">C.b()</span><br></pre></td></tr></table></figure><h2 id="给实例对象动态添加属性和方法"><a href="#给实例对象动态添加属性和方法" class="headerlink" title="给实例对象动态添加属性和方法"></a>给实例对象动态添加属性和方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Love:</span><br><span class="line">  love=&apos;shu&apos;</span><br><span class="line">  def mylove(self):</span><br><span class="line">    print(self.love)</span><br><span class="line"></span><br><span class="line">lu=Love()</span><br><span class="line">lu.mylove()</span><br><span class="line"></span><br><span class="line">def eat(): #定义一个普通函数</span><br><span class="line">  print(&apos;吃吃吃&apos;)</span><br><span class="line"></span><br><span class="line"># 给实例对象动态添加属性和方法</span><br><span class="line">lu.age=18</span><br><span class="line">lu.eat=eat</span><br><span class="line"></span><br><span class="line">lu.eat()</span><br></pre></td></tr></table></figure><h2 id="类的三大特征-封装、继承与多态"><a href="#类的三大特征-封装、继承与多态" class="headerlink" title="类的三大特征 封装、继承与多态"></a>类的三大特征 封装、继承与多态</h2><h3 id="类的封装"><a href="#类的封装" class="headerlink" title="类的封装"></a>类的封装</h3><ul><li><p>封装就像ATM机，内部复杂的结构无需使用者知道，安全外人不会对其内部进行操作</p></li><li><p>类的继承</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">class Person(): #默认继承Object类，可以不写</span><br><span class="line">  def __init__(self,name,age): #类的初始化方法</span><br><span class="line">    self.name=name</span><br><span class="line">    self.age=age</span><br><span class="line">  def info(self):</span><br><span class="line">    print(self.name,self.age)</span><br><span class="line">  </span><br><span class="line">class Student(Person): #这就是继承的书写方式</span><br><span class="line">  def __init__(self,name,age,num):</span><br><span class="line">    super().__init__(name,age) #调用父类Person的方法，继承</span><br><span class="line">    self.num=num</span><br><span class="line"></span><br><span class="line">  #方法重写</span><br><span class="line">  def info(self): </span><br><span class="line">    super().info() #继承父类方法，不满足需求，扩充或更改</span><br><span class="line">    print(self.num)</span><br><span class="line"></span><br><span class="line">class Teacher(Person):</span><br><span class="line">  def __init__(self,name,age,money):</span><br><span class="line">    super().__init__(name,age)</span><br><span class="line">    self.money=money</span><br><span class="line"></span><br><span class="line">  def info(self):</span><br><span class="line">    super().info()</span><br><span class="line">    print(self.money)</span><br><span class="line"></span><br><span class="line">stu=Student(&apos;shulu&apos;,18,80)</span><br><span class="line">stu.info() </span><br><span class="line">#shulu 18 </span><br><span class="line">#20</span><br><span class="line"></span><br><span class="line">tec=Teacher(&apos;liu&apos;,20,888888)</span><br><span class="line">tec.info() </span><br><span class="line">#liu 20</span><br><span class="line">#888888</span><br></pre></td></tr></table></figure><h2 id="多继承，一个类可以同时继承多个父类"><a href="#多继承，一个类可以同时继承多个父类" class="headerlink" title="多继承，一个类可以同时继承多个父类"></a>多继承，一个类可以同时继承多个父类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">多继承时，若父类方法名同，</span><br><span class="line">子类中默认调用的是在括号中排前的父类的方法，如下为A的方法</span><br><span class="line"></span><br><span class="line">class A():</span><br><span class="line">  pass</span><br><span class="line"></span><br><span class="line">class B():</span><br><span class="line">  pass</span><br><span class="line"></span><br><span class="line">class C(A,B): #多继承</span><br><span class="line">  pass</span><br></pre></td></tr></table></figure><h2 id="查看对象所有属性方法，内置函数dir"><a href="#查看对象所有属性方法，内置函数dir" class="headerlink" title="查看对象所有属性方法，内置函数dir()"></a>查看对象所有属性方法，内置函数dir()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">class Person():</span><br><span class="line">  pass</span><br><span class="line"></span><br><span class="line">p1=Person()</span><br><span class="line">print(dir(p1))</span><br><span class="line"># 结果为 </span><br><span class="line"># [&apos;__class__&apos;, &apos;__delattr__&apos;, </span><br><span class="line"># &apos;__dict__&apos;, &apos;__dir__&apos;, &apos;__doc__&apos;,</span><br><span class="line"># &apos;__eq__&apos;, &apos;__format__&apos;, &apos;__ge__&apos;, </span><br><span class="line"># &apos;__getattribute__&apos;, &apos;__gt__&apos;, &apos;__hash__&apos;, </span><br><span class="line"># &apos;__init__&apos;, &apos;__init_subclass__&apos;, &apos;__le__&apos;,</span><br><span class="line">#  &apos;__lt__&apos;, &apos;__module__&apos;, &apos;__ne__&apos;, &apos;__new__&apos;,</span><br><span class="line">#  &apos;__reduce__&apos;, &apos;__reduce_ex__&apos;, &apos;__repr__&apos;, </span><br><span class="line"># &apos;__setattr__&apos;, &apos;__sizeof__&apos;, &apos;__str__&apos;,</span><br><span class="line">#  &apos;__subclasshook__&apos;, &apos;__weakref__&apos;]</span><br></pre></td></tr></table></figure><h2 id="重写str方法-返回一个对象的描述信息"><a href="#重写str方法-返回一个对象的描述信息" class="headerlink" title="重写str方法 返回一个对象的描述信息"></a>重写<strong>str</strong>方法 返回一个对象的描述信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># __str__方法需要返回一个字符串，当做这个对象的描写</span><br><span class="line"># 当使用print输出对象的时候，若重写__str__方法，就会打印从在这个方法中return的数据</span><br><span class="line"># 帮我们查看对象的信息</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">class Student():</span><br><span class="line">  def __init__(self,name,age):</span><br><span class="line">    self.name=name</span><br><span class="line">    self.age=age</span><br><span class="line">  def __str__(self):</span><br><span class="line">    return &apos;我的名字叫&#123;0&#125;,今年&#123;1&#125;岁了&apos;.format(self.name,self.age)</span><br><span class="line"></span><br><span class="line">stu=Student(&apos;shu&apos;,18)</span><br><span class="line">print(stu) #结果为：</span><br><span class="line"># 没重写之前： &lt;__main__.Student object at 0x0000027798F25EB0&gt;</span><br><span class="line"># 重写之后：我的名字叫shu,今年18岁了</span><br></pre></td></tr></table></figure><h2 id="多态-让代码更加通用"><a href="#多态-让代码更加通用" class="headerlink" title="多态,让代码更加通用"></a>多态,让代码更加通用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Python中多态的特点</span><br><span class="line"># 1、只关心对象的实例方法是否同名，不关心对象所属的类型；</span><br><span class="line"># 2、对象所属的类之间，继承关系可有可无；(对象所属的类之间有继承关系应用更广)</span><br><span class="line"># 3、多态的好处可以增加代码的外部调用灵活度，让代码更加通用，兼容性比较强；</span><br><span class="line"># 4、多态是调用方法的技巧，不会影响到类的内部设计。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 调用同一个函数fly(), 传入不同的参数（对象），可以达成不同的功能</span><br><span class="line"></span><br><span class="line">class Duck(object):  # 鸭类</span><br><span class="line">  def fly(self):</span><br><span class="line">    print(&quot;鸭子沿着地面飞起来了&quot;)</span><br><span class="line"></span><br><span class="line">class Swan(object):  # 天鹅类</span><br><span class="line">  def fly(self):</span><br><span class="line">    print(&quot;天鹅在空中翱翔&quot;)</span><br><span class="line"></span><br><span class="line">class Plane(object): # 飞机类</span><br><span class="line">  def fly(self):</span><br><span class="line">    print(&quot;飞机隆隆地起飞了&quot;)</span><br><span class="line"></span><br><span class="line">def fly(obj): # 实现飞的功能函数</span><br><span class="line">  obj.fly()</span><br><span class="line"></span><br><span class="line">duck = Duck()</span><br><span class="line">swan = Swan()</span><br><span class="line">plane = Plane()</span><br><span class="line"></span><br><span class="line">fly(duck) #鸭子沿着地面飞起来了</span><br><span class="line">fly(swan) #天鹅在空中翱翔</span><br><span class="line">fly(plane) #飞机隆隆地起飞了</span><br></pre></td></tr></table></figure><h2 id="Python-中的new和init的区别"><a href="#Python-中的new和init的区别" class="headerlink" title="Python 中的new和init的区别"></a>Python 中的<strong>new</strong>和<strong>init</strong>的区别</h2><h3 id="二者均是Python面向对象语言中的函数，new比较少用，init则用的比较多。"><a href="#二者均是Python面向对象语言中的函数，new比较少用，init则用的比较多。" class="headerlink" title="二者均是Python面向对象语言中的函数，new比较少用，init则用的比较多。"></a>二者均是Python面向对象语言中的函数，<strong>new</strong>比较少用，<strong>init</strong>则用的比较多。</h3><h3 id="new是在实例创建之前被调用的，因为它的任务就是创建实例然后返回该实例对象，是个静态方法。"><a href="#new是在实例创建之前被调用的，因为它的任务就是创建实例然后返回该实例对象，是个静态方法。" class="headerlink" title="new是在实例创建之前被调用的，因为它的任务就是创建实例然后返回该实例对象，是个静态方法。"></a><strong>new</strong>是在实例创建之前被调用的，因为它的任务就是创建实例然后返回该实例对象，是个静态方法。</h3><h3 id="init是当实例对象创建完成后被调用的，然后设置对象属性的一些初始值，通常用在初始化一个类实例的时候。是一个实例方法。"><a href="#init是当实例对象创建完成后被调用的，然后设置对象属性的一些初始值，通常用在初始化一个类实例的时候。是一个实例方法。" class="headerlink" title="init是当实例对象创建完成后被调用的，然后设置对象属性的一些初始值，通常用在初始化一个类实例的时候。是一个实例方法。"></a><strong>init</strong>是当实例对象创建完成后被调用的，然后设置对象属性的一些初始值，通常用在初始化一个类实例的时候。是一个实例方法。</h3><h3 id="也就是：-new先被调用，init后被调用，new的返回值（实例）将传递给init方法的第一个参数，然后init给这个实例设置一些参数。"><a href="#也就是：-new先被调用，init后被调用，new的返回值（实例）将传递给init方法的第一个参数，然后init给这个实例设置一些参数。" class="headerlink" title="也就是： new先被调用，init后被调用，new的返回值（实例）将传递给init方法的第一个参数，然后init给这个实例设置一些参数。"></a>也就是： <strong>new</strong>先被调用，<strong>init</strong>后被调用，<strong>new</strong>的返回值（实例）将传递给<strong>init</strong>方法的第一个参数，然后<strong>init</strong>给这个实例设置一些参数。</h3><h2 id="参数self与cls"><a href="#参数self与cls" class="headerlink" title="参数self与cls"></a>参数self与cls</h2><h3 id="self是类的实例对象，cls是类对象"><a href="#self是类的实例对象，cls是类对象" class="headerlink" title="self是类的实例对象，cls是类对象"></a>self是类的实例对象，cls是类对象</h3><h2 id="Python-直接赋值、浅拷贝和深度拷贝解析"><a href="#Python-直接赋值、浅拷贝和深度拷贝解析" class="headerlink" title="Python 直接赋值、浅拷贝和深度拷贝解析"></a>Python 直接赋值、浅拷贝和深度拷贝解析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 直接赋值：其实就是对象的引用（别名）。</span><br><span class="line"># b = a: 赋值引用，a 和 b 都指向同一个对象。</span><br><span class="line"></span><br><span class="line"># 浅拷贝(copy)：拷贝父对象，不会拷贝对象的内部的子对象。</span><br><span class="line"># b = a.copy(): 浅拷贝, a 和 b 是一个独立的对象，但他们会引用同一个子对象。</span><br><span class="line"></span><br><span class="line"># 深拷贝(deepcopy)：copy 模块的 deepcopy 方法，完全拷贝了父对象及其子对象。</span><br><span class="line"># b = copy.deepcopy(a): 深度拷贝, a 和 b 完全拷贝了父对象及其子对象，两者是完全独立的。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import copy</span><br><span class="line">a = [1, 2, 3, [&apos;a&apos;, &apos;b&apos;]] #原始对象</span><br><span class="line"> </span><br><span class="line">b = a                     #赋值，传对象的引用</span><br><span class="line">c = copy.copy(a)          #对象拷贝，浅拷贝</span><br><span class="line">d = copy.deepcopy(a)      #对象拷贝，深拷贝</span><br><span class="line"> </span><br><span class="line">a.append(4)               #修改原对象a (父对象)</span><br><span class="line">a[3].append(&apos;c&apos;)          #修改原对象a中的[&apos;a&apos;, &apos;b&apos;]数组对象 (子对象)</span><br><span class="line"> </span><br><span class="line">print( &apos;a = &apos;, a )</span><br><span class="line">print( &apos;b = &apos;, b )</span><br><span class="line">print( &apos;c = &apos;, c )</span><br><span class="line">print( &apos;d = &apos;, d )</span><br><span class="line"></span><br><span class="line"># a =  [1, 2, 3, [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;], 4]</span><br><span class="line"># b =  [1, 2, 3, [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;], 4]</span><br><span class="line"># c =  [1, 2, 3, [&apos;a&apos;, &apos;b&apos;, &apos;c&apos;]]</span><br><span class="line"># d =  [1, 2, 3, [&apos;a&apos;, &apos;b&apos;]]</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Python-函数</title>
      <link>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E5%87%BD%E6%95%B0/</link>
      <guid>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E5%87%BD%E6%95%B0/</guid>
      <pubDate>Wed, 10 Feb 2021 14:34:13 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h2 id="总结调用函数时，进行参数的传递"><a href="#总结调用函数时，进行参数的传递" class="headerlink" title="总结调用函数时，进行参数的传递"></a>总结调用函数时，进行参数的传递</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 若果是不可变对象(数字、字符串、元组)，在函数体内对形参的修改不会影响实参</span><br><span class="line"># 若果是可变对象(列表、字典、集合)，在函数体内对形参的修改会影响实参</span><br><span class="line"></span><br><span class="line">def fun1(arg1,arg2):</span><br><span class="line">  print(arg1)</span><br><span class="line">  print(arg2)</span><br><span class="line">  arg1=100</span><br><span class="line">  arg2.append(10)</span><br><span class="line">  print(arg1)</span><br><span class="line">  print(arg2)</span><br><span class="line"></span><br><span class="line">n1=12</span><br><span class="line">n2=[11,33,44]</span><br><span class="line"></span><br><span class="line">fun1(n1,n2)</span><br><span class="line">print(n1) #12</span><br><span class="line">print(n2) #[11, 33, 44, 10]</span><br></pre></td></tr></table></figure><h2 id="函数的返回值，是否需要自己决定"><a href="#函数的返回值，是否需要自己决定" class="headerlink" title="函数的返回值，是否需要自己决定"></a>函数的返回值，是否需要自己决定</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 函数的返回值为1个值时，返回值为原类型</span><br><span class="line"># 函数的返回值为多个值时，返回值为元组类型</span><br><span class="line"></span><br><span class="line">n3=88</span><br><span class="line">n4=[22,45,66]</span><br><span class="line">def fun2(arg1,arg2):</span><br><span class="line">  arg1=100</span><br><span class="line">  arg2.append(10)</span><br><span class="line">  print(arg1)</span><br><span class="line">  print(arg2)</span><br><span class="line">  return n3,n4</span><br><span class="line"></span><br><span class="line">print(fun2(n3,n4)) #输出函数的返回值 (88, [22, 45, 66, 10])</span><br></pre></td></tr></table></figure><h2 id="设置函数的默认参数值"><a href="#设置函数的默认参数值" class="headerlink" title="设置函数的默认参数值"></a>设置函数的默认参数值</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">def fun3(a,b=8):</span><br><span class="line">  print(a,b)</span><br><span class="line"></span><br><span class="line">fun3(1) #1 8</span><br><span class="line">fun3(1,32) #1 32</span><br><span class="line"></span><br><span class="line">## 个数可变的位置参数</span><br><span class="line">def fun4(*args):</span><br><span class="line">  print(args)</span><br><span class="line"></span><br><span class="line">fun4(1) #(1,)</span><br><span class="line">fun4(1,2,3) #(1, 2, 3)</span><br><span class="line"></span><br><span class="line">## 个数可变的关键字参数</span><br><span class="line">def fun5(**args):</span><br><span class="line">  print(args)</span><br><span class="line"></span><br><span class="line">fun5(a=1) #&#123;&apos;a&apos;: 1&#125;</span><br><span class="line">fun5(a=1,b=2,c=3) #&#123;&apos;a&apos;: 1, &apos;b&apos;: 2, &apos;c&apos;: 3&#125;</span><br><span class="line"></span><br><span class="line">## 个数可变得位置形参与个数可变得关键字形参都有时，</span><br><span class="line"># 个数可变的位置形参在前，不然报错</span><br><span class="line">def fun6(*arg1,**arg2):</span><br><span class="line">  print(arg1,arg2)</span><br><span class="line"></span><br><span class="line">fun6(1,4) #(1, 4) &#123;&#125;</span><br><span class="line">fun6(a=22,b=33) #() &#123;&apos;a&apos;: 22, &apos;b&apos;: 33&#125;</span><br><span class="line">fun6(1,3,a=121,c=88) #(1, 3) &#123;&apos;a&apos;: 121, &apos;c&apos;: 88&#125;</span><br></pre></td></tr></table></figure><h2 id="函数传参，传列表，字典"><a href="#函数传参，传列表，字典" class="headerlink" title="函数传参，传列表，字典"></a>函数传参，传列表，字典</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def fun7(x,y,z):</span><br><span class="line">  print(x,y,z)</span><br><span class="line"></span><br><span class="line">ls=[1,2,3]</span><br><span class="line">d=&#123;&apos;x&apos;:&apos;shu&apos;,&apos;y&apos;:18,&apos;z&apos;:&apos;men&apos;&#125;</span><br><span class="line"></span><br><span class="line">fun7(*ls) #1 2 3 展开列表元素并传入实参</span><br><span class="line">fun7(**d) #shu 18 men 展开字典元素并传入实参</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def fun8(a,b,*,c,d): #从*之后的参数只能采用关键字传参</span><br><span class="line">  print(a,b,c,d)</span><br><span class="line"></span><br><span class="line">fun8(1,2,c=3,d=4) #1 2 3 4</span><br></pre></td></tr></table></figure><h2 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 计算阶乘</span><br><span class="line">def fun1(n):</span><br><span class="line">  if n==1:</span><br><span class="line">    return 1</span><br><span class="line">  else:</span><br><span class="line">    res=n*fun1(n-1)</span><br><span class="line">    return res</span><br><span class="line"></span><br><span class="line">print(fun1(5)) #120</span><br></pre></td></tr></table></figure><h1 id="计算菲波拉契数列"><a href="#计算菲波拉契数列" class="headerlink" title="计算菲波拉契数列"></a>计算菲波拉契数列</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def fun2(n):</span><br><span class="line">  if n==1:</span><br><span class="line">    return 1</span><br><span class="line">  elif n==2:</span><br><span class="line">    return 1</span><br><span class="line">  else:</span><br><span class="line">    return fun2(n-1)+fun2(n-2)</span><br><span class="line"></span><br><span class="line">print(fun2(6)) #8</span><br></pre></td></tr></table></figure><h2 id="函数的异常处理机制"><a href="#函数的异常处理机制" class="headerlink" title="函数的异常处理机制"></a>函数的异常处理机制</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 一个except子句可以同时处理多个异常，这些异常将被放在一个括号里成为一个元组。</span><br><span class="line"># 使用 else 子句比把所有的语句都放在 try 子句里面要好，</span><br><span class="line"># 这样可以避免一些意想不到，而 except 又无法捕获的异常。</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">  try:</span><br><span class="line">    x=int(input(&apos;请输入一个数字：&apos;)) #执行代码</span><br><span class="line">  except (ValueError, RuntimeError, TypeError, NameError, SyntaxError, KeyError, IndexError,ZeroDivisionError):</span><br><span class="line">    print(&apos;请输入一个正确的数字&apos;) #发生异常时执行的代码</span><br><span class="line">  else: </span><br><span class="line">    y=x+1 #没有异常时执行的代码</span><br><span class="line">    print(y)</span><br><span class="line">  finally: #无论异常是否发生都会执行：</span><br><span class="line">    print(&apos;你最帅&apos;)</span><br><span class="line"></span><br><span class="line"># finally能用来释放try块中申请的资源</span><br></pre></td></tr></table></figure><h2 id="打印异常信息，可用于以后打印日志等"><a href="#打印异常信息，可用于以后打印日志等" class="headerlink" title="打印异常信息，可用于以后打印日志等"></a>打印异常信息，可用于以后打印日志等</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import traceback</span><br><span class="line">try:</span><br><span class="line">  print(1/0)</span><br><span class="line">except:</span><br><span class="line">  traceback.print_exc() #ZeroDivisionError: division by zero</span><br></pre></td></tr></table></figure><h2 id="lambda匿名函数"><a href="#lambda匿名函数" class="headerlink" title="lambda匿名函数"></a>lambda匿名函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 用完即释放内存</span><br><span class="line"># 用法为：lambda 一个或多个参数: 表达式内容</span><br><span class="line">a=lambda x:x+x</span><br><span class="line"></span><br><span class="line">print(a(8)) #16</span><br></pre></td></tr></table></figure><h2 id="random随机函数"><a href="#random随机函数" class="headerlink" title="random随机函数"></a>random随机函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">#[0,1) 的随机数</span><br><span class="line">print(random.random()) </span><br><span class="line"></span><br><span class="line"> #[10,100]的随机数</span><br><span class="line">print(random.randint(10,100))</span><br><span class="line"></span><br><span class="line">#[10,100) 步长为5的随机数</span><br><span class="line">print(random.randrange(10,100,5)) </span><br><span class="line"></span><br><span class="line"># 从序列中随机选取一个</span><br><span class="line">lst=[11,2,33,1,44]</span><br><span class="line">print(random.choice(lst))</span><br><span class="line"></span><br><span class="line"># 将序列元素随机排序</span><br><span class="line"># 把原列表随机排序，没有rutern值</span><br><span class="line">random.shuffle(lst) </span><br><span class="line">print(lst)</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E5%87%BD%E6%95%B0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Python-字符串</title>
      <link>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <guid>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <pubDate>Wed, 10 Feb 2021 00:57:13 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="目前所学不可变序列为字符串和元组"><a href="#目前所学不可变序列为字符串和元组" class="headerlink" title="目前所学不可变序列为字符串和元组"></a>目前所学不可变序列为字符串和元组</h2><h2 id="拼接字符串时join-方法比-效率高"><a href="#拼接字符串时join-方法比-效率高" class="headerlink" title="拼接字符串时join()方法比+效率高"></a>拼接字符串时join()方法比+效率高</h2><h2 id="字符串查询操作"><a href="#字符串查询操作" class="headerlink" title="字符串查询操作"></a>字符串查询操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">str1=&apos;shulu520u&apos;</span><br><span class="line">print(str1.index(&apos;u&apos;)) #2 第一次出现的位置</span><br><span class="line">print(str1.rindex(&apos;u&apos;)) #8 最后一次出现的位置</span><br><span class="line"># print(str1.index(&apos;m&apos;)) #substring not found</span><br><span class="line"># print(str1.rindex(&apos;m&apos;)) #substring not found</span><br><span class="line"></span><br><span class="line">print(str1.find(&apos;u&apos;)) #2 第一次出现的位置</span><br><span class="line">print(str1.rfind(&apos;u&apos;)) #8 最后一次出现的位置</span><br><span class="line">print(str1.find(&apos;m&apos;)) #-1 不会报错</span><br><span class="line">print(str1.rfind(&apos;m&apos;)) #-1 不会报错</span><br></pre></td></tr></table></figure><h2 id="字符串大小写转换"><a href="#字符串大小写转换" class="headerlink" title="字符串大小写转换"></a>字符串大小写转换</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">str2=&apos;ShuluIloveYou&apos;</span><br><span class="line"></span><br><span class="line">print(str2.upper()) #SHULUILOVEYOU</span><br><span class="line">print(str2.lower()) #shuluiloveyou</span><br><span class="line"></span><br><span class="line">print(str2.swapcase()) #sHULUiLOVEyOU 大小取反</span><br><span class="line"></span><br><span class="line">str3=&apos;hu,lu,You&apos;</span><br><span class="line">print(str3.title()) #Hu,Lu,You 每一个单词首字母大写，其余小写</span><br><span class="line">print(str3.capitalize()) #Hu,lu,you 第一个字符大写，其余小写</span><br></pre></td></tr></table></figure><h2 id="字符串对齐操作"><a href="#字符串对齐操作" class="headerlink" title="字符串对齐操作"></a>字符串对齐操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">str1=&apos;python&apos;</span><br><span class="line"># 居中对齐，指定字符串的长度和不够指定长度时的填充内容</span><br><span class="line"># 默认填充内容为空格</span><br><span class="line"># 若指定长度小于实际长度则返回字符串本身</span><br><span class="line">print(str1.center(10,&apos;*&apos;)) #**python**</span><br><span class="line"></span><br><span class="line"># 左对齐</span><br><span class="line">print(str1.ljust(10,&apos;&amp;&apos;)) #python&amp;&amp;&amp;&amp;</span><br><span class="line"></span><br><span class="line"># 右对齐</span><br><span class="line">print(str1.rjust(10,&apos;$&apos;)) #$$$$python</span><br><span class="line"></span><br><span class="line"># 右对齐，只有一个参数，不到指定长度用0填充</span><br><span class="line">print(str1.zfill(10)) #0000python</span><br></pre></td></tr></table></figure><h2 id="字符串的劈分操作"><a href="#字符串的劈分操作" class="headerlink" title="字符串的劈分操作"></a>字符串的劈分操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#split() 通过指定分隔符对字符串进行切片，</span><br><span class="line"># 如果第二个参数 num 有指定值，则分割为 num+1 个子字符串。</span><br><span class="line"># 返回一个列表，将分隔符换为逗号，默认分隔符为空格</span><br><span class="line">str2=&apos;nihaoyaiw&apos;</span><br><span class="line">str22=&apos;ni hao ya iw&apos;</span><br><span class="line">print(str2.split(&apos;i&apos;)) #[&apos;n&apos;, &apos;haoya&apos;, &apos;w&apos;]</span><br><span class="line">print(str22.split()) #[&apos;ni&apos;, &apos;hao&apos;, &apos;ya&apos;, &apos;iw&apos;]</span><br></pre></td></tr></table></figure><h2 id="计数指定字符串在原字符串中出现的个数"><a href="#计数指定字符串在原字符串中出现的个数" class="headerlink" title="计数指定字符串在原字符串中出现的个数"></a>计数指定字符串在原字符串中出现的个数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s3=&apos;shululoveu&apos;</span><br><span class="line">print(s3.count(&apos;u&apos;)) #3</span><br><span class="line">print(s3.count(&apos;u&apos;,1,4)) #1 指定范围内u出现的次数</span><br></pre></td></tr></table></figure><h2 id="rstrip-删除字符串末尾的指定字符（默认为空格）"><a href="#rstrip-删除字符串末尾的指定字符（默认为空格）" class="headerlink" title="rstrip() 删除字符串末尾的指定字符（默认为空格）"></a>rstrip() 删除字符串末尾的指定字符（默认为空格）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s4=&apos;   ss dsds, shu   &apos;</span><br><span class="line">print(s4.rstrip()) #   ss dsds, shu</span><br><span class="line"></span><br><span class="line">s5=&apos;   ss dsds, shu***&apos;</span><br><span class="line">print(s4.rstrip(&apos;*&apos;)) #   ss dsds, shu 删除末尾*</span><br></pre></td></tr></table></figure><h2 id="lstrip-删除字符串开头的指定字符（默认为空格）用法同rstrip"><a href="#lstrip-删除字符串开头的指定字符（默认为空格）用法同rstrip" class="headerlink" title="lstrip() 删除字符串开头的指定字符（默认为空格）用法同rstrip"></a>lstrip() 删除字符串开头的指定字符（默认为空格）用法同rstrip</h2><h2 id="字符串替换replace-old-new"><a href="#字符串替换replace-old-new" class="headerlink" title="字符串替换replace(old,new)"></a>字符串替换replace(old,new)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s6=&apos;shuluhahaha&apos;</span><br><span class="line">print(s6.replace(&apos;u&apos;,&apos;*&apos;)) #sh*l*hahaha</span><br><span class="line">print(s6.replace(&apos;h&apos;,&apos;%&apos;,2)) #s%ulu%ahaha 最多替换2个</span><br></pre></td></tr></table></figure><h2 id="len-是内置函数，返回对象的长度（元素个数）。"><a href="#len-是内置函数，返回对象的长度（元素个数）。" class="headerlink" title="len()是内置函数，返回对象的长度（元素个数）。"></a>len()是内置函数，返回对象的长度（元素个数）。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 实参可以是序列（如 string、bytes、tuple、list 或 range 等）</span><br><span class="line"># 或集合（如 dictionary、set 或 frozen set 等）。</span><br><span class="line"># len()不是字符串类的方法</span><br><span class="line">print(len(s6)) #11</span><br></pre></td></tr></table></figure><h2 id="字符串连接join"><a href="#字符串连接join" class="headerlink" title="字符串连接join()"></a>字符串连接join()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">s7=&apos;swww,lu&apos;</span><br><span class="line">print(&apos;@&apos;.join(s7)) #s@w@w@w@,@l@u</span><br><span class="line"></span><br><span class="line">## 将列表或元组中的字符串拼接成一个字符串</span><br><span class="line">ls1=[&apos;shu&apos;,&apos;lu&apos;,&apos;520&apos;]</span><br><span class="line">print(&apos;^&apos;.join(ls1)) #shu^lu^520</span><br><span class="line">print(&apos;&apos;.join(ls1)) #shulu520</span><br><span class="line"></span><br><span class="line">t=(&apos;shu&apos;,&apos;lu&apos;,&apos;520&apos;)</span><br><span class="line">print(&apos;*&apos;.join(ls1)) #shu*lu*520</span><br></pre></td></tr></table></figure><h2 id="字符串的判断"><a href="#字符串的判断" class="headerlink" title="字符串的判断"></a>字符串的判断</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s9=&apos;shu520&apos;</span><br><span class="line"># 是否全部由字母或数字组成</span><br><span class="line">print(s9.isalnum()) #True </span><br><span class="line"></span><br><span class="line"># 只包含数字</span><br><span class="line">s0=&apos;520&apos;</span><br><span class="line">print(s0.isdigit()) #True</span><br></pre></td></tr></table></figure><h2 id="字符串的比较-字符串有驻留机制"><a href="#字符串的比较-字符串有驻留机制" class="headerlink" title="字符串的比较(字符串有驻留机制)"></a>字符串的比较(字符串有驻留机制)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s11=&apos;love&apos;</span><br><span class="line">s12=&apos;love&apos;</span><br><span class="line"># == 比较的是值的比较</span><br><span class="line">print(s11==s12) #True</span><br><span class="line"></span><br><span class="line"># == 比较的是id的比较</span><br><span class="line">print(s11 is s12) #True</span><br></pre></td></tr></table></figure><h2 id="字符串的切片操作"><a href="#字符串的切片操作" class="headerlink" title="字符串的切片操作"></a>字符串的切片操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s22=&apos;shululove&apos;</span><br><span class="line">print(s22[2]) #u</span><br><span class="line">print(s22[2:5]) #ulu</span><br><span class="line">print(s22[::2]) #suuoe</span><br><span class="line">print(s22[::-2]) #eouus</span><br></pre></td></tr></table></figure><h2 id="格式化字符串"><a href="#格式化字符串" class="headerlink" title="格式化字符串"></a>格式化字符串</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 使用%做占位符,s表示字符串,d表示数字</span><br><span class="line">name=&apos;lu&apos;</span><br><span class="line">age=18</span><br><span class="line">print(&apos;我叫%s,今年%d岁&apos; %(name,age)) #我叫lu,今年18岁</span><br><span class="line"></span><br><span class="line">print(f&apos;我叫&#123;name&#125;,今年&#123;age&#125;岁&apos;) #我叫lu,今年18岁</span><br><span class="line"></span><br><span class="line">print(&apos;我叫&#123;0&#125;，今年&#123;1&#125;岁&apos;.format(name,age)) ##我叫lu,今年18岁</span><br></pre></td></tr></table></figure><h2 id="字符串的编码解码"><a href="#字符串的编码解码" class="headerlink" title="字符串的编码解码"></a>字符串的编码解码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># encode()</span><br><span class="line">str100=&apos;爱&apos;</span><br><span class="line">str200=str100.encode()</span><br><span class="line">print(str200) #b&apos;\xe7\x88\xb1&apos;</span><br><span class="line">print(str200.decode()) #爱</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E5%AD%97%E7%AC%A6%E4%B8%B2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Python-数据类型</title>
      <link>https://shulu520.com/Python%E8%AF%AD%E6%B3%953/Python-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <guid>https://shulu520.com/Python%E8%AF%AD%E6%B3%953/Python-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <pubDate>Tue, 09 Feb 2021 08:42:25 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="字典-key-value-键值对形式"><a href="#字典-key-value-键值对形式" class="headerlink" title="字典{key:value}键值对形式"></a>字典{key:value}键值对形式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#创建方式</span><br><span class="line">love=&#123;&apos;name&apos;:&apos;yachan&apos;,&apos;age&apos;:18&#125; #直接花括号</span><br><span class="line">print(love,type(love)) #&#123;&apos;name&apos;: &apos;yachan&apos;, &apos;age&apos;: 18&#125; &lt;class &apos;dict&apos;&gt;)</span><br><span class="line"></span><br><span class="line">student=dict(&#123;&apos;name&apos;:&apos;shulu&apos;,&apos;age&apos;:19&#125;) #内置函数dict(&#123;&#125;)</span><br><span class="line">print(student) #&#123;&apos;name&apos;: &apos;shulu&apos;, &apos;age&apos;: 19&#125;</span><br></pre></td></tr></table></figure><h2 id="获取字典中的元素"><a href="#获取字典中的元素" class="headerlink" title="获取字典中的元素"></a>获取字典中的元素</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(love[&apos;name&apos;])</span><br><span class="line">print(love[&apos;money&apos;]) #KeyError: &apos;money&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(student.get(&apos;age&apos;))</span><br><span class="line">print(student.get(&apos;money&apos;)) #None 不会报错</span><br><span class="line">print(student.get(&apos;cat&apos;,&apos;bob&apos;)) #找不到，给一个默认值</span><br><span class="line">print(student) #但是不会影响原字典，只是查询的时候给一个反馈</span><br></pre></td></tr></table></figure><h2 id="key键的判断"><a href="#key键的判断" class="headerlink" title="key键的判断"></a>key键的判断</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">love=&#123;&apos;name&apos;:&apos;yachan&apos;,&apos;age&apos;:18&#125;</span><br><span class="line"></span><br><span class="line">print(&apos;age&apos; in love)</span><br><span class="line">print(&apos;money&apos; in love)</span><br><span class="line">print(&apos;money&apos; not in love)</span><br></pre></td></tr></table></figure><h2 id="增加键值对"><a href="#增加键值对" class="headerlink" title="增加键值对"></a>增加键值对</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">love[&apos;money&apos;]=8888</span><br><span class="line">print(love)</span><br></pre></td></tr></table></figure><h2 id="修改键值对"><a href="#修改键值对" class="headerlink" title="修改键值对"></a>修改键值对</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">love[&apos;age&apos;]=20</span><br><span class="line">print(love)</span><br></pre></td></tr></table></figure><h2 id="删除key"><a href="#删除key" class="headerlink" title="删除key"></a>删除key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">del love[&apos;age&apos;]</span><br><span class="line">print(love)</span><br></pre></td></tr></table></figure><h2 id="清空元素"><a href="#清空元素" class="headerlink" title="清空元素"></a>清空元素</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">love.clear()</span><br><span class="line">print(love) #&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="获取字典视图"><a href="#获取字典视图" class="headerlink" title="获取字典视图"></a>获取字典视图</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">love=&#123;&apos;name&apos;:&apos;yachan&apos;,&apos;age&apos;:18&#125;</span><br><span class="line">print(love.keys())</span><br><span class="line">print(type(love.keys()))</span><br><span class="line">print(list(love.keys())) #[&apos;name&apos;, &apos;age&apos;]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(love.values())</span><br><span class="line">print(type(love.values()))</span><br><span class="line">print(list(love.values())) #[&apos;yachan&apos;, 18]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(love.items())</span><br><span class="line">print(type(love.items()))</span><br><span class="line">print(list(love.items())) </span><br><span class="line">#得到元组数据类型[(&apos;name&apos;, &apos;yachan&apos;), (&apos;age&apos;, 18)]</span><br></pre></td></tr></table></figure><h2 id="字典元素的遍历"><a href="#字典元素的遍历" class="headerlink" title="字典元素的遍历"></a>字典元素的遍历</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">love=&#123;&apos;name&apos;:&apos;yachan&apos;,&apos;age&apos;:18,&apos;money&apos;:88888&#125;</span><br><span class="line">for item in love:</span><br><span class="line">  print(item) #key</span><br><span class="line">  print(love[item])</span><br><span class="line">  print(love.get(item))</span><br></pre></td></tr></table></figure><h2 id="字典生成式zip-a-b-函数加for循环实现"><a href="#字典生成式zip-a-b-函数加for循环实现" class="headerlink" title="字典生成式zip(a,b)函数加for循环实现"></a>字典生成式zip(a,b)函数加for循环实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">k=[&apos;name&apos;,&apos;age&apos;,&apos;money&apos;] #生成的字典是根据键或值短的那一个</span><br><span class="line">v=[&apos;yachan&apos;,18,88888,&apos;hahaha&apos;]</span><br><span class="line"></span><br><span class="line">d=&#123;key:value for key,value in zip(k,v)&#125;</span><br><span class="line">print(d) #&#123;&apos;name&apos;: &apos;yachan&apos;, &apos;age&apos;: 18, &apos;money&apos;: 88888&#125;</span><br><span class="line"></span><br><span class="line">d2=&#123;key.upper():value for key,value in zip(k,v)&#125;</span><br><span class="line">print(d2) #&#123;&apos;NAME&apos;: &apos;yachan&apos;, &apos;AGE&apos;: 18, &apos;MONEY&apos;: 88888&#125;</span><br></pre></td></tr></table></figure><h2 id="元组"><a href="#元组" class="headerlink" title="元组()"></a>元组()</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">love=(&apos;shu&apos;,&apos;money&apos;,88)</span><br><span class="line">print(type(love)) #&lt;class &apos;tuple&apos;&gt;</span><br><span class="line"></span><br><span class="line">#创建多个元组值，可以不用()</span><br><span class="line">love2=&apos;shu&apos;,&apos;money&apos;,88 </span><br><span class="line">print(type(love2)) #&lt;class &apos;tuple&apos;&gt;</span><br><span class="line"></span><br><span class="line">#创建一个元组值，必须要逗号不能少</span><br><span class="line">love3=(&apos;age&apos;,) </span><br><span class="line">love4=&apos;age&apos;</span><br><span class="line">print(love3,type(love3)) #(&apos;age&apos;,) &lt;class &apos;tuple&apos;&gt;</span><br><span class="line">print(love4,type(love4)) #age &lt;class &apos;str&apos;&gt;</span><br><span class="line"></span><br><span class="line">#使用内置函数tuple()创建元组</span><br><span class="line">love5=tuple((&apos;shu&apos;,&apos;money&apos;,88))</span><br><span class="line">print(love5) #(&apos;shu&apos;, &apos;money&apos;, 88)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">love6=(&apos;shu&apos;,[&apos;age&apos;,18],&apos;money&apos;)</span><br><span class="line"># 元组元素修改注意：列表、字典等才可以修改，</span><br><span class="line"># 它的值可以修改，但标识符即内存地址不可以修改</span><br><span class="line"># love6[0]=&apos;hahha&apos; </span><br><span class="line"># print(love6) #&apos;tuple&apos; object does not support item assignment</span><br><span class="line"></span><br><span class="line">love6[1][0]=&apos;friend&apos; </span><br><span class="line">print(love6) #(&apos;shu&apos;, [&apos;friend&apos;, 18], &apos;money&apos;)</span><br></pre></td></tr></table></figure><h2 id="遍历元组元素"><a href="#遍历元组元素" class="headerlink" title="遍历元组元素"></a>遍历元组元素</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">love=(&apos;shu&apos;,&apos;money&apos;,88)</span><br><span class="line">print(love[2])</span><br><span class="line"></span><br><span class="line">for item in love:</span><br><span class="line">  print(item)</span><br></pre></td></tr></table></figure><h2 id="set集合-，内置数据结构，没有value的字典"><a href="#set集合-，内置数据结构，没有value的字典" class="headerlink" title="set集合{}，内置数据结构，没有value的字典"></a>set集合{}，内置数据结构，没有value的字典</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 创建方式1</span><br><span class="line">s1=&#123;&apos;shulu&apos;,88,&apos;ya&apos;&#125;</span><br><span class="line">print(s1,type(s1)) #&#123;&apos;shulu&apos;, &apos;ya&apos;, 88&#125; &lt;class &apos;set&apos;&gt;</span><br><span class="line"></span><br><span class="line"># 创建方式2</span><br><span class="line">s2=set(range(6))</span><br><span class="line">print(s2) #&#123;0, 1, 2, 3, 4, 5&#125;</span><br><span class="line"></span><br><span class="line"># 创建空集合</span><br><span class="line">s9=set()</span><br><span class="line">print(s9,type(s9)) #set() &lt;class &apos;set&apos;&gt;</span><br><span class="line"></span><br><span class="line">s0=&#123;&#125; #不能用空&#123;&#125;创建</span><br><span class="line">print(s0,type(s0)) #&#123;&#125; &lt;class &apos;dict&apos;&gt;</span><br><span class="line"></span><br><span class="line"># 可以对元素去重</span><br><span class="line">s3=&#123;1, 3, 5, 2, 2, 4, 4&#125;</span><br><span class="line">print(s3) #&#123;1, 2, 3, 4, 5&#125;</span><br></pre></td></tr></table></figure><h2 id="集合与其他数据类型转换"><a href="#集合与其他数据类型转换" class="headerlink" title="集合与其他数据类型转换"></a>集合与其他数据类型转换</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#列表转set</span><br><span class="line">s4=list(s3) </span><br><span class="line">print(s4,type(s4)) #[1, 2, 3, 4, 5] &lt;class &apos;list&apos;&gt;</span><br><span class="line">s5=set(s4)</span><br><span class="line">print(s5,type(s5)) #&#123;1, 2, 3, 4, 5&#125; &lt;class &apos;set&apos;&gt;</span><br><span class="line"></span><br><span class="line">#元组转set</span><br><span class="line">s6=tuple((range(5))) </span><br><span class="line">print(s6,type(s6)) #(0, 1, 2, 3, 4) &lt;class &apos;tuple&apos;&gt;</span><br><span class="line">s7=set(s6)</span><br><span class="line">print(s7,type(s7)) #&#123;0, 1, 2, 3, 4&#125; &lt;class &apos;set&apos;&gt;</span><br><span class="line"></span><br><span class="line">#字符串转set</span><br><span class="line">s8=set(&apos;Python&apos;) </span><br><span class="line">print(s8) #&#123;&apos;h&apos;, &apos;t&apos;, &apos;n&apos;, &apos;P&apos;, &apos;y&apos;, &apos;o&apos;&#125; 无序的</span><br></pre></td></tr></table></figure><h2 id="集合元素的判断-集合是无序的"><a href="#集合元素的判断-集合是无序的" class="headerlink" title="集合元素的判断,集合是无序的"></a>集合元素的判断,集合是无序的</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s1=&#123;1,22,33,2&#125;</span><br><span class="line">print(&apos;shu&apos; in s1)</span><br><span class="line">print(1 not in s1)</span><br></pre></td></tr></table></figure><h2 id="集合元素的增加"><a href="#集合元素的增加" class="headerlink" title="集合元素的增加"></a>集合元素的增加</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#add方法一次只能添加一个</span><br><span class="line">s1.add(88) </span><br><span class="line">print(s1)</span><br><span class="line"></span><br><span class="line">#update方法至少添加一个</span><br><span class="line">s1.update((11,21,31)) #将元组转换并添加</span><br><span class="line">print(s1)</span><br><span class="line"></span><br><span class="line">s1.update([&apos;shu&apos;,9]) #将列表转换并添加</span><br><span class="line">print(s1) #&#123;1, 2, 33, 9, 11, 21, 22, 88, &apos;shu&apos;, 31&#125;</span><br><span class="line"></span><br><span class="line">s1.update(&#123;&apos;love&apos;,520&#125;) #添加集合</span><br><span class="line">print(s1) #&#123;1, 2, 33, &apos;love&apos;, 520, 9, 11, &apos;shu&apos;, 21, 22, 88, 31&#125;</span><br></pre></td></tr></table></figure><h2 id="集合元素的删除"><a href="#集合元素的删除" class="headerlink" title="集合元素的删除"></a>集合元素的删除</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">s2=&#123;21,33,&apos;yaya&apos;,88&#125;</span><br><span class="line"># 删除指定元素</span><br><span class="line">s2.remove(21) </span><br><span class="line">print(s2) #&#123;88, 33, &apos;yaya&apos;&#125;</span><br><span class="line"></span><br><span class="line">#remove()被删除元素没有，则抛异常</span><br><span class="line"># s2.remove(1)</span><br><span class="line"># print(s2) #KeyError: 1</span><br><span class="line"></span><br><span class="line">#discard()被删除元素有则删除，没有的话不会抛出错误</span><br><span class="line">s2.discard(88)</span><br><span class="line">print(s2) #&#123;33, &apos;yaya&apos;&#125;</span><br><span class="line">s2.discard(500)</span><br><span class="line">print(s2) #&#123;33, &apos;yaya&apos;&#125;</span><br><span class="line"></span><br><span class="line">#pop()没有参数，随机删除一个元素</span><br><span class="line">s2.pop()</span><br><span class="line">print(s2)</span><br></pre></td></tr></table></figure><h2 id="clear-清空集合"><a href="#clear-清空集合" class="headerlink" title="clear()清空集合"></a>clear()清空集合</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s2.clear()</span><br><span class="line">print(s2) #set()</span><br></pre></td></tr></table></figure><h2 id="集合间的关系"><a href="#集合间的关系" class="headerlink" title="集合间的关系"></a>集合间的关系</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">s1=&#123;0,1,2,3&#125;</span><br><span class="line">s2=&#123;3,0,2,1&#125;</span><br><span class="line">print(s1==s2) #True 集合是无序的</span><br><span class="line"></span><br><span class="line"># issubset()判断s3是s1的子集吗</span><br><span class="line">s3=&#123;0,1,2&#125; </span><br><span class="line">print(s3.issubset(s1)) #True</span><br><span class="line"></span><br><span class="line"># issuperset()判断s1是s3的超集吗,与子集相反</span><br><span class="line">print(s1.issuperset(s3)) #True</span><br><span class="line"></span><br><span class="line"># isdisjoint()p判断s1与s3没有交集吗</span><br><span class="line">print(s1.isdisjoint(s3)) #False</span><br></pre></td></tr></table></figure><h2 id="集合间的数学操作-原集合不变"><a href="#集合间的数学操作-原集合不变" class="headerlink" title="集合间的数学操作,原集合不变"></a>集合间的数学操作,原集合不变</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 交集</span><br><span class="line">s1=&#123;22,1,45,3&#125;</span><br><span class="line">s2=&#123;3,0,2,1&#125;</span><br><span class="line">print(s1.intersection(s2)) #&#123;1, 3&#125;</span><br><span class="line">print(s1 &amp; s2) #&#123;1, 3&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#并集</span><br><span class="line">print(s1.union(s2)) #&#123;0, 1, 2, 3, 45, 22&#125;</span><br><span class="line">print(s1 | s2) #&#123;0, 1, 2, 3, 45, 22&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#差集</span><br><span class="line">print(s1.difference(s2)) #&#123;45, 22&#125;</span><br><span class="line">print(s2.difference(s1)) #&#123;0, 2&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#对称差集</span><br><span class="line">print(s1.symmetric_difference(s2)) #&#123;0, 2, 22, 45&#125;</span><br><span class="line">print(s1 ^ s2) #&#123;0, 2, 22, 45&#125;</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/Python%E8%AF%AD%E6%B3%953/Python-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Python-循环与列表</title>
      <link>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E5%BE%AA%E7%8E%AF%E4%B8%8E%E5%88%97%E8%A1%A8/</link>
      <guid>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E5%BE%AA%E7%8E%AF%E4%B8%8E%E5%88%97%E8%A1%A8/</guid>
      <pubDate>Sun, 07 Feb 2021 01:13:14 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="pass空语句"><a href="#pass空语句" class="headerlink" title="pass空语句"></a>pass空语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">某一段逻辑没有想好，让其先通过</span><br><span class="line">a=1</span><br><span class="line">b=2</span><br><span class="line">if a&gt;b :</span><br><span class="line">  pass</span><br><span class="line">else :</span><br><span class="line">  print(&apos;sssss&apos;)</span><br></pre></td></tr></table></figure><h2 id="range-函数的使用"><a href="#range-函数的使用" class="headerlink" title="range()函数的使用"></a>range()函数的使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">range函数的优点：不管range函数表示的整数序列有多长，</span><br><span class="line">所有range对象占用的内存空间是相同的，因为仅仅只要存储start，stop，step</span><br><span class="line">只有当用到range对象时，才会去计算range对象中的相关元素</span><br><span class="line">range函数返回的是一个可迭代对象（类型是对象），常用在for循环中</span><br><span class="line"></span><br><span class="line">r1=range(10)</span><br><span class="line">print(r1) #range(0, 10) 默认从零开始，步长为一</span><br><span class="line">#使用list()函数查看列表</span><br><span class="line">print(list(r1)) #[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span><br><span class="line"></span><br><span class="line">r2=range(1,10) #指定开始值</span><br><span class="line">print(r2) #range(1, 10)</span><br><span class="line">print(list(r2)) #[1, 2, 3, 4, 5, 6, 7, 8, 9]</span><br><span class="line"></span><br><span class="line">r3=range(1,10,2) #指定步长</span><br><span class="line">print(r3) #range(1, 10, 2)</span><br><span class="line">print(list(r3)) #[1, 3, 5, 7, 9]</span><br></pre></td></tr></table></figure><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 执行N次的话，则需要判断N+1次</span><br><span class="line">a=1</span><br><span class="line">while a&lt;10 :</span><br><span class="line">  print(a)</span><br><span class="line">  a+=1</span><br><span class="line"></span><br><span class="line"># 选择结构的if与循环结构的while的区别</span><br><span class="line"># if是判断一次，条件为True时执行一次</span><br><span class="line"># while是判断N+1次,条件为True时执行N次</span><br></pre></td></tr></table></figure><h2 id="break"><a href="#break" class="headerlink" title="break"></a>break</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in range(10) :</span><br><span class="line">  print(i)</span><br><span class="line">  if i==8 :</span><br><span class="line">    break #跳出循环</span><br></pre></td></tr></table></figure><h2 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">结束当前循环，进入下一次循环</span><br><span class="line">for i in range(10) :</span><br><span class="line">  if i%2 == 0 :</span><br><span class="line">    continue</span><br><span class="line">  print(i)</span><br></pre></td></tr></table></figure><h2 id="else与while、for、if搭配"><a href="#else与while、for、if搭配" class="headerlink" title="else与while、for、if搭配"></a>else与while、for、if搭配</h2><h2 id="双层循环"><a href="#双层循环" class="headerlink" title="双层循环"></a>双层循环</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in range(1,10):</span><br><span class="line">  for j in range(1,i+1):</span><br><span class="line">    print(i,&apos;*&apos;,j,&apos;=&apos;,i*j,end=&apos;  &apos;)</span><br><span class="line">  print() # 外层打印行数</span><br></pre></td></tr></table></figure><h2 id="列表，相当于其他语言中的数组"><a href="#列表，相当于其他语言中的数组" class="headerlink" title="列表，相当于其他语言中的数组"></a>列表，相当于其他语言中的数组</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#第一种方式创建列表用[]</span><br><span class="line">ls1=[&apos;shulu&apos;,520,&apos;哈哈哈&apos;]</span><br><span class="line">print(ls1)</span><br><span class="line"># 第二种方式创建列表用内置函数list([])</span><br><span class="line">ls2=list([&apos;shulu&apos;,1314,&apos;hhh&apos;])</span><br><span class="line">print(ls2)</span><br><span class="line"></span><br><span class="line">#按索引获取列表元素</span><br><span class="line">ls1=[&apos;shulu&apos;,520,&apos;哈哈哈&apos;]</span><br><span class="line">print(ls1[0])</span><br><span class="line">## 获取列表元素的索引</span><br><span class="line">print(ls1.index(&apos;哈哈哈&apos;))</span><br><span class="line">## 指定索引区间获取列表元素的索引</span><br><span class="line">print(ls1.index(520,1,5))</span><br></pre></td></tr></table></figure><h2 id="列表切片复制"><a href="#列表切片复制" class="headerlink" title="列表切片复制"></a>列表切片复制</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls=[1,2,3,4,5,6,7,8]</span><br><span class="line">print(ls[2:6:1]) #start:stop:step</span><br></pre></td></tr></table></figure><h2 id="列表元素的判断"><a href="#列表元素的判断" class="headerlink" title="列表元素的判断"></a>列表元素的判断</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls=[1,2,3,4,5,6,7,8]</span><br><span class="line">print(1 in ls)</span><br><span class="line">print(10 not in ls)</span><br></pre></td></tr></table></figure><h2 id="列表元素的遍历"><a href="#列表元素的遍历" class="headerlink" title="列表元素的遍历"></a>列表元素的遍历</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for i in ls:</span><br><span class="line">  print(i)</span><br></pre></td></tr></table></figure><h2 id="向列表添加元素"><a href="#向列表添加元素" class="headerlink" title="向列表添加元素"></a>向列表添加元素</h2><h1 id="末尾添加-内存地址不变"><a href="#末尾添加-内存地址不变" class="headerlink" title="末尾添加,内存地址不变"></a>末尾添加,内存地址不变</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ls=[1,2,3]</span><br><span class="line">ls2=[&apos;yachan&apos;,666]</span><br><span class="line"></span><br><span class="line">print(ls)</span><br><span class="line">print(id(ls))</span><br><span class="line">## 向末尾添加一个元素</span><br><span class="line">ls.append(ls2)</span><br><span class="line">print(ls)</span><br><span class="line">print(id(ls))</span><br><span class="line">## 向列表末尾添加多个元素</span><br><span class="line">ls.extend(ls2) #将ls2展开添加到末尾</span><br><span class="line">print(ls)</span><br><span class="line"></span><br><span class="line">## 向任意位置添加一个元素</span><br><span class="line">ls.insert(2,520) #start和要添加的元素</span><br><span class="line">print(ls)</span><br><span class="line"></span><br><span class="line">## 切片替换添加，任意位置，多个元素</span><br><span class="line">ls3=[11,22,33,44]</span><br><span class="line">ls4=[55,66,77]</span><br><span class="line">ls3[1:]=ls4 #指定位置,从索引1开始到结束</span><br><span class="line">print(ls3) #[11, 55, 66, 77]</span><br></pre></td></tr></table></figure><h2 id="删除列表元素"><a href="#删除列表元素" class="headerlink" title="删除列表元素"></a>删除列表元素</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># remove()</span><br><span class="line">ls1=[1,22,3,4]</span><br><span class="line">ls1.remove(22) #删除指定元素</span><br><span class="line">print(ls1)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#pop()</span><br><span class="line">ls2=[1,2,3,4]</span><br><span class="line">ls2.pop() #删除最后一个元素</span><br><span class="line">print(ls2) #[1, 2, 3]</span><br><span class="line"></span><br><span class="line">ls3=[1,2,3]</span><br><span class="line">ls3.pop(1) #删除指定索引的元素</span><br><span class="line">print(ls3) #[1, 3]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 切片删除</span><br><span class="line">ls4=[1,2,3,4,5]</span><br><span class="line">#从索引2开始，到索引4结束，左闭右开区间</span><br><span class="line">ls5=ls4[2:4] #切出来赋值给ls5</span><br><span class="line">print(ls5) #产生一个新的列表对象</span><br><span class="line">print(&apos;ls4&apos;,id(ls4)) #2305914778560</span><br><span class="line">print(&apos;ls5&apos;,id(ls5)) #2305914779584</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#不产生新的元素</span><br><span class="line">ls6=[1,2,3,4,5]</span><br><span class="line">print(id(ls6)) #2095779428480</span><br><span class="line">ls6[1:3]=[] #删掉第二三个元素</span><br><span class="line">print(ls6)</span><br><span class="line">print(id(ls6)) #2095779428480</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#清空列表元素</span><br><span class="line">ls7=[1,2,3,4,5]</span><br><span class="line">ls7.clear()</span><br><span class="line">print(ls7)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#删除列表</span><br><span class="line">ls8=[1,2,3,4,5]</span><br><span class="line">del ls8</span><br><span class="line">print(ls8) #name &apos;ls8&apos; is not defined</span><br></pre></td></tr></table></figure><h2 id="列表修改，类似切片替换添加，任意位置，多个元素"><a href="#列表修改，类似切片替换添加，任意位置，多个元素" class="headerlink" title="列表修改，类似切片替换添加，任意位置，多个元素"></a>列表修改，类似切片替换添加，任意位置，多个元素</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls3=[11,22,33,44,211,223]</span><br><span class="line">ls4=[55,66,77]</span><br><span class="line">ls3[1:4]=ls4 #指定位置,从索引1开始到4,左闭右开区间</span><br><span class="line">print(ls3) #[11, 55, 66, 77, 211, 223]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 列表修改,修改某一个指定索引的值</span><br><span class="line">ls5=[11,22,33,44]</span><br><span class="line">ls5[2]=88</span><br><span class="line">print(ls5) #[11, 22, 88, 44]</span><br></pre></td></tr></table></figure><h2 id="列表元素排序sort-对原列表排序"><a href="#列表元素排序sort-对原列表排序" class="headerlink" title="列表元素排序sort(),对原列表排序"></a>列表元素排序sort(),对原列表排序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ls1=[1,22,23,14,55,25,13]</span><br><span class="line">print(id(ls1)) #1910309785344</span><br><span class="line">ls1.sort() #默认升序</span><br><span class="line">print(ls1)</span><br><span class="line">print(id(ls1)) #1910309785344</span><br><span class="line"></span><br><span class="line">ls1.sort(reverse=True) #降序</span><br><span class="line">print(ls1)</span><br></pre></td></tr></table></figure><h2 id="列表元素排序sorted-排序后产生一个新的列表，原列表不变"><a href="#列表元素排序sorted-排序后产生一个新的列表，原列表不变" class="headerlink" title="列表元素排序sorted() 排序后产生一个新的列表，原列表不变"></a>列表元素排序sorted() 排序后产生一个新的列表，原列表不变</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#升序</span><br><span class="line">ls7=[21,14,66,25,11]</span><br><span class="line">print(id(ls7)) #2798832727872</span><br><span class="line">ls8=sorted(ls7)</span><br><span class="line">print(ls8) #[11, 14, 21, 25, 66] 默认升序</span><br><span class="line">print(id(ls8)) #2798832727936</span><br><span class="line">print(id(ls7)) #2798832727872</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#降序</span><br><span class="line">ls9=sorted(ls8,reverse=True) #降序</span><br><span class="line">print(ls9)</span><br><span class="line">print(id(ls9)) #2050346596480</span><br><span class="line">print(ls7) #[21, 14, 66, 25, 11]</span><br><span class="line">print(id(ls7)) #2798832727872</span><br></pre></td></tr></table></figure><h2 id="列表生成表达式"><a href="#列表生成表达式" class="headerlink" title="列表生成表达式"></a>列表生成表达式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls=[i for i in range(1,10)]</span><br><span class="line">print(ls) #[1, 2, 3, 4, 5, 6, 7, 8, 9]</span><br><span class="line">ls=[i*i for i in range(1,10)]</span><br><span class="line">print(ls) #[1, 4, 9, 16, 25, 36, 49, 64, 81]</span><br></pre></td></tr></table></figure><h2 id="合并列表"><a href="#合并列表" class="headerlink" title="合并列表"></a>合并列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls1=[1,2,3]</span><br><span class="line">ls2=[4,5,6]</span><br><span class="line">ls=ls1+ls2 #[1,2,3,4,5,6]</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python-%E5%BE%AA%E7%8E%AF%E4%B8%8E%E5%88%97%E8%A1%A8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Python基础</title>
      <link>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python%E5%9F%BA%E7%A1%80/</link>
      <guid>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python%E5%9F%BA%E7%A1%80/</guid>
      <pubDate>Wed, 03 Feb 2021 22:05:24 GMT</pubDate>
      <description>
      
        终于开始了Python编程的学习之路，哈哈哈
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;最帅的人就是我</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="变量-标识符-开头只能是字母数字或下划线"><a href="#变量-标识符-开头只能是字母数字或下划线" class="headerlink" title="变量(标识符)开头只能是字母数字或下划线"></a>变量(标识符)开头只能是字母数字或下划线</h2><h2 id="print-函数-打印输出"><a href="#print-函数-打印输出" class="headerlink" title="print 函数 打印输出"></a>print 函数 打印输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(520)</span><br><span class="line">print(1+1)</span><br><span class="line">print(&quot;shulu520&quot;)</span><br><span class="line">print(&quot;sdsdsd&quot;)</span><br></pre></td></tr></table></figure><h2 id="将数据输出到文件中-’a-’意思是文件不存在的话就创建，已经存在的话就追加内容"><a href="#将数据输出到文件中-’a-’意思是文件不存在的话就创建，已经存在的话就追加内容" class="headerlink" title="将数据输出到文件中,’a+’意思是文件不存在的话就创建，已经存在的话就追加内容"></a>将数据输出到文件中,’a+’意思是文件不存在的话就创建，已经存在的话就追加内容</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ft = open(&apos;E:/love.txt&apos;,&apos;a+&apos;) </span><br><span class="line">print(&apos;helloworld&apos;,file=ft)</span><br><span class="line">ft.close()</span><br></pre></td></tr></table></figure><h2 id="不进行换行输出，使用逗号分隔"><a href="#不进行换行输出，使用逗号分隔" class="headerlink" title="不进行换行输出，使用逗号分隔"></a>不进行换行输出，使用逗号分隔</h2><p><code>print(11,111,333,&#39;erere&#39;)</code></p><h2 id="转义字符，反斜杠-转义字符的首字母-n-newline的首字母"><a href="#转义字符，反斜杠-转义字符的首字母-n-newline的首字母" class="headerlink" title="转义字符，反斜杠+转义字符的首字母,n newline的首字母"></a>转义字符，反斜杠+转义字符的首字母,n newline的首字母</h2><p><code>print(&#39;shulu\n520&#39;)</code></p><h2 id="制表符-不太懂"><a href="#制表符-不太懂" class="headerlink" title="制表符 不太懂"></a>制表符 不太懂</h2><p><code>print(&#39;hello\tshulu&#39;)</code><br><code>print(&#39;hellooooo\tshulu&#39;)</code></p><h2 id="覆盖"><a href="#覆盖" class="headerlink" title="覆盖"></a>覆盖</h2><p><code>print(&#39;shulu\r520&#39;)</code></p><h2 id="退格，将u退没了"><a href="#退格，将u退没了" class="headerlink" title="退格，将u退没了"></a>退格，将u退没了</h2><p><code>print(&#39;shulu\b520&#39;)</code></p><h2 id="双反斜杠的应用"><a href="#双反斜杠的应用" class="headerlink" title="双反斜杠的应用"></a>双反斜杠的应用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(&apos;https:\\shulu520.com&apos;)</span><br><span class="line">print(&apos;https:\\\\shulu520.com&apos;)</span><br></pre></td></tr></table></figure><h2 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h2><p><code>print(&#39;shulu说:\&#39;i love you\&#39;&#39;)</code></p><h2 id="原字符-不让字符串中的转义字符起作用-注意字符串最后一个不能是反斜杠"><a href="#原字符-不让字符串中的转义字符起作用-注意字符串最后一个不能是反斜杠" class="headerlink" title="原字符 不让字符串中的转义字符起作用,注意字符串最后一个不能是反斜杠"></a>原字符 不让字符串中的转义字符起作用,注意字符串最后一个不能是反斜杠</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(r&apos;shulu\n520&apos;)</span><br><span class="line">print(R&apos;shulu\n520&apos;)</span><br><span class="line">print(R&apos;shulu\n520\\&apos;)</span><br></pre></td></tr></table></figure><h2 id="变量直接写，不用声明"><a href="#变量直接写，不用声明" class="headerlink" title="变量直接写，不用声明"></a>变量直接写，不用声明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name=&apos;shulu&apos;</span><br><span class="line">age=18</span><br><span class="line">money=100.888</span><br><span class="line">bo=True</span><br><span class="line">print(name,age,money,bo)</span><br></pre></td></tr></table></figure><h2 id="变量的内存地址，变量类型"><a href="#变量的内存地址，变量类型" class="headerlink" title="变量的内存地址，变量类型"></a>变量的内存地址，变量类型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(id(name),type(name))</span><br><span class="line">print(id(age),type(age))</span><br><span class="line">print(id(money),type(money))</span><br><span class="line">print(id(bo),type(bo))</span><br></pre></td></tr></table></figure><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print(type(str(age)))</span><br><span class="line">print(type(str(money)))</span><br><span class="line"></span><br><span class="line">print(float(age),type(float(age)))</span><br><span class="line">print(int(money),type(int(money)))</span><br><span class="line"></span><br><span class="line">print(int(bo),type(int(bo)))</span><br><span class="line">print(float(bo),type(float(bo)))</span><br></pre></td></tr></table></figure><h2 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;&apos;&apos;</span><br><span class="line">这是多行注释</span><br><span class="line">&apos;&apos;&apos;</span><br></pre></td></tr></table></figure><h2 id="input输入函数，接收用户的输入，做提示语"><a href="#input输入函数，接收用户的输入，做提示语" class="headerlink" title="input输入函数，接收用户的输入，做提示语"></a>input输入函数，接收用户的输入，做提示语</h2><h2 id="运行代码，输入答案回车看看"><a href="#运行代码，输入答案回车看看" class="headerlink" title="运行代码，输入答案回车看看"></a>运行代码，输入答案回车看看</h2><p><code>print(input(&#39;你爱我吗&#39;))</code></p><h2 id="算数运算符，整除"><a href="#算数运算符，整除" class="headerlink" title="算数运算符，整除"></a>算数运算符，整除</h2><p><code>print(11//2)</code></p><h2 id="一正一负，整除，向下取整"><a href="#一正一负，整除，向下取整" class="headerlink" title="一正一负，整除，向下取整"></a>一正一负，整除，向下取整</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(-9//4)</span><br><span class="line">print(9//-4)</span><br></pre></td></tr></table></figure><h2 id="幂运算"><a href="#幂运算" class="headerlink" title="幂运算"></a>幂运算</h2><p><code>print(2**3)</code></p><h2 id="取余"><a href="#取余" class="headerlink" title="取余"></a>取余</h2><p><code>print(11%2)</code></p><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><h2 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a,b,c = 1,2,3</span><br><span class="line">print(a,b,c)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">交换两个变量的值</span><br><span class="line">c,d = 4,5</span><br><span class="line">print(&apos;交换之前&apos;,c,d)</span><br><span class="line">c,d = d,c</span><br><span class="line">print(&apos;交换之后&apos;,c,d)</span><br></pre></td></tr></table></figure><h2 id="比较运算符-比较的是值，is比较内存地址"><a href="#比较运算符-比较的是值，is比较内存地址" class="headerlink" title="比较运算符==,比较的是值，is比较内存地址"></a>比较运算符==,比较的是值，is比较内存地址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a,b,c = 1,2,1</span><br><span class="line">print(a==b) </span><br><span class="line">print(a&gt;b)</span><br><span class="line">print(a&lt;b)</span><br><span class="line">print(id(a),id(c))</span><br><span class="line">print(a==c)</span><br><span class="line">print(a is c) #比较的是内存地址id，此处为True</span><br><span class="line"></span><br><span class="line">lt1 = [11,22,33]</span><br><span class="line">lt2 = [11,22,33]</span><br><span class="line">print(id(lt1),id(lt2))</span><br><span class="line">print(lt1==lt2)</span><br><span class="line">print(lt1 is lt2) #比较的是内存地址id，此处为False</span><br><span class="line">print(lt1 is not lt2) #True</span><br></pre></td></tr></table></figure><h2 id="布尔运算算符and，当两个云算数都为True时结果才为True"><a href="#布尔运算算符and，当两个云算数都为True时结果才为True" class="headerlink" title="布尔运算算符and，当两个云算数都为True时结果才为True"></a>布尔运算算符and，当两个云算数都为True时结果才为True</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a,b=1,2</span><br><span class="line">print(a==1 and b==2) #True and True为True</span><br><span class="line">print(a==2 and b==2) #False and True为False</span><br><span class="line">print(a!=1 and b!=2) #False and False为False</span><br></pre></td></tr></table></figure><h2 id="or"><a href="#or" class="headerlink" title="or"></a>or</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a,b=1,2</span><br><span class="line">print(a!=1 or b==2)</span><br></pre></td></tr></table></figure><h2 id="not对布尔值取反"><a href="#not对布尔值取反" class="headerlink" title="not对布尔值取反"></a>not对布尔值取反</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c,d=True,False</span><br><span class="line">print(not c, not d)</span><br></pre></td></tr></table></figure><h2 id="in-not-in"><a href="#in-not-in" class="headerlink" title="in,not in"></a>in,not in</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">love=&apos;shulu&apos;</span><br><span class="line">print(&apos;s&apos; in love, &apos;x&apos; not in love)</span><br></pre></td></tr></table></figure><h2 id="对象的布尔值-使用内置函数bool-查看"><a href="#对象的布尔值-使用内置函数bool-查看" class="headerlink" title="对象的布尔值,使用内置函数bool()查看"></a>对象的布尔值,使用内置函数bool()查看</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">以下对象的布尔值为False</span><br><span class="line"></span><br><span class="line">print(bool(False))</span><br><span class="line">print(bool(0))</span><br><span class="line">print(bool(0.0))</span><br><span class="line">print(bool(&apos;&apos;))</span><br><span class="line">print(bool(&quot;&quot;))</span><br><span class="line">print(bool(None))</span><br><span class="line">print(bool([])) #空列表</span><br><span class="line">print(bool(list())) #空列表</span><br><span class="line">print(bool(())) #空元组</span><br><span class="line">print(bool(tuple())) #空元组</span><br><span class="line">print(bool(&#123;&#125;)) #空字典</span><br><span class="line">print(bool(dict())) #空字典</span><br><span class="line">print(bool(set())) #空集合</span><br></pre></td></tr></table></figure><h2 id="分支结构-if-elif-else"><a href="#分支结构-if-elif-else" class="headerlink" title="分支结构 if elif else"></a>分支结构 if elif else</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">score=int(input(&apos;请输入成绩&apos;))</span><br><span class="line">if score&gt;=90 and score&lt;=100 :</span><br><span class="line">  print(&apos;A&apos;)</span><br><span class="line">elif score&gt;=80 and score&lt;90 :</span><br><span class="line">  print(&apos;B&apos;)</span><br><span class="line">elif score&lt;80:</span><br><span class="line">  print(&apos;不合格&apos;)</span><br><span class="line">else:</span><br><span class="line">  print(&apos;成绩有误&apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">可以用数学中的方式来简写</span><br><span class="line">score=int(input(&apos;请输入成绩&apos;))</span><br><span class="line">if 90&lt;=score&lt;=100 :</span><br><span class="line">  print(&apos;A&apos;)</span><br><span class="line">elif 80&lt;=score&lt;90 :</span><br><span class="line">  print(&apos;B&apos;)</span><br><span class="line">elif score&lt;80:</span><br><span class="line">  print(&apos;不合格&apos;)</span><br><span class="line">else:</span><br><span class="line">  print(&apos;成绩有误&apos;)</span><br></pre></td></tr></table></figure><h2 id="if-else-条件表达式，双分支结构的简写"><a href="#if-else-条件表达式，双分支结构的简写" class="headerlink" title="if else 条件表达式，双分支结构的简写"></a>if else 条件表达式，双分支结构的简写</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">money=1000</span><br><span class="line">s=int(input(&apos;请输入取款金额&apos;))</span><br><span class="line"></span><br><span class="line">if money&gt;=s:</span><br><span class="line">  money-=s</span><br><span class="line">  print(&apos;您的余额为：&apos;,money)</span><br><span class="line">else:</span><br><span class="line">  print(&apos;钱不够，快去挣钱呀&apos;)</span><br><span class="line"></span><br><span class="line">等于下面的代码</span><br><span class="line">print(&apos;您的余额为：&apos;+str(money-s) if money&gt;=s else &apos;钱不够，快去挣钱呀&apos;)</span><br></pre></td></tr></table></figure><h2 id="模糊匹配"><a href="#模糊匹配" class="headerlink" title="模糊匹配"></a>模糊匹配</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># 用户输入部分搜索内容后，根据这部分内容去模糊匹配，然后列出所有的匹配项，供其再次精确选择</span><br><span class="line"># https://www.cnblogs.com/weiman3389/p/6047017.html</span><br><span class="line"># 以下代码作者优化的挺好的</span><br><span class="line">import re</span><br><span class="line">def fuzzyfinder(user_input, collection):</span><br><span class="line">  suggestions = []</span><br><span class="line">  pattern = &apos;.*?&apos;.join(user_input)    # Converts &apos;djm&apos; to &apos;d.*?j.*?m&apos;</span><br><span class="line">  regex = re.compile(pattern)         # Compiles a regex.</span><br><span class="line">  for item in collection:</span><br><span class="line">    match = regex.search(item)      # Checks if the current item matches the regex.</span><br><span class="line">    if match:</span><br><span class="line">      suggestions.append((len(match.group()), match.start(), item))</span><br><span class="line">  return [x for _, _, x in sorted(suggestions)]</span><br><span class="line"></span><br><span class="line">lst=[&apos;清华大学&apos;,&apos;北京大学&apos;,&apos;苏州的大学&apos;,&apos;兰州大学&apos;,&apos;经济学院&apos;,&apos;化工学院&apos;]</span><br><span class="line"></span><br><span class="line">user_input=input(&apos;请输入学校名称：&apos;)</span><br><span class="line">fuzzy_result=fuzzyfinder(user_input,lst)</span><br><span class="line">print(fuzzy_result)</span><br></pre></td></tr></table></figure><h2 id="续行符"><a href="#续行符" class="headerlink" title="续行符 \"></a>续行符 \</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 当某一段代码太长了，可以这么干</span><br><span class="line">s=&apos;你好啊你好啊你好啊你好啊\</span><br><span class="line">  你好啊你好啊你好啊你好啊你好啊\</span><br><span class="line">  你好啊你好啊你好啊你好啊你好啊&apos;</span><br><span class="line"></span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure><h2 id="打包成-exe可执行文件"><a href="#打包成-exe可执行文件" class="headerlink" title="打包成.exe可执行文件"></a>打包成.exe可执行文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">name=input(&apos;请输入你的名字：&apos;)</span><br><span class="line">age=eval(input(&apos;请输入你的年龄：&apos;))</span><br><span class="line">with open(&apos;可执行文件.txt&apos;,&apos;w&apos;) as file:</span><br><span class="line">  file.write(name+&apos;----&apos;+str(age))</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">  answer=input(&apos;退出吗？y/n&apos;)</span><br><span class="line">  if answer==&apos;y&apos;:</span><br><span class="line">    break</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 程序写好之后，进入cmd</span><br><span class="line"># 输入 pyinstaller -F 你的.py文件的绝对路径</span><br><span class="line"># 如：pyinstaller -F E:\Users\lqy\Desktop\xuexiPy\word\14.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 这是一个简单的生成一个文本文件的程序，</span><br><span class="line"># 如果程序运行中需要用到图片视频等文件时，</span><br><span class="line"># 只需将他们放到C:\Users\Administrator\dist这个目录下</span><br><span class="line"># 这是可执行文件打包后的位置</span><br><span class="line"></span><br><span class="line"># 练习时发现，电脑病毒报错，</span><br><span class="line"># 打开设置，进入Windows Defender，</span><br><span class="line"># 点击病毒和威胁防护，点击‘病毒和威胁防护’设置，将实时保护关闭。</span><br><span class="line"># 待软件安装完成之后，再将实时保护关闭即可。</span><br></pre></td></tr></table></figure><h2 id="字符串的反向输出"><a href="#字符串的反向输出" class="headerlink" title="字符串的反向输出"></a>字符串的反向输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=&apos;12345678&apos;</span><br><span class="line">print(s[::-1]) #87654321</span><br></pre></td></tr></table></figure><h2 id="进制转换函数"><a href="#进制转换函数" class="headerlink" title="进制转换函数"></a>进制转换函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">number=888</span><br><span class="line"># 转为二进制</span><br><span class="line">print(bin(number)) #0b1101111000</span><br><span class="line"></span><br><span class="line"># 转为八进制</span><br><span class="line">print(oct(number)) #0o1570</span><br><span class="line"></span><br><span class="line"># 转为16进制</span><br><span class="line">print(hex(number)) #0x378</span><br></pre></td></tr></table></figure><h2 id="常见的datetime日期时间模块"><a href="#常见的datetime日期时间模块" class="headerlink" title="常见的datetime日期时间模块"></a>常见的datetime日期时间模块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"># datetime模块重新封装了time模块</span><br><span class="line">import datetime</span><br><span class="line"></span><br><span class="line">time1=datetime.datetime.now()</span><br><span class="line">print(time1) #2021-02-27 18:59:13.885794</span><br><span class="line"></span><br><span class="line">time2=datetime.date.today()</span><br><span class="line">print(time2) #2021-02-27</span><br><span class="line"></span><br><span class="line">time3=datetime.datetime.today()</span><br><span class="line">print(time3) #2021-02-27 18:58:39.614459</span><br><span class="line"></span><br><span class="line">time4=datetime.datetime.today().timestamp()</span><br><span class="line">print(time4) #1614423830.81342</span><br><span class="line"></span><br><span class="line"># 返回当前日期时间的日期部分：2021-02-27</span><br><span class="line">print(datetime.datetime.now().date())</span><br><span class="line"></span><br><span class="line"># 返回当前日期时间的时间部分：19:13:45.310397</span><br><span class="line">print(datetime.datetime.now().time())</span><br><span class="line"></span><br><span class="line"># delta时间间隔</span><br><span class="line">past=datetime.datetime(2017, 4, 16, 21, 21, 20, 871000)</span><br><span class="line">now=datetime.datetime.now()</span><br><span class="line">delta=now-past</span><br><span class="line">print(delta) #1412 days, 22:07:46.382359</span><br><span class="line">print(delta.days) #1412</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/Python%E8%AF%AD%E6%B3%95/Python%E5%9F%BA%E7%A1%80/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得7</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%977/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%977/</guid>
      <pubDate>Sun, 13 Sep 2020 13:26:53 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1><h2 id="最近在学习VCM岗位带控制节点流程图，相对前面初步学习的物料流程图来说还是有些复杂的，当然对于大家来说背背图还是挺顺的。短暂的记忆很容易遗忘，在学完图纸以后及时到现场对比，加强记忆，发现现场与图纸之间的差别，具体的管道阀门分布，熟悉现场工作环境会更好，但由于此前高温天气以及最近的大修，这使得我们在现场的学习时间很短，还有现场噪音太大，人员又多，听不清楚，不过按计划在接下来的时间里我们将会有大量的现场学习时间了，到那时便可发现更多的问题，学到更多的知识。"><a href="#最近在学习VCM岗位带控制节点流程图，相对前面初步学习的物料流程图来说还是有些复杂的，当然对于大家来说背背图还是挺顺的。短暂的记忆很容易遗忘，在学完图纸以后及时到现场对比，加强记忆，发现现场与图纸之间的差别，具体的管道阀门分布，熟悉现场工作环境会更好，但由于此前高温天气以及最近的大修，这使得我们在现场的学习时间很短，还有现场噪音太大，人员又多，听不清楚，不过按计划在接下来的时间里我们将会有大量的现场学习时间了，到那时便可发现更多的问题，学到更多的知识。" class="headerlink" title="最近在学习VCM岗位带控制节点流程图，相对前面初步学习的物料流程图来说还是有些复杂的，当然对于大家来说背背图还是挺顺的。短暂的记忆很容易遗忘，在学完图纸以后及时到现场对比，加强记忆，发现现场与图纸之间的差别，具体的管道阀门分布，熟悉现场工作环境会更好，但由于此前高温天气以及最近的大修，这使得我们在现场的学习时间很短，还有现场噪音太大，人员又多，听不清楚，不过按计划在接下来的时间里我们将会有大量的现场学习时间了，到那时便可发现更多的问题，学到更多的知识。"></a>最近在学习VCM岗位带控制节点流程图，相对前面初步学习的物料流程图来说还是有些复杂的，当然对于大家来说背背图还是挺顺的。短暂的记忆很容易遗忘，在学完图纸以后及时到现场对比，加强记忆，发现现场与图纸之间的差别，具体的管道阀门分布，熟悉现场工作环境会更好，但由于此前高温天气以及最近的大修，这使得我们在现场的学习时间很短，还有现场噪音太大，人员又多，听不清楚，不过按计划在接下来的时间里我们将会有大量的现场学习时间了，到那时便可发现更多的问题，学到更多的知识。</h2><h2 id="在刚进行的拜师会上，再次见到了自己的师傅。现场学习的时候碰到过师傅，也请教过问题，果然，师傅就是不一样，我能问出的问题人家都能帮我解决，这样比我独自摸索快多了，感觉真好。师傅对我给予厚望，我也充满信心，满怀期待，非常渴望获取知识，提升自身技能与价值，在平凡的岗位上做好每一件小事。"><a href="#在刚进行的拜师会上，再次见到了自己的师傅。现场学习的时候碰到过师傅，也请教过问题，果然，师傅就是不一样，我能问出的问题人家都能帮我解决，这样比我独自摸索快多了，感觉真好。师傅对我给予厚望，我也充满信心，满怀期待，非常渴望获取知识，提升自身技能与价值，在平凡的岗位上做好每一件小事。" class="headerlink" title="在刚进行的拜师会上，再次见到了自己的师傅。现场学习的时候碰到过师傅，也请教过问题，果然，师傅就是不一样，我能问出的问题人家都能帮我解决，这样比我独自摸索快多了，感觉真好。师傅对我给予厚望，我也充满信心，满怀期待，非常渴望获取知识，提升自身技能与价值，在平凡的岗位上做好每一件小事。"></a>在刚进行的拜师会上，再次见到了自己的师傅。现场学习的时候碰到过师傅，也请教过问题，果然，师傅就是不一样，我能问出的问题人家都能帮我解决，这样比我独自摸索快多了，感觉真好。师傅对我给予厚望，我也充满信心，满怀期待，非常渴望获取知识，提升自身技能与价值，在平凡的岗位上做好每一件小事。</h2><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%977/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得6</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%976/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%976/</guid>
      <pubDate>Sat, 05 Sep 2020 14:03:15 GMT</pubDate>
      <description>
      
        培训第6周VCM精制HCL塔PID
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="挣钱往事"><a href="#挣钱往事" class="headerlink" title="挣钱往事"></a>挣钱往事</h1><h2 id="emsp-emsp-我来自西北农村家庭，一直以来都勤俭节约，独立自主。拿到职业生涯第一笔工资，不禁想起我挣钱的往事。"><a href="#emsp-emsp-我来自西北农村家庭，一直以来都勤俭节约，独立自主。拿到职业生涯第一笔工资，不禁想起我挣钱的往事。" class="headerlink" title="&emsp;&emsp;我来自西北农村家庭，一直以来都勤俭节约，独立自主。拿到职业生涯第一笔工资，不禁想起我挣钱的往事。"></a>&emsp;&emsp;我来自西北农村家庭，一直以来都勤俭节约，独立自主。拿到职业生涯第一笔工资，不禁想起我挣钱的往事。</h2><h2 id="emsp-emsp-第一次挣钱的时候我还是七八岁的小孩子。有一次在山上苗圃地里面除草，大人们干活，我就跟在后面，使用的工具也是搞笑，人家都拿的是镰刀，而我则拿的是砍树的大刀，大家都笑我，说我“砍草”来了，包工头看到我的时候，我已经干了好一会儿的活了，看我干的很是卖力，所以就把我留下来了，说是我能坚持干一天的话，就可以给我十块钱，还好，我没让自己失望，默默忍受大家的取笑，坚持“玩”了一天，最后如愿以偿，大家都夸我很乖很懂事，小小年纪便知道挣钱，长大以后肯定了不起。那时候的十块钱对我来说还是很多的，因为平时上学的时候，父母给的零花钱才只有几毛钱，而且也不是天天有零花钱买辣条的，小学在别的村庄，离家比较远，我每天只能拿一点妈妈蒸的干馒头，有钱买辣条的日子就是最开心的一天，那时候的日子总是那么简单。"><a href="#emsp-emsp-第一次挣钱的时候我还是七八岁的小孩子。有一次在山上苗圃地里面除草，大人们干活，我就跟在后面，使用的工具也是搞笑，人家都拿的是镰刀，而我则拿的是砍树的大刀，大家都笑我，说我“砍草”来了，包工头看到我的时候，我已经干了好一会儿的活了，看我干的很是卖力，所以就把我留下来了，说是我能坚持干一天的话，就可以给我十块钱，还好，我没让自己失望，默默忍受大家的取笑，坚持“玩”了一天，最后如愿以偿，大家都夸我很乖很懂事，小小年纪便知道挣钱，长大以后肯定了不起。那时候的十块钱对我来说还是很多的，因为平时上学的时候，父母给的零花钱才只有几毛钱，而且也不是天天有零花钱买辣条的，小学在别的村庄，离家比较远，我每天只能拿一点妈妈蒸的干馒头，有钱买辣条的日子就是最开心的一天，那时候的日子总是那么简单。" class="headerlink" title="&emsp;&emsp;第一次挣钱的时候我还是七八岁的小孩子。有一次在山上苗圃地里面除草，大人们干活，我就跟在后面，使用的工具也是搞笑，人家都拿的是镰刀，而我则拿的是砍树的大刀，大家都笑我，说我“砍草”来了，包工头看到我的时候，我已经干了好一会儿的活了，看我干的很是卖力，所以就把我留下来了，说是我能坚持干一天的话，就可以给我十块钱，还好，我没让自己失望，默默忍受大家的取笑，坚持“玩”了一天，最后如愿以偿，大家都夸我很乖很懂事，小小年纪便知道挣钱，长大以后肯定了不起。那时候的十块钱对我来说还是很多的，因为平时上学的时候，父母给的零花钱才只有几毛钱，而且也不是天天有零花钱买辣条的，小学在别的村庄，离家比较远，我每天只能拿一点妈妈蒸的干馒头，有钱买辣条的日子就是最开心的一天，那时候的日子总是那么简单。"></a>&emsp;&emsp;第一次挣钱的时候我还是七八岁的小孩子。有一次在山上苗圃地里面除草，大人们干活，我就跟在后面，使用的工具也是搞笑，人家都拿的是镰刀，而我则拿的是砍树的大刀，大家都笑我，说我“砍草”来了，包工头看到我的时候，我已经干了好一会儿的活了，看我干的很是卖力，所以就把我留下来了，说是我能坚持干一天的话，就可以给我十块钱，还好，我没让自己失望，默默忍受大家的取笑，坚持“玩”了一天，最后如愿以偿，大家都夸我很乖很懂事，小小年纪便知道挣钱，长大以后肯定了不起。那时候的十块钱对我来说还是很多的，因为平时上学的时候，父母给的零花钱才只有几毛钱，而且也不是天天有零花钱买辣条的，小学在别的村庄，离家比较远，我每天只能拿一点妈妈蒸的干馒头，有钱买辣条的日子就是最开心的一天，那时候的日子总是那么简单。</h2><h2 id="emsp-emsp-后来上中学的时候，有一次暑假里，我外出打工，那是我第一次坐火车而且独自出发去别的省份，对于连我们那个小县城都没有走出去过的我来说，内心很是激动与慌张，一路上不停的寻求路人的帮助，还好克服重重困难最终“满载而归”。那时候村里外出打工的人都还很少，我也算是打工的“积极分子”，邻居们看我一个学生都可以出去挣钱，一些人也向我打听外面打工的情况，其实外面需要人手的地方很多，而且干的活很简单，妇女孩子都可以干。如今村里几乎所有能干的年轻人都外出打工了，虽然留下老人孩子生活不太方便，但是我觉得年轻人还是多多外出走走比较好，挣钱养家是一方面，开阔眼界长长见识也很重要。"><a href="#emsp-emsp-后来上中学的时候，有一次暑假里，我外出打工，那是我第一次坐火车而且独自出发去别的省份，对于连我们那个小县城都没有走出去过的我来说，内心很是激动与慌张，一路上不停的寻求路人的帮助，还好克服重重困难最终“满载而归”。那时候村里外出打工的人都还很少，我也算是打工的“积极分子”，邻居们看我一个学生都可以出去挣钱，一些人也向我打听外面打工的情况，其实外面需要人手的地方很多，而且干的活很简单，妇女孩子都可以干。如今村里几乎所有能干的年轻人都外出打工了，虽然留下老人孩子生活不太方便，但是我觉得年轻人还是多多外出走走比较好，挣钱养家是一方面，开阔眼界长长见识也很重要。" class="headerlink" title="&emsp;&emsp;后来上中学的时候，有一次暑假里，我外出打工，那是我第一次坐火车而且独自出发去别的省份，对于连我们那个小县城都没有走出去过的我来说，内心很是激动与慌张，一路上不停的寻求路人的帮助，还好克服重重困难最终“满载而归”。那时候村里外出打工的人都还很少，我也算是打工的“积极分子”，邻居们看我一个学生都可以出去挣钱，一些人也向我打听外面打工的情况，其实外面需要人手的地方很多，而且干的活很简单，妇女孩子都可以干。如今村里几乎所有能干的年轻人都外出打工了，虽然留下老人孩子生活不太方便，但是我觉得年轻人还是多多外出走走比较好，挣钱养家是一方面，开阔眼界长长见识也很重要。"></a>&emsp;&emsp;后来上中学的时候，有一次暑假里，我外出打工，那是我第一次坐火车而且独自出发去别的省份，对于连我们那个小县城都没有走出去过的我来说，内心很是激动与慌张，一路上不停的寻求路人的帮助，还好克服重重困难最终“满载而归”。那时候村里外出打工的人都还很少，我也算是打工的“积极分子”，邻居们看我一个学生都可以出去挣钱，一些人也向我打听外面打工的情况，其实外面需要人手的地方很多，而且干的活很简单，妇女孩子都可以干。如今村里几乎所有能干的年轻人都外出打工了，虽然留下老人孩子生活不太方便，但是我觉得年轻人还是多多外出走走比较好，挣钱养家是一方面，开阔眼界长长见识也很重要。</h2><h2 id="emsp-emsp-在大学的假期里，我也积极打工，寒假里同学们大多都回家过年了，而我则找一些活干，原因很简单，想要的东西没钱买，只有通过自己的努力去争取。记得大一那年寒假我去了一家电子厂，虽然工作也很简单，但是对于没怎么碰过电脑的我来说每天都很紧张，面对眼前的二十几台机器，每台都配有一台电脑，那时候我连鼠标都操作起来很是僵硬，却愣是硬着头皮一直干到新学期的开始，挣的钱足够我半个学期的生活费了，我很开心。有一个领导看我的操作很是费劲，性格又比较内向，建议我去学计算机，他告诉我他以前当过海军，如今干这个也算是不同的行业，教我不要担心，年轻人要大胆的去尝试。后来我终于有了自己的电脑，并且学习了一段时间的编程，虽然最终我还是从事了自己的专业领域，那些“花里胡哨”的知识也逐渐地遗忘，但是那些难忘的经历将或多或少的影响我以后的旅途方向。"><a href="#emsp-emsp-在大学的假期里，我也积极打工，寒假里同学们大多都回家过年了，而我则找一些活干，原因很简单，想要的东西没钱买，只有通过自己的努力去争取。记得大一那年寒假我去了一家电子厂，虽然工作也很简单，但是对于没怎么碰过电脑的我来说每天都很紧张，面对眼前的二十几台机器，每台都配有一台电脑，那时候我连鼠标都操作起来很是僵硬，却愣是硬着头皮一直干到新学期的开始，挣的钱足够我半个学期的生活费了，我很开心。有一个领导看我的操作很是费劲，性格又比较内向，建议我去学计算机，他告诉我他以前当过海军，如今干这个也算是不同的行业，教我不要担心，年轻人要大胆的去尝试。后来我终于有了自己的电脑，并且学习了一段时间的编程，虽然最终我还是从事了自己的专业领域，那些“花里胡哨”的知识也逐渐地遗忘，但是那些难忘的经历将或多或少的影响我以后的旅途方向。" class="headerlink" title="&emsp;&emsp;在大学的假期里，我也积极打工，寒假里同学们大多都回家过年了，而我则找一些活干，原因很简单，想要的东西没钱买，只有通过自己的努力去争取。记得大一那年寒假我去了一家电子厂，虽然工作也很简单，但是对于没怎么碰过电脑的我来说每天都很紧张，面对眼前的二十几台机器，每台都配有一台电脑，那时候我连鼠标都操作起来很是僵硬，却愣是硬着头皮一直干到新学期的开始，挣的钱足够我半个学期的生活费了，我很开心。有一个领导看我的操作很是费劲，性格又比较内向，建议我去学计算机，他告诉我他以前当过海军，如今干这个也算是不同的行业，教我不要担心，年轻人要大胆的去尝试。后来我终于有了自己的电脑，并且学习了一段时间的编程，虽然最终我还是从事了自己的专业领域，那些“花里胡哨”的知识也逐渐地遗忘，但是那些难忘的经历将或多或少的影响我以后的旅途方向。"></a>&emsp;&emsp;在大学的假期里，我也积极打工，寒假里同学们大多都回家过年了，而我则找一些活干，原因很简单，想要的东西没钱买，只有通过自己的努力去争取。记得大一那年寒假我去了一家电子厂，虽然工作也很简单，但是对于没怎么碰过电脑的我来说每天都很紧张，面对眼前的二十几台机器，每台都配有一台电脑，那时候我连鼠标都操作起来很是僵硬，却愣是硬着头皮一直干到新学期的开始，挣的钱足够我半个学期的生活费了，我很开心。有一个领导看我的操作很是费劲，性格又比较内向，建议我去学计算机，他告诉我他以前当过海军，如今干这个也算是不同的行业，教我不要担心，年轻人要大胆的去尝试。后来我终于有了自己的电脑，并且学习了一段时间的编程，虽然最终我还是从事了自己的专业领域，那些“花里胡哨”的知识也逐渐地遗忘，但是那些难忘的经历将或多或少的影响我以后的旅途方向。</h2><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%976/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得5</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%975/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%975/</guid>
      <pubDate>Sun, 30 Aug 2020 01:50:59 GMT</pubDate>
      <description>
      
        培训第五周裂解单元PID图学习
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;有些东西我们可以抛弃，却无法忘记，它静静地躺在记忆的深处，冷不丁醒来，让你心碎一场，激动一场，感叹一场，让后有沉沉的睡去。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="手机突然坏了"><a href="#手机突然坏了" class="headerlink" title="手机突然坏了"></a>手机突然坏了</h1><h3 id="emsp-emsp-现在的智能手机作为一个主要的生活工具，几乎人手一部，且形影不离，已经融入我们生活的方方面面，没有它，就会寸步难行。"><a href="#emsp-emsp-现在的智能手机作为一个主要的生活工具，几乎人手一部，且形影不离，已经融入我们生活的方方面面，没有它，就会寸步难行。" class="headerlink" title="&emsp;&emsp;现在的智能手机作为一个主要的生活工具，几乎人手一部，且形影不离，已经融入我们生活的方方面面，没有它，就会寸步难行。"></a>&emsp;&emsp;现在的智能手机作为一个主要的生活工具，几乎人手一部，且形影不离，已经融入我们生活的方方面面，没有它，就会寸步难行。</h3><h3 id="emsp-emsp-最近我的手机出现了一次问题，令我很不愉快。近期以来天气炎热，我的手机连续使用几个小时，就会出现明显的发烧问题，甚至是发烫，虽然算是某名牌手机，但已经“服役”两年半了，相比朋友们换手机的速度而言，已经很不错的了。"><a href="#emsp-emsp-最近我的手机出现了一次问题，令我很不愉快。近期以来天气炎热，我的手机连续使用几个小时，就会出现明显的发烧问题，甚至是发烫，虽然算是某名牌手机，但已经“服役”两年半了，相比朋友们换手机的速度而言，已经很不错的了。" class="headerlink" title="&emsp;&emsp;最近我的手机出现了一次问题，令我很不愉快。近期以来天气炎热，我的手机连续使用几个小时，就会出现明显的发烧问题，甚至是发烫，虽然算是某名牌手机，但已经“服役”两年半了，相比朋友们换手机的速度而言，已经很不错的了。"></a>&emsp;&emsp;最近我的手机出现了一次问题，令我很不愉快。近期以来天气炎热，我的手机连续使用几个小时，就会出现明显的发烧问题，甚至是发烫，虽然算是某名牌手机，但已经“服役”两年半了，相比朋友们换手机的速度而言，已经很不错的了。</h3><h3 id="emsp-emsp-手机刚开始发烫以后往往会出于自我保护的意识，自动关机，而我又要去使用它，所以过一会儿，等它清醒一下就会让它强制开机，继续为我服务。没想到就在前几天的一天下午，它就罢工了，无论我怎么施救，都无法将其唤醒，于是我上网查找各种处理办法，看看还能不能拯救一下，毕竟陪了我那么久，产生感情了嘛，再说换手机也得等到发工资以后才有底气嘛。"><a href="#emsp-emsp-手机刚开始发烫以后往往会出于自我保护的意识，自动关机，而我又要去使用它，所以过一会儿，等它清醒一下就会让它强制开机，继续为我服务。没想到就在前几天的一天下午，它就罢工了，无论我怎么施救，都无法将其唤醒，于是我上网查找各种处理办法，看看还能不能拯救一下，毕竟陪了我那么久，产生感情了嘛，再说换手机也得等到发工资以后才有底气嘛。" class="headerlink" title="&emsp;&emsp;手机刚开始发烫以后往往会出于自我保护的意识，自动关机，而我又要去使用它，所以过一会儿，等它清醒一下就会让它强制开机，继续为我服务。没想到就在前几天的一天下午，它就罢工了，无论我怎么施救，都无法将其唤醒，于是我上网查找各种处理办法，看看还能不能拯救一下，毕竟陪了我那么久，产生感情了嘛，再说换手机也得等到发工资以后才有底气嘛。"></a>&emsp;&emsp;手机刚开始发烫以后往往会出于自我保护的意识，自动关机，而我又要去使用它，所以过一会儿，等它清醒一下就会让它强制开机，继续为我服务。没想到就在前几天的一天下午，它就罢工了，无论我怎么施救，都无法将其唤醒，于是我上网查找各种处理办法，看看还能不能拯救一下，毕竟陪了我那么久，产生感情了嘛，再说换手机也得等到发工资以后才有底气嘛。</h3><h3 id="emsp-emsp-结果一直弄到晚上十点半，能尝试的措施都试遍了，结果它依然躺在那里，浑身冰凉。整得我都困了，感觉没希望了，最后迫于无奈，一狠心按下清除数据的按钮，眨眼间，这几年的资料数据便灰飞烟灭了。好在数据清空以后，终于把它从鬼门关拉了回来，只是一切都回到了最初的模样，备忘录里面记下的好多宝贵的心得感悟没了，其他的数据大多存在某网盘里面，我过几天就会备份一遍，所以几乎没有损失，就是这个备忘录内容是手机自带的备份软件备份的，而我忘了开同步了，上一次同步数据是在今年二月份，所以导致这半年多的记录没了，我很难过，那可是我一点一滴记下来的宝贵知识。从此以后可不敢忘记备份数据了。"><a href="#emsp-emsp-结果一直弄到晚上十点半，能尝试的措施都试遍了，结果它依然躺在那里，浑身冰凉。整得我都困了，感觉没希望了，最后迫于无奈，一狠心按下清除数据的按钮，眨眼间，这几年的资料数据便灰飞烟灭了。好在数据清空以后，终于把它从鬼门关拉了回来，只是一切都回到了最初的模样，备忘录里面记下的好多宝贵的心得感悟没了，其他的数据大多存在某网盘里面，我过几天就会备份一遍，所以几乎没有损失，就是这个备忘录内容是手机自带的备份软件备份的，而我忘了开同步了，上一次同步数据是在今年二月份，所以导致这半年多的记录没了，我很难过，那可是我一点一滴记下来的宝贵知识。从此以后可不敢忘记备份数据了。" class="headerlink" title="&emsp;&emsp;结果一直弄到晚上十点半，能尝试的措施都试遍了，结果它依然躺在那里，浑身冰凉。整得我都困了，感觉没希望了，最后迫于无奈，一狠心按下清除数据的按钮，眨眼间，这几年的资料数据便灰飞烟灭了。好在数据清空以后，终于把它从鬼门关拉了回来，只是一切都回到了最初的模样，备忘录里面记下的好多宝贵的心得感悟没了，其他的数据大多存在某网盘里面，我过几天就会备份一遍，所以几乎没有损失，就是这个备忘录内容是手机自带的备份软件备份的，而我忘了开同步了，上一次同步数据是在今年二月份，所以导致这半年多的记录没了，我很难过，那可是我一点一滴记下来的宝贵知识。从此以后可不敢忘记备份数据了。"></a>&emsp;&emsp;结果一直弄到晚上十点半，能尝试的措施都试遍了，结果它依然躺在那里，浑身冰凉。整得我都困了，感觉没希望了，最后迫于无奈，一狠心按下清除数据的按钮，眨眼间，这几年的资料数据便灰飞烟灭了。好在数据清空以后，终于把它从鬼门关拉了回来，只是一切都回到了最初的模样，备忘录里面记下的好多宝贵的心得感悟没了，其他的数据大多存在某网盘里面，我过几天就会备份一遍，所以几乎没有损失，就是这个备忘录内容是手机自带的备份软件备份的，而我忘了开同步了，上一次同步数据是在今年二月份，所以导致这半年多的记录没了，我很难过，那可是我一点一滴记下来的宝贵知识。从此以后可不敢忘记备份数据了。</h3><h3 id="emsp-emsp-现在的好多资料都以数据的形式存在于网上，虽然在网络上的数据不一定安全可靠，但却很便捷。手机说坏就坏了，让人难以提防，平日里养成备份重要东西的习惯，碰到问题时便会有备无患，不至于抓狂得无能狂怒，后悔莫及。"><a href="#emsp-emsp-现在的好多资料都以数据的形式存在于网上，虽然在网络上的数据不一定安全可靠，但却很便捷。手机说坏就坏了，让人难以提防，平日里养成备份重要东西的习惯，碰到问题时便会有备无患，不至于抓狂得无能狂怒，后悔莫及。" class="headerlink" title="&emsp;&emsp;现在的好多资料都以数据的形式存在于网上，虽然在网络上的数据不一定安全可靠，但却很便捷。手机说坏就坏了，让人难以提防，平日里养成备份重要东西的习惯，碰到问题时便会有备无患，不至于抓狂得无能狂怒，后悔莫及。"></a>&emsp;&emsp;现在的好多资料都以数据的形式存在于网上，虽然在网络上的数据不一定安全可靠，但却很便捷。手机说坏就坏了，让人难以提防，平日里养成备份重要东西的习惯，碰到问题时便会有备无患，不至于抓狂得无能狂怒，后悔莫及。</h3><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%975/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得4</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%974/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%974/</guid>
      <pubDate>Sun, 23 Aug 2020 12:17:47 GMT</pubDate>
      <description>
      
        培训第四周辅助单元学习
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;每一天遇见更好的自己。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="知识学习"><a href="#知识学习" class="headerlink" title="知识学习"></a>知识学习</h2><h3 id="本周学习关于辅助单元的知识，内容比较少，但同样重要，我因复习不到位，一些细节知识没有去总结记忆，考试虽然及格了，但是连小组的平均分都没有达到。对我而言，多几分少几分无所谓，但是这次拖了小组的后腿，实在不好意思。以后学习中可不敢马虎大意了。"><a href="#本周学习关于辅助单元的知识，内容比较少，但同样重要，我因复习不到位，一些细节知识没有去总结记忆，考试虽然及格了，但是连小组的平均分都没有达到。对我而言，多几分少几分无所谓，但是这次拖了小组的后腿，实在不好意思。以后学习中可不敢马虎大意了。" class="headerlink" title="本周学习关于辅助单元的知识，内容比较少，但同样重要，我因复习不到位，一些细节知识没有去总结记忆，考试虽然及格了，但是连小组的平均分都没有达到。对我而言，多几分少几分无所谓，但是这次拖了小组的后腿，实在不好意思。以后学习中可不敢马虎大意了。"></a>本周学习关于辅助单元的知识，内容比较少，但同样重要，我因复习不到位，一些细节知识没有去总结记忆，考试虽然及格了，但是连小组的平均分都没有达到。对我而言，多几分少几分无所谓，但是这次拖了小组的后腿，实在不好意思。以后学习中可不敢马虎大意了。</h3><h2 id="预防感冒"><a href="#预防感冒" class="headerlink" title="预防感冒"></a>预防感冒</h2><h3 id="最近以来，天气特别炎热，在培训室里面还好，当出去吃饭的时候，就能明显的感觉到巨大的温差，让人很不舒服，每次吃完饭都汗流浃背，热得只想脱掉外套，吹吹空调清爽一下，但是舒服一时痛苦很久，班里同学好多都是因为这样才感冒的，所以自己要格外注意预防感冒，保持身体健康，莫因感冒影响学习。此外得加强体育锻炼，强健体魄，增强体质，提高新陈代谢，提高免疫力，降低疾病的发生。"><a href="#最近以来，天气特别炎热，在培训室里面还好，当出去吃饭的时候，就能明显的感觉到巨大的温差，让人很不舒服，每次吃完饭都汗流浃背，热得只想脱掉外套，吹吹空调清爽一下，但是舒服一时痛苦很久，班里同学好多都是因为这样才感冒的，所以自己要格外注意预防感冒，保持身体健康，莫因感冒影响学习。此外得加强体育锻炼，强健体魄，增强体质，提高新陈代谢，提高免疫力，降低疾病的发生。" class="headerlink" title="最近以来，天气特别炎热，在培训室里面还好，当出去吃饭的时候，就能明显的感觉到巨大的温差，让人很不舒服，每次吃完饭都汗流浃背，热得只想脱掉外套，吹吹空调清爽一下，但是舒服一时痛苦很久，班里同学好多都是因为这样才感冒的，所以自己要格外注意预防感冒，保持身体健康，莫因感冒影响学习。此外得加强体育锻炼，强健体魄，增强体质，提高新陈代谢，提高免疫力，降低疾病的发生。"></a>最近以来，天气特别炎热，在培训室里面还好，当出去吃饭的时候，就能明显的感觉到巨大的温差，让人很不舒服，每次吃完饭都汗流浃背，热得只想脱掉外套，吹吹空调清爽一下，但是舒服一时痛苦很久，班里同学好多都是因为这样才感冒的，所以自己要格外注意预防感冒，保持身体健康，莫因感冒影响学习。此外得加强体育锻炼，强健体魄，增强体质，提高新陈代谢，提高免疫力，降低疾病的发生。</h3><h2 id="解决近视"><a href="#解决近视" class="headerlink" title="解决近视"></a>解决近视</h2><h3 id="近视时间很久了，在高三的时候就有明显的视力模糊的现象，但当时并没有配眼镜，直到现在，坐在第一排都看不清，感叹自己书没读多少，视力却模糊了。我意识到这是一个问题，周末赶紧跑了一趟眼镜城，给心灵的窗户装上了玻璃。感觉整个世界都亮清晰了，这种感觉真好。以后得多读书了，不然对不起这扇美丽的窗。"><a href="#近视时间很久了，在高三的时候就有明显的视力模糊的现象，但当时并没有配眼镜，直到现在，坐在第一排都看不清，感叹自己书没读多少，视力却模糊了。我意识到这是一个问题，周末赶紧跑了一趟眼镜城，给心灵的窗户装上了玻璃。感觉整个世界都亮清晰了，这种感觉真好。以后得多读书了，不然对不起这扇美丽的窗。" class="headerlink" title="近视时间很久了，在高三的时候就有明显的视力模糊的现象，但当时并没有配眼镜，直到现在，坐在第一排都看不清，感叹自己书没读多少，视力却模糊了。我意识到这是一个问题，周末赶紧跑了一趟眼镜城，给心灵的窗户装上了玻璃。感觉整个世界都亮清晰了，这种感觉真好。以后得多读书了，不然对不起这扇美丽的窗。"></a>近视时间很久了，在高三的时候就有明显的视力模糊的现象，但当时并没有配眼镜，直到现在，坐在第一排都看不清，感叹自己书没读多少，视力却模糊了。我意识到这是一个问题，周末赶紧跑了一趟眼镜城，给心灵的窗户装上了玻璃。感觉整个世界都亮清晰了，这种感觉真好。以后得多读书了，不然对不起这扇美丽的窗。</h3><h2 id="裂解率计算"><a href="#裂解率计算" class="headerlink" title="裂解率计算"></a>裂解率计算</h2><h3 id="关于裂解率的计算，这种问题很简单，但是每次计算都得列出反应式，得知道物质的摩尔质量，有时候忘了还得做加和计算，虽然步骤不多，但我还是觉得烦，所以花了点时间鼓捣了一个在线工具，每次计算只需要输入进料和出料即可，方便至极。它的意义不在于解决了多么重大的问题，而在于唤起了我学以致用的意识，在以后的学习生活中，捕捉更多的灵感。"><a href="#关于裂解率的计算，这种问题很简单，但是每次计算都得列出反应式，得知道物质的摩尔质量，有时候忘了还得做加和计算，虽然步骤不多，但我还是觉得烦，所以花了点时间鼓捣了一个在线工具，每次计算只需要输入进料和出料即可，方便至极。它的意义不在于解决了多么重大的问题，而在于唤起了我学以致用的意识，在以后的学习生活中，捕捉更多的灵感。" class="headerlink" title="关于裂解率的计算，这种问题很简单，但是每次计算都得列出反应式，得知道物质的摩尔质量，有时候忘了还得做加和计算，虽然步骤不多，但我还是觉得烦，所以花了点时间鼓捣了一个在线工具，每次计算只需要输入进料和出料即可，方便至极。它的意义不在于解决了多么重大的问题，而在于唤起了我学以致用的意识，在以后的学习生活中，捕捉更多的灵感。"></a>关于裂解率的计算，这种问题很简单，但是每次计算都得列出反应式，得知道物质的摩尔质量，有时候忘了还得做加和计算，虽然步骤不多，但我还是觉得烦，所以花了点时间鼓捣了一个在线工具，每次计算只需要输入进料和出料即可，方便至极。它的意义不在于解决了多么重大的问题，而在于唤起了我学以致用的意识，在以后的学习生活中，捕捉更多的灵感。</h3><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%974/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得3</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%973/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%973/</guid>
      <pubDate>Sun, 16 Aug 2020 10:16:12 GMT</pubDate>
      <description>
      
        培训第三周流程图pfd学习
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;你所担心的事，只有不超过10%会变成现实，其余都是自己吓自己。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="emsp-emsp-本周学习内容为各单元物料流程图，只要对整个工艺流程有个映像，对各个单元具体的流程就容易理解。画流程图同样不可死记硬背，要清楚的知道每股物料的来龙去脉和每一个设备的用途，这样记忆便容易多了。"><a href="#emsp-emsp-本周学习内容为各单元物料流程图，只要对整个工艺流程有个映像，对各个单元具体的流程就容易理解。画流程图同样不可死记硬背，要清楚的知道每股物料的来龙去脉和每一个设备的用途，这样记忆便容易多了。" class="headerlink" title="&emsp;&emsp;本周学习内容为各单元物料流程图，只要对整个工艺流程有个映像，对各个单元具体的流程就容易理解。画流程图同样不可死记硬背，要清楚的知道每股物料的来龙去脉和每一个设备的用途，这样记忆便容易多了。"></a>&emsp;&emsp;本周学习内容为各单元物料流程图，只要对整个工艺流程有个映像，对各个单元具体的流程就容易理解。画流程图同样不可死记硬背，要清楚的知道每股物料的来龙去脉和每一个设备的用途，这样记忆便容易多了。</h3><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><h3 id="emsp-emsp-饮食方面，自己的饭量相比以前来说有所增加，依然保持不挑食不浪费的好习惯，回寝室后做几个俯卧撑活动一下筋骨，保持健康的生活习惯。我注意到有的同事为了保持一个好身材而不吃晚饭，对此希望自己以后不必那样做。关于宾馆马桶拉粑粑溅水的问题，这一点自己还不太习惯，真是难以启齿，还得慢慢适应才行。"><a href="#emsp-emsp-饮食方面，自己的饭量相比以前来说有所增加，依然保持不挑食不浪费的好习惯，回寝室后做几个俯卧撑活动一下筋骨，保持健康的生活习惯。我注意到有的同事为了保持一个好身材而不吃晚饭，对此希望自己以后不必那样做。关于宾馆马桶拉粑粑溅水的问题，这一点自己还不太习惯，真是难以启齿，还得慢慢适应才行。" class="headerlink" title="&emsp;&emsp;饮食方面，自己的饭量相比以前来说有所增加，依然保持不挑食不浪费的好习惯，回寝室后做几个俯卧撑活动一下筋骨，保持健康的生活习惯。我注意到有的同事为了保持一个好身材而不吃晚饭，对此希望自己以后不必那样做。关于宾馆马桶拉粑粑溅水的问题，这一点自己还不太习惯，真是难以启齿，还得慢慢适应才行。"></a>&emsp;&emsp;饮食方面，自己的饭量相比以前来说有所增加，依然保持不挑食不浪费的好习惯，回寝室后做几个俯卧撑活动一下筋骨，保持健康的生活习惯。我注意到有的同事为了保持一个好身材而不吃晚饭，对此希望自己以后不必那样做。关于宾馆马桶拉粑粑溅水的问题，这一点自己还不太习惯，真是难以启齿，还得慢慢适应才行。</h3><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="emsp-emsp-关于饮食卫生，饭前洗手是进食前的重要环节，但是很少有人做到，还有大家都是穿着工作服，有些同事可能来自生产现场，穿的衣服上面比较脏有污物，可能他们自己没有意识到或是习惯了那样，有关领导应该督促改正他们那样的陋习，不注意卫生的话，打饭的时候很可能对饭菜不太“礼貌”，在食堂这样的公众场所，注意卫生不仅仅是个人形象问题，更是有关大家的饮食健康，需要每个人的共同关注。所以建议在打饭前有个洗手环节并确保每个人都能做到，以及不穿脏衣服进食堂，这样做会更好。"><a href="#emsp-emsp-关于饮食卫生，饭前洗手是进食前的重要环节，但是很少有人做到，还有大家都是穿着工作服，有些同事可能来自生产现场，穿的衣服上面比较脏有污物，可能他们自己没有意识到或是习惯了那样，有关领导应该督促改正他们那样的陋习，不注意卫生的话，打饭的时候很可能对饭菜不太“礼貌”，在食堂这样的公众场所，注意卫生不仅仅是个人形象问题，更是有关大家的饮食健康，需要每个人的共同关注。所以建议在打饭前有个洗手环节并确保每个人都能做到，以及不穿脏衣服进食堂，这样做会更好。" class="headerlink" title="&emsp;&emsp;关于饮食卫生，饭前洗手是进食前的重要环节，但是很少有人做到，还有大家都是穿着工作服，有些同事可能来自生产现场，穿的衣服上面比较脏有污物，可能他们自己没有意识到或是习惯了那样，有关领导应该督促改正他们那样的陋习，不注意卫生的话，打饭的时候很可能对饭菜不太“礼貌”，在食堂这样的公众场所，注意卫生不仅仅是个人形象问题，更是有关大家的饮食健康，需要每个人的共同关注。所以建议在打饭前有个洗手环节并确保每个人都能做到，以及不穿脏衣服进食堂，这样做会更好。"></a>&emsp;&emsp;关于饮食卫生，饭前洗手是进食前的重要环节，但是很少有人做到，还有大家都是穿着工作服，有些同事可能来自生产现场，穿的衣服上面比较脏有污物，可能他们自己没有意识到或是习惯了那样，有关领导应该督促改正他们那样的陋习，不注意卫生的话，打饭的时候很可能对饭菜不太“礼貌”，在食堂这样的公众场所，注意卫生不仅仅是个人形象问题，更是有关大家的饮食健康，需要每个人的共同关注。所以建议在打饭前有个洗手环节并确保每个人都能做到，以及不穿脏衣服进食堂，这样做会更好。</h3><h3 id="emsp-emsp-关于运输车辆停放，上下班的时候看到公司门口的马路边上有时会停放很多的危化品槽罐车，一个接着一个，马路上各种车辆你来我往，这样子不仅影响交通舒畅，而且存在安全隐患，建议修建专门的运输车辆停放场所。"><a href="#emsp-emsp-关于运输车辆停放，上下班的时候看到公司门口的马路边上有时会停放很多的危化品槽罐车，一个接着一个，马路上各种车辆你来我往，这样子不仅影响交通舒畅，而且存在安全隐患，建议修建专门的运输车辆停放场所。" class="headerlink" title="&emsp;&emsp;关于运输车辆停放，上下班的时候看到公司门口的马路边上有时会停放很多的危化品槽罐车，一个接着一个，马路上各种车辆你来我往，这样子不仅影响交通舒畅，而且存在安全隐患，建议修建专门的运输车辆停放场所。"></a>&emsp;&emsp;关于运输车辆停放，上下班的时候看到公司门口的马路边上有时会停放很多的危化品槽罐车，一个接着一个，马路上各种车辆你来我往，这样子不仅影响交通舒畅，而且存在安全隐患，建议修建专门的运输车辆停放场所。</h3><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%973/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得2</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%972/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%972/</guid>
      <pubDate>Sun, 09 Aug 2020 10:19:04 GMT</pubDate>
      <description>
      
        培训第二周设备基础知识学习
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;如果你想要过上更精致的生活，就多了解些表象之下的知识。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h3>&emsp;&emsp;基础知识培训第二周，从入职到现在有半个月时间了，对这边的生活环境和工作环境逐渐了解了。<br>学习方面。学习了相关的机械设备，并去了现场，直观的感受了一下，感觉挺好，大家都很兴奋，对着高大的反应器和精馏塔互相讨论它们的工作方式和不同的用途。在仓库里见到了一排排各式各样阀门，以前认为那些铁疙瘩都差不多，不就是个开关嘛，当近距离观察甚至上手触摸以后，才知道虽然看起来大同小异，但实际上用途是不一样的。课堂上学习的图纸是二维平面的，虽然看起来很容易理解，但面对真实的设备还是感觉有点陌生，要在前辈的带领下才能准确辨识。面对裂解炉，当看到那里面燃烧的熊熊烈火，当脸庞感受到那股热浪，感觉非常兴奋刺激。第一次背空气呼吸器，大家既好奇又笨手笨脚地不知所措，洋相百出，但那玩意在关键时刻是可以救命的，练习掌握正确的使用方法至关重要。在课上学习之后能动手体验一下，能去现场再看看，加强记忆，巩固知识，在脑子里面就能形成一个画面，根本不用担心记不住而去死记硬背。<h3><br><br><h3>&emsp;&emsp;生活方面。食堂的饭菜都还不错，肉菜的量很足，味道也不错，像我这种消瘦的身子可以放开了吃，吃饱了才有力气学习干活。作为一个北方人，对面食的喜爱是与生俱来的，是吃各种面条长大的孩子，来到南方工作，生活习惯有所差异，这得慢慢去适应。周末空闲下来的时候，穿越各个小巷街道去寻找，只为吃到一碗美味的面条，可能是自己太挑剔了吧。现在正值酷暑天气，上课总是容易犯困打瞌睡，影响学习，免费提供的茶叶咖啡很快就被一抢而空，要是大家交一点班费，多买一点的话应该就够用了吧。课上犯困还有一个原因是睡眠时间不足，没能养成早睡早起的好习惯，这一点自己还得刻意练习才行。</h3><br><h3>&emsp;&emsp;其他方面。本次小组得分排名倒数第一，作为团队的一员，自己负有一定的责任，坐在第一排占据得天独厚的优势条件，却没能多多表现，为小组争光，实在不好意思。目前各小组的得分差异主要提现在上课回答问题的积极与否，考试成绩都差不多的，其实就上课回答问题这个事，自己是有些顾虑的。中学的时候上课回答问题非常积极，结果有同学反应，意思是学习好的同学不能太嚣张，老师讲啥你都会，那老师一听就不讲了或是粗略的过了，造成的结果就是大多数同学并没有真正的掌握知识，而自己却感觉很得意的样子。我曾愧疚不已，在后来的学习中便很少再抢风头了。虽然现在看来有点陈旧，但过去的影响一直都在。</h3><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center></h3></h3>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%972/#disqus_thread</comments>
    </item>
    
    <item>
      <title>现代礼仪</title>
      <link>https://shulu520.com/%E5%A4%A7%E5%AD%A6MOOC/%E7%8E%B0%E4%BB%A3%E7%A4%BC%E4%BB%AA/</link>
      <guid>https://shulu520.com/%E5%A4%A7%E5%AD%A6MOOC/%E7%8E%B0%E4%BB%A3%E7%A4%BC%E4%BB%AA/</guid>
      <pubDate>Fri, 31 Jul 2020 14:12:22 GMT</pubDate>
      <description>
      
        人无礼则不生，事无礼则不成，国家无礼则不宁。————荀子
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;不学礼，无以立————孔子</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><blockquote><p>&emsp;&emsp;你没有第二次机会给人留下第一印象。</p></blockquote><blockquote><p>&emsp;&emsp;留心处处皆学问。</p></blockquote><h2 id="礼仪的内涵"><a href="#礼仪的内涵" class="headerlink" title="礼仪的内涵"></a>礼仪的内涵</h2><h3 id="礼貌：尊敬、重视和有好的态度。礼节：待人接物方面的形式。仪表：精神状态。"><a href="#礼貌：尊敬、重视和有好的态度。礼节：待人接物方面的形式。仪表：精神状态。" class="headerlink" title="礼貌：尊敬、重视和有好的态度。礼节：待人接物方面的形式。仪表：精神状态。"></a>礼貌：尊敬、重视和有好的态度。礼节：待人接物方面的形式。仪表：精神状态。</h3><h3 id="仪式：约定俗成的共同认可的行为规范。"><a href="#仪式：约定俗成的共同认可的行为规范。" class="headerlink" title="仪式：约定俗成的共同认可的行为规范。"></a>仪式：约定俗成的共同认可的行为规范。</h3><h2 id="礼仪的实质：敬人敬己、慎独、三分资质，七分打扮。"><a href="#礼仪的实质：敬人敬己、慎独、三分资质，七分打扮。" class="headerlink" title="礼仪的实质：敬人敬己、慎独、三分资质，七分打扮。"></a>礼仪的实质：敬人敬己、慎独、三分资质，七分打扮。</h2><h2 id="仪容礼仪：面部、颈部、手、皮肤护理"><a href="#仪容礼仪：面部、颈部、手、皮肤护理" class="headerlink" title="仪容礼仪：面部、颈部、手、皮肤护理"></a>仪容礼仪：面部、颈部、手、皮肤护理</h2><ul><li>头型，定制发型，不遮眼，不遮耳，不遮颈</li><li>面部，每天早晚用洗面奶清洗两遍，保湿，清洁鼻子眼睛嘴唇耳朵下巴，刷牙漱口，保持清新口气</li><li>颈部，与面部同等级的护理</li><li>手部，避免洗衣粉之类的，或使用手套，洗手液清洗护理，指甲剪断 清理污物，指甲油透明的或肉色的</li><li>皮肤，保持愉快的心情，良好的睡眠习惯，睡前洗脸，常喝水，饮食清淡，水果蔬菜，防紫外线</li></ul><h2 id="仪表礼仪"><a href="#仪表礼仪" class="headerlink" title="仪表礼仪"></a>仪表礼仪</h2><h3 id="面部表情"><a href="#面部表情" class="headerlink" title="面部表情"></a>面部表情</h3><ul><li>真诚，友善，眼神注视时间三分之二左右，眉毛，微笑</li></ul><h3 id="着装礼仪"><a href="#着装礼仪" class="headerlink" title="着装礼仪"></a>着装礼仪</h3><ul><li>时间，地点，目的</li><li>整洁，整体，不超过三色，个性，鞋子比裤子重要，裤子比上衣重要，里面的衣服比外面的衣服重要</li></ul><h3 id="西服"><a href="#西服" class="headerlink" title="西服"></a>西服</h3><ul><li>两粒纽扣，站着时候只扣上面的一个，坐下时可以都打开，下面的一粒永远都不要扣，双排扣都得扣上</li><li>衬衫，白色最好，里面的衬衫比外面的外套厂1厘米左右</li><li>领带，配西服与衬衫</li><li>鞋子，皮鞋，深颜色的棉袜，深蓝色黑色</li><li>三一定律，黑色的西服皮鞋公文包，褐色的皮带公文包皮鞋</li><li>口袋里面不要放太多的东西，腰间不挂钥匙链</li></ul><h3 id="女士套裙"><a href="#女士套裙" class="headerlink" title="女士套裙"></a>女士套裙</h3><ul><li>套裙要有袜子，鞋子前不露脚趾后不露脚跟，不要黑色的皮短裙</li></ul><h3 id="配饰"><a href="#配饰" class="headerlink" title="配饰"></a>配饰</h3><ul><li>男士看表，女士看包</li><li>数量不超过6个点</li><li>同色同质</li><li>扬长避短，长型的脸戴耳钉，不戴长链的</li><li>戒指戴在中指表示正在恋爱中，已婚的人戴在无名指，独身的小拇指，装饰性的食指</li><li>男士，眼镜，皮带，领带，西服皮带3公分</li></ul><h2 id="仪态礼仪：形态-站姿-走姿-坐姿-蹲姿-手势"><a href="#仪态礼仪：形态-站姿-走姿-坐姿-蹲姿-手势" class="headerlink" title="仪态礼仪：形态 站姿 走姿 坐姿 蹲姿 手势"></a>仪态礼仪：形态 站姿 走姿 坐姿 蹲姿 手势</h2><h2 id="生活礼仪"><a href="#生活礼仪" class="headerlink" title="生活礼仪"></a>生活礼仪</h2><h3 id="家庭"><a href="#家庭" class="headerlink" title="家庭"></a>家庭</h3><ul><li>孝敬父母 礼待亲戚朋友 兄弟姐妹常联系 夫妻之间相互欣赏鼓励互相宽容</li></ul><h3 id="学校生活礼仪"><a href="#学校生活礼仪" class="headerlink" title="学校生活礼仪"></a>学校生活礼仪</h3><h3 id="课堂"><a href="#课堂" class="headerlink" title="课堂"></a>课堂</h3><ul><li>尊重老师</li><li>注重个人形象</li><li>教室不进食</li><li>认真听讲</li><li>发言举手</li></ul><h3 id="同学"><a href="#同学" class="headerlink" title="同学"></a>同学</h3><ul><li>尊重</li><li>有借有还</li><li>关心</li><li>平等对待</li><li>发现别人的优点</li><li>学会分享</li><li>不要斤斤计较</li></ul><h3 id="交友婚恋礼仪"><a href="#交友婚恋礼仪" class="headerlink" title="交友婚恋礼仪"></a>交友婚恋礼仪</h3><ul><li>欲知其人，先观其朋</li><li>物以类聚，人以群分</li><li>近朱者赤，近墨者黑</li><li>孟母三迁</li><li>广泛交友</li><li>坚持原则</li><li>完善自我</li><li>真诚付出</li></ul><h3 id="男性朋友"><a href="#男性朋友" class="headerlink" title="男性朋友"></a>男性朋友</h3><ul><li>有男子汉气魄 </li><li>有君子的风范</li><li>讲原则</li></ul><h3 id="女性朋友"><a href="#女性朋友" class="headerlink" title="女性朋友"></a>女性朋友</h3><ul><li>注重形象</li><li>坦诚相待</li><li>有容人之心</li></ul><h3 id="异性交友"><a href="#异性交友" class="headerlink" title="异性交友"></a>异性交友</h3><ul><li>男女有别</li><li>互相尊重</li><li>光明正大</li><li>顾全“大局”，当异性朋友有了对象以后，保持距离</li></ul><h3 id="恋爱朋友"><a href="#恋爱朋友" class="headerlink" title="恋爱朋友"></a>恋爱朋友</h3><ul><li>表白，首先了解对方是否有了对象，表白直白明确不模糊</li><li>拒绝，尊重别人的自尊心，不可以伤害一个喜欢自己的人，拒绝直白明确不模糊</li><li>相处，不要终日吵架，不轻易说分手，不要激化矛盾，不翻旧账，</li><li>分手，当面把话说清楚，好聚好散，到公共场所，不拖泥带水，避免发生冲突</li></ul><h3 id="出行礼仪"><a href="#出行礼仪" class="headerlink" title="出行礼仪"></a>出行礼仪</h3><ul><li>行路礼仪：不三五成群挡住别人，不玩手机，注意生命安全</li><li>行车礼仪：宁停三分，不抢一秒，一慢二看三通过，不往车窗外扔东西，雨天慢性注意行人</li><li>乘坐电梯：面朝电梯门，靠里面站</li><li>自动扶梯：要手抓扶梯，不然一旦骤停很危险，靠右边站</li><li>乘车礼仪：注意安全</li></ul><h3 id="公共场所礼仪"><a href="#公共场所礼仪" class="headerlink" title="公共场所礼仪"></a>公共场所礼仪</h3><ul><li></li></ul><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"></center>]]></content:encoded>
      
      <comments>https://shulu520.com/%E5%A4%A7%E5%AD%A6MOOC/%E7%8E%B0%E4%BB%A3%E7%A4%BC%E4%BB%AA/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp入职培训</title>
      <link>https://shulu520.com/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/</link>
      <guid>https://shulu520.com/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/</guid>
      <pubDate>Fri, 24 Jul 2020 15:26:42 GMT</pubDate>
      <description>
      
        浅记入职培训之经过
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;7月20日正式入职以来至今，为期一周的职前培训，学习了很多的东西，经历了好多事情，生活过的相当充实，丰富多彩，值得回味。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><ul><li>20日，了解工作，认识同事，熟悉环境，转换角色，重新认识自我</li><li>21日，进行双选会，面试不同的部门，期待心仪的工作岗位</li><li>22日，来到小南湖风景区，安全培训知识学习，加强团队建设，体验农家生活</li><li>23日，文化，素养，后勤，认识，6S，等学习</li><li><p>24日，职业安全培训，对生活中的安全问题有了大致的了解，考试，新人才艺表演</p></li><li><p>感受最深的就是“安全”二字，不但要时刻想着安全，而且还得不断践行在生活中的细节里</p></li></ul><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/#disqus_thread</comments>
    </item>
    
    <item>
      <title>电脑问题处理</title>
      <link>https://shulu520.com/%E7%94%B5%E8%84%91/%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</link>
      <guid>https://shulu520.com/%E7%94%B5%E8%84%91/%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</guid>
      <pubDate>Fri, 19 Jun 2020 05:20:14 GMT</pubDate>
      <description>
      
        电脑使用中的Q&amp;A
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;git  fuck 文章写完之后直接上传，这是已经配置好的简化命令。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="软件安装注册时"><a href="#软件安装注册时" class="headerlink" title="软件安装注册时"></a>软件安装注册时</h2><p>电脑Windows Defender消息显示有病毒，无法进行安装注册<br>打开设置，进入Windows Defender，<br>点击病毒和威胁防护，点击‘病毒和威胁防护’设置，将实时保护关闭。<br>待软件安装完成之后，再将实时保护关闭即可。</p><h2 id="博客文章发表出现的问题"><a href="#博客文章发表出现的问题" class="headerlink" title="博客文章发表出现的问题"></a>博客文章发表出现的问题</h2><p>注意在 “description：” 这里的冒号之后有一个空格，少了这个空格会导致这篇文章无法发表。</p><h2 id="Excel-无法打开文件“新建-Microsoft-Excel-工作表-xlsx”，因为文件格式或文件扩展名无效-解决方法如下：按Win-R输入regedit，打开注册表"><a href="#Excel-无法打开文件“新建-Microsoft-Excel-工作表-xlsx”，因为文件格式或文件扩展名无效-解决方法如下：按Win-R输入regedit，打开注册表" class="headerlink" title="Excel 无法打开文件“新建 Microsoft Excel 工作表.xlsx”，因为文件格式或文件扩展名无效 解决方法如下：按Win+R输入regedit，打开注册表"></a>Excel 无法打开文件“新建 Microsoft Excel 工作表.xlsx”，因为文件格式或文件扩展名无效 解决方法如下：按Win+R输入regedit，打开注册表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/learllp/article/details/79723078?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=229aed61-e516-4d52-bab0-8fb76592087b&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.control</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/%E7%94%B5%E8%84%91/%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
