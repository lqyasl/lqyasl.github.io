<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>梦不成</title>
    <link>https://shulu520.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>君子生非异也，善假于物也</description>
    <pubDate>Sun, 06 Sep 2020 07:30:55 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>sp心得6</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%976/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%976/</guid>
      <pubDate>Sat, 05 Sep 2020 14:03:15 GMT</pubDate>
      <description>
      
        培训第6周VCM精制HCL塔PID
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="挣钱往事"><a href="#挣钱往事" class="headerlink" title="挣钱往事"></a>挣钱往事</h1><h2 id="emsp-emsp-我来自西北农村家庭，一直以来都勤俭节约，独立自主。拿到职业生涯第一笔工资，不禁想起我挣钱的往事。"><a href="#emsp-emsp-我来自西北农村家庭，一直以来都勤俭节约，独立自主。拿到职业生涯第一笔工资，不禁想起我挣钱的往事。" class="headerlink" title="&emsp;&emsp;我来自西北农村家庭，一直以来都勤俭节约，独立自主。拿到职业生涯第一笔工资，不禁想起我挣钱的往事。"></a>&emsp;&emsp;我来自西北农村家庭，一直以来都勤俭节约，独立自主。拿到职业生涯第一笔工资，不禁想起我挣钱的往事。</h2><h2 id="emsp-emsp-第一次挣钱的时候我还是七八岁的小孩子。有一次在山上苗圃地里面除草，大人们干活，我就跟在后面，使用的工具也是搞笑，人家都拿的是镰刀，而我则拿的是砍树的大刀，大家都笑我，说我“砍草”来了，包工头看到我的时候，我已经干了好一会儿的活了，看我干的很是卖力，所以就把我留下来了，说是我能坚持干一天的话，就可以给我十块钱，还好，我没让自己失望，默默忍受大家的取笑，坚持“玩”了一天，最后如愿以偿，大家都夸我很乖很懂事，小小年纪便知道挣钱，长大以后肯定了不起。那时候的十块钱对我来说还是很多的，因为平时上学的时候，父母给的零花钱才只有几毛钱，而且也不是天天有零花钱买辣条的，小学在别的村庄，离家比较远，我每天只能拿一点妈妈蒸的干馒头，有钱买辣条的日子就是最开心的一天，那时候的日子总是那么简单。"><a href="#emsp-emsp-第一次挣钱的时候我还是七八岁的小孩子。有一次在山上苗圃地里面除草，大人们干活，我就跟在后面，使用的工具也是搞笑，人家都拿的是镰刀，而我则拿的是砍树的大刀，大家都笑我，说我“砍草”来了，包工头看到我的时候，我已经干了好一会儿的活了，看我干的很是卖力，所以就把我留下来了，说是我能坚持干一天的话，就可以给我十块钱，还好，我没让自己失望，默默忍受大家的取笑，坚持“玩”了一天，最后如愿以偿，大家都夸我很乖很懂事，小小年纪便知道挣钱，长大以后肯定了不起。那时候的十块钱对我来说还是很多的，因为平时上学的时候，父母给的零花钱才只有几毛钱，而且也不是天天有零花钱买辣条的，小学在别的村庄，离家比较远，我每天只能拿一点妈妈蒸的干馒头，有钱买辣条的日子就是最开心的一天，那时候的日子总是那么简单。" class="headerlink" title="&emsp;&emsp;第一次挣钱的时候我还是七八岁的小孩子。有一次在山上苗圃地里面除草，大人们干活，我就跟在后面，使用的工具也是搞笑，人家都拿的是镰刀，而我则拿的是砍树的大刀，大家都笑我，说我“砍草”来了，包工头看到我的时候，我已经干了好一会儿的活了，看我干的很是卖力，所以就把我留下来了，说是我能坚持干一天的话，就可以给我十块钱，还好，我没让自己失望，默默忍受大家的取笑，坚持“玩”了一天，最后如愿以偿，大家都夸我很乖很懂事，小小年纪便知道挣钱，长大以后肯定了不起。那时候的十块钱对我来说还是很多的，因为平时上学的时候，父母给的零花钱才只有几毛钱，而且也不是天天有零花钱买辣条的，小学在别的村庄，离家比较远，我每天只能拿一点妈妈蒸的干馒头，有钱买辣条的日子就是最开心的一天，那时候的日子总是那么简单。"></a>&emsp;&emsp;第一次挣钱的时候我还是七八岁的小孩子。有一次在山上苗圃地里面除草，大人们干活，我就跟在后面，使用的工具也是搞笑，人家都拿的是镰刀，而我则拿的是砍树的大刀，大家都笑我，说我“砍草”来了，包工头看到我的时候，我已经干了好一会儿的活了，看我干的很是卖力，所以就把我留下来了，说是我能坚持干一天的话，就可以给我十块钱，还好，我没让自己失望，默默忍受大家的取笑，坚持“玩”了一天，最后如愿以偿，大家都夸我很乖很懂事，小小年纪便知道挣钱，长大以后肯定了不起。那时候的十块钱对我来说还是很多的，因为平时上学的时候，父母给的零花钱才只有几毛钱，而且也不是天天有零花钱买辣条的，小学在别的村庄，离家比较远，我每天只能拿一点妈妈蒸的干馒头，有钱买辣条的日子就是最开心的一天，那时候的日子总是那么简单。</h2><h2 id="emsp-emsp-后来上中学的时候，有一次暑假里，我外出打工，那是我第一次坐火车而且独自出发去别的省份，对于连我们那个小县城都没有走出去过的我来说，内心很是激动与慌张，一路上不停的寻求路人的帮助，还好克服重重困难最终“满载而归”。那时候村里外出打工的人都还很少，我也算是打工的“积极分子”，邻居们看我一个学生都可以出去挣钱，一些人也向我打听外面打工的情况，其实外面需要人手的地方很多，而且干的活很简单，妇女孩子都可以干。如今村里几乎所有能干的年轻人都外出打工了，虽然留下老人孩子生活不太方便，但是我觉得年轻人还是多多外出走走比较好，挣钱养家是一方面，开阔眼界长长见识也很重要。"><a href="#emsp-emsp-后来上中学的时候，有一次暑假里，我外出打工，那是我第一次坐火车而且独自出发去别的省份，对于连我们那个小县城都没有走出去过的我来说，内心很是激动与慌张，一路上不停的寻求路人的帮助，还好克服重重困难最终“满载而归”。那时候村里外出打工的人都还很少，我也算是打工的“积极分子”，邻居们看我一个学生都可以出去挣钱，一些人也向我打听外面打工的情况，其实外面需要人手的地方很多，而且干的活很简单，妇女孩子都可以干。如今村里几乎所有能干的年轻人都外出打工了，虽然留下老人孩子生活不太方便，但是我觉得年轻人还是多多外出走走比较好，挣钱养家是一方面，开阔眼界长长见识也很重要。" class="headerlink" title="&emsp;&emsp;后来上中学的时候，有一次暑假里，我外出打工，那是我第一次坐火车而且独自出发去别的省份，对于连我们那个小县城都没有走出去过的我来说，内心很是激动与慌张，一路上不停的寻求路人的帮助，还好克服重重困难最终“满载而归”。那时候村里外出打工的人都还很少，我也算是打工的“积极分子”，邻居们看我一个学生都可以出去挣钱，一些人也向我打听外面打工的情况，其实外面需要人手的地方很多，而且干的活很简单，妇女孩子都可以干。如今村里几乎所有能干的年轻人都外出打工了，虽然留下老人孩子生活不太方便，但是我觉得年轻人还是多多外出走走比较好，挣钱养家是一方面，开阔眼界长长见识也很重要。"></a>&emsp;&emsp;后来上中学的时候，有一次暑假里，我外出打工，那是我第一次坐火车而且独自出发去别的省份，对于连我们那个小县城都没有走出去过的我来说，内心很是激动与慌张，一路上不停的寻求路人的帮助，还好克服重重困难最终“满载而归”。那时候村里外出打工的人都还很少，我也算是打工的“积极分子”，邻居们看我一个学生都可以出去挣钱，一些人也向我打听外面打工的情况，其实外面需要人手的地方很多，而且干的活很简单，妇女孩子都可以干。如今村里几乎所有能干的年轻人都外出打工了，虽然留下老人孩子生活不太方便，但是我觉得年轻人还是多多外出走走比较好，挣钱养家是一方面，开阔眼界长长见识也很重要。</h2><h2 id="emsp-emsp-在大学的假期里，我也积极打工，寒假里同学们大多都回家过年了，而我则找一些活干，原因很简单，想要的东西没钱买，只有通过自己的努力去争取。记得大一那年寒假我去了一家电子厂，虽然工作也很简单，但是对于没怎么碰过电脑的我来说每天都很紧张，面对眼前的二十几台机器，每台都配有一台电脑，那时候我连鼠标都操作起来很是僵硬，却愣是硬着头皮一直干到新学期的开始，挣的钱足够我半个学期的生活费了，我很开心。有一个领导看我的操作很是费劲，性格又比较内向，建议我去学计算机，他告诉我他以前当过海军，如今干这个也算是不同的行业，教我不要担心，年轻人要大胆的去尝试。后来我终于有了自己的电脑，并且学习了一段时间的编程，虽然最终我还是从事了自己的专业领域，那些“花里胡哨”的知识也逐渐地遗忘，但是那些难忘的经历将或多或少的影响我以后的旅途方向。"><a href="#emsp-emsp-在大学的假期里，我也积极打工，寒假里同学们大多都回家过年了，而我则找一些活干，原因很简单，想要的东西没钱买，只有通过自己的努力去争取。记得大一那年寒假我去了一家电子厂，虽然工作也很简单，但是对于没怎么碰过电脑的我来说每天都很紧张，面对眼前的二十几台机器，每台都配有一台电脑，那时候我连鼠标都操作起来很是僵硬，却愣是硬着头皮一直干到新学期的开始，挣的钱足够我半个学期的生活费了，我很开心。有一个领导看我的操作很是费劲，性格又比较内向，建议我去学计算机，他告诉我他以前当过海军，如今干这个也算是不同的行业，教我不要担心，年轻人要大胆的去尝试。后来我终于有了自己的电脑，并且学习了一段时间的编程，虽然最终我还是从事了自己的专业领域，那些“花里胡哨”的知识也逐渐地遗忘，但是那些难忘的经历将或多或少的影响我以后的旅途方向。" class="headerlink" title="&emsp;&emsp;在大学的假期里，我也积极打工，寒假里同学们大多都回家过年了，而我则找一些活干，原因很简单，想要的东西没钱买，只有通过自己的努力去争取。记得大一那年寒假我去了一家电子厂，虽然工作也很简单，但是对于没怎么碰过电脑的我来说每天都很紧张，面对眼前的二十几台机器，每台都配有一台电脑，那时候我连鼠标都操作起来很是僵硬，却愣是硬着头皮一直干到新学期的开始，挣的钱足够我半个学期的生活费了，我很开心。有一个领导看我的操作很是费劲，性格又比较内向，建议我去学计算机，他告诉我他以前当过海军，如今干这个也算是不同的行业，教我不要担心，年轻人要大胆的去尝试。后来我终于有了自己的电脑，并且学习了一段时间的编程，虽然最终我还是从事了自己的专业领域，那些“花里胡哨”的知识也逐渐地遗忘，但是那些难忘的经历将或多或少的影响我以后的旅途方向。"></a>&emsp;&emsp;在大学的假期里，我也积极打工，寒假里同学们大多都回家过年了，而我则找一些活干，原因很简单，想要的东西没钱买，只有通过自己的努力去争取。记得大一那年寒假我去了一家电子厂，虽然工作也很简单，但是对于没怎么碰过电脑的我来说每天都很紧张，面对眼前的二十几台机器，每台都配有一台电脑，那时候我连鼠标都操作起来很是僵硬，却愣是硬着头皮一直干到新学期的开始，挣的钱足够我半个学期的生活费了，我很开心。有一个领导看我的操作很是费劲，性格又比较内向，建议我去学计算机，他告诉我他以前当过海军，如今干这个也算是不同的行业，教我不要担心，年轻人要大胆的去尝试。后来我终于有了自己的电脑，并且学习了一段时间的编程，虽然最终我还是从事了自己的专业领域，那些“花里胡哨”的知识也逐渐地遗忘，但是那些难忘的经历将或多或少的影响我以后的旅途方向。</h2><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%976/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得5</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%975/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%975/</guid>
      <pubDate>Sun, 30 Aug 2020 01:50:59 GMT</pubDate>
      <description>
      
        培训第五周裂解单元PID图学习
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;有些东西我们可以抛弃，却无法忘记，它静静地躺在记忆的深处，冷不丁醒来，让你心碎一场，激动一场，感叹一场，让后有沉沉的睡去。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="手机突然坏了"><a href="#手机突然坏了" class="headerlink" title="手机突然坏了"></a>手机突然坏了</h1><h3 id="emsp-emsp-现在的智能手机作为一个主要的生活工具，几乎人手一部，且形影不离，已经融入我们生活的方方面面，没有它，就会寸步难行。"><a href="#emsp-emsp-现在的智能手机作为一个主要的生活工具，几乎人手一部，且形影不离，已经融入我们生活的方方面面，没有它，就会寸步难行。" class="headerlink" title="&emsp;&emsp;现在的智能手机作为一个主要的生活工具，几乎人手一部，且形影不离，已经融入我们生活的方方面面，没有它，就会寸步难行。"></a>&emsp;&emsp;现在的智能手机作为一个主要的生活工具，几乎人手一部，且形影不离，已经融入我们生活的方方面面，没有它，就会寸步难行。</h3><h3 id="emsp-emsp-最近我的手机出现了一次问题，令我很不愉快。近期以来天气炎热，我的手机连续使用几个小时，就会出现明显的发烧问题，甚至是发烫，虽然算是某名牌手机，但已经“服役”两年半了，相比朋友们换手机的速度而言，已经很不错的了。"><a href="#emsp-emsp-最近我的手机出现了一次问题，令我很不愉快。近期以来天气炎热，我的手机连续使用几个小时，就会出现明显的发烧问题，甚至是发烫，虽然算是某名牌手机，但已经“服役”两年半了，相比朋友们换手机的速度而言，已经很不错的了。" class="headerlink" title="&emsp;&emsp;最近我的手机出现了一次问题，令我很不愉快。近期以来天气炎热，我的手机连续使用几个小时，就会出现明显的发烧问题，甚至是发烫，虽然算是某名牌手机，但已经“服役”两年半了，相比朋友们换手机的速度而言，已经很不错的了。"></a>&emsp;&emsp;最近我的手机出现了一次问题，令我很不愉快。近期以来天气炎热，我的手机连续使用几个小时，就会出现明显的发烧问题，甚至是发烫，虽然算是某名牌手机，但已经“服役”两年半了，相比朋友们换手机的速度而言，已经很不错的了。</h3><h3 id="emsp-emsp-手机刚开始发烫以后往往会出于自我保护的意识，自动关机，而我又要去使用它，所以过一会儿，等它清醒一下就会让它强制开机，继续为我服务。没想到就在前几天的一天下午，它就罢工了，无论我怎么施救，都无法将其唤醒，于是我上网查找各种处理办法，看看还能不能拯救一下，毕竟陪了我那么久，产生感情了嘛，再说换手机也得等到发工资以后才有底气嘛。"><a href="#emsp-emsp-手机刚开始发烫以后往往会出于自我保护的意识，自动关机，而我又要去使用它，所以过一会儿，等它清醒一下就会让它强制开机，继续为我服务。没想到就在前几天的一天下午，它就罢工了，无论我怎么施救，都无法将其唤醒，于是我上网查找各种处理办法，看看还能不能拯救一下，毕竟陪了我那么久，产生感情了嘛，再说换手机也得等到发工资以后才有底气嘛。" class="headerlink" title="&emsp;&emsp;手机刚开始发烫以后往往会出于自我保护的意识，自动关机，而我又要去使用它，所以过一会儿，等它清醒一下就会让它强制开机，继续为我服务。没想到就在前几天的一天下午，它就罢工了，无论我怎么施救，都无法将其唤醒，于是我上网查找各种处理办法，看看还能不能拯救一下，毕竟陪了我那么久，产生感情了嘛，再说换手机也得等到发工资以后才有底气嘛。"></a>&emsp;&emsp;手机刚开始发烫以后往往会出于自我保护的意识，自动关机，而我又要去使用它，所以过一会儿，等它清醒一下就会让它强制开机，继续为我服务。没想到就在前几天的一天下午，它就罢工了，无论我怎么施救，都无法将其唤醒，于是我上网查找各种处理办法，看看还能不能拯救一下，毕竟陪了我那么久，产生感情了嘛，再说换手机也得等到发工资以后才有底气嘛。</h3><h3 id="emsp-emsp-结果一直弄到晚上十点半，能尝试的措施都试遍了，结果它依然躺在那里，浑身冰凉。整得我都困了，感觉没希望了，最后迫于无奈，一狠心按下清除数据的按钮，眨眼间，这几年的资料数据便灰飞烟灭了。好在数据清空以后，终于把它从鬼门关拉了回来，只是一切都回到了最初的模样，备忘录里面记下的好多宝贵的心得感悟没了，其他的数据大多存在某网盘里面，我过几天就会备份一遍，所以几乎没有损失，就是这个备忘录内容是手机自带的备份软件备份的，而我忘了开同步了，上一次同步数据是在今年二月份，所以导致这半年多的记录没了，我很难过，那可是我一点一滴记下来的宝贵知识。从此以后可不敢忘记备份数据了。"><a href="#emsp-emsp-结果一直弄到晚上十点半，能尝试的措施都试遍了，结果它依然躺在那里，浑身冰凉。整得我都困了，感觉没希望了，最后迫于无奈，一狠心按下清除数据的按钮，眨眼间，这几年的资料数据便灰飞烟灭了。好在数据清空以后，终于把它从鬼门关拉了回来，只是一切都回到了最初的模样，备忘录里面记下的好多宝贵的心得感悟没了，其他的数据大多存在某网盘里面，我过几天就会备份一遍，所以几乎没有损失，就是这个备忘录内容是手机自带的备份软件备份的，而我忘了开同步了，上一次同步数据是在今年二月份，所以导致这半年多的记录没了，我很难过，那可是我一点一滴记下来的宝贵知识。从此以后可不敢忘记备份数据了。" class="headerlink" title="&emsp;&emsp;结果一直弄到晚上十点半，能尝试的措施都试遍了，结果它依然躺在那里，浑身冰凉。整得我都困了，感觉没希望了，最后迫于无奈，一狠心按下清除数据的按钮，眨眼间，这几年的资料数据便灰飞烟灭了。好在数据清空以后，终于把它从鬼门关拉了回来，只是一切都回到了最初的模样，备忘录里面记下的好多宝贵的心得感悟没了，其他的数据大多存在某网盘里面，我过几天就会备份一遍，所以几乎没有损失，就是这个备忘录内容是手机自带的备份软件备份的，而我忘了开同步了，上一次同步数据是在今年二月份，所以导致这半年多的记录没了，我很难过，那可是我一点一滴记下来的宝贵知识。从此以后可不敢忘记备份数据了。"></a>&emsp;&emsp;结果一直弄到晚上十点半，能尝试的措施都试遍了，结果它依然躺在那里，浑身冰凉。整得我都困了，感觉没希望了，最后迫于无奈，一狠心按下清除数据的按钮，眨眼间，这几年的资料数据便灰飞烟灭了。好在数据清空以后，终于把它从鬼门关拉了回来，只是一切都回到了最初的模样，备忘录里面记下的好多宝贵的心得感悟没了，其他的数据大多存在某网盘里面，我过几天就会备份一遍，所以几乎没有损失，就是这个备忘录内容是手机自带的备份软件备份的，而我忘了开同步了，上一次同步数据是在今年二月份，所以导致这半年多的记录没了，我很难过，那可是我一点一滴记下来的宝贵知识。从此以后可不敢忘记备份数据了。</h3><h3 id="emsp-emsp-现在的好多资料都以数据的形式存在于网上，虽然在网络上的数据不一定安全可靠，但却很便捷。手机说坏就坏了，让人难以提防，平日里养成备份重要东西的习惯，碰到问题时便会有备无患，不至于抓狂得无能狂怒，后悔莫及。"><a href="#emsp-emsp-现在的好多资料都以数据的形式存在于网上，虽然在网络上的数据不一定安全可靠，但却很便捷。手机说坏就坏了，让人难以提防，平日里养成备份重要东西的习惯，碰到问题时便会有备无患，不至于抓狂得无能狂怒，后悔莫及。" class="headerlink" title="&emsp;&emsp;现在的好多资料都以数据的形式存在于网上，虽然在网络上的数据不一定安全可靠，但却很便捷。手机说坏就坏了，让人难以提防，平日里养成备份重要东西的习惯，碰到问题时便会有备无患，不至于抓狂得无能狂怒，后悔莫及。"></a>&emsp;&emsp;现在的好多资料都以数据的形式存在于网上，虽然在网络上的数据不一定安全可靠，但却很便捷。手机说坏就坏了，让人难以提防，平日里养成备份重要东西的习惯，碰到问题时便会有备无患，不至于抓狂得无能狂怒，后悔莫及。</h3><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%975/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得4</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%974/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%974/</guid>
      <pubDate>Sun, 23 Aug 2020 12:17:47 GMT</pubDate>
      <description>
      
        培训第四周辅助单元学习
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;每一天遇见更好的自己。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="知识学习"><a href="#知识学习" class="headerlink" title="知识学习"></a>知识学习</h2><h3 id="本周学习关于辅助单元的知识，内容比较少，但同样重要，我因复习不到位，一些细节知识没有去总结记忆，考试虽然及格了，但是连小组的平均分都没有达到。对我而言，多几分少几分无所谓，但是这次拖了小组的后腿，实在不好意思。以后学习中可不敢马虎大意了。"><a href="#本周学习关于辅助单元的知识，内容比较少，但同样重要，我因复习不到位，一些细节知识没有去总结记忆，考试虽然及格了，但是连小组的平均分都没有达到。对我而言，多几分少几分无所谓，但是这次拖了小组的后腿，实在不好意思。以后学习中可不敢马虎大意了。" class="headerlink" title="本周学习关于辅助单元的知识，内容比较少，但同样重要，我因复习不到位，一些细节知识没有去总结记忆，考试虽然及格了，但是连小组的平均分都没有达到。对我而言，多几分少几分无所谓，但是这次拖了小组的后腿，实在不好意思。以后学习中可不敢马虎大意了。"></a>本周学习关于辅助单元的知识，内容比较少，但同样重要，我因复习不到位，一些细节知识没有去总结记忆，考试虽然及格了，但是连小组的平均分都没有达到。对我而言，多几分少几分无所谓，但是这次拖了小组的后腿，实在不好意思。以后学习中可不敢马虎大意了。</h3><h2 id="预防感冒"><a href="#预防感冒" class="headerlink" title="预防感冒"></a>预防感冒</h2><h3 id="最近以来，天气特别炎热，在培训室里面还好，当出去吃饭的时候，就能明显的感觉到巨大的温差，让人很不舒服，每次吃完饭都汗流浃背，热得只想脱掉外套，吹吹空调清爽一下，但是舒服一时痛苦很久，班里同学好多都是因为这样才感冒的，所以自己要格外注意预防感冒，保持身体健康，莫因感冒影响学习。此外得加强体育锻炼，强健体魄，增强体质，提高新陈代谢，提高免疫力，降低疾病的发生。"><a href="#最近以来，天气特别炎热，在培训室里面还好，当出去吃饭的时候，就能明显的感觉到巨大的温差，让人很不舒服，每次吃完饭都汗流浃背，热得只想脱掉外套，吹吹空调清爽一下，但是舒服一时痛苦很久，班里同学好多都是因为这样才感冒的，所以自己要格外注意预防感冒，保持身体健康，莫因感冒影响学习。此外得加强体育锻炼，强健体魄，增强体质，提高新陈代谢，提高免疫力，降低疾病的发生。" class="headerlink" title="最近以来，天气特别炎热，在培训室里面还好，当出去吃饭的时候，就能明显的感觉到巨大的温差，让人很不舒服，每次吃完饭都汗流浃背，热得只想脱掉外套，吹吹空调清爽一下，但是舒服一时痛苦很久，班里同学好多都是因为这样才感冒的，所以自己要格外注意预防感冒，保持身体健康，莫因感冒影响学习。此外得加强体育锻炼，强健体魄，增强体质，提高新陈代谢，提高免疫力，降低疾病的发生。"></a>最近以来，天气特别炎热，在培训室里面还好，当出去吃饭的时候，就能明显的感觉到巨大的温差，让人很不舒服，每次吃完饭都汗流浃背，热得只想脱掉外套，吹吹空调清爽一下，但是舒服一时痛苦很久，班里同学好多都是因为这样才感冒的，所以自己要格外注意预防感冒，保持身体健康，莫因感冒影响学习。此外得加强体育锻炼，强健体魄，增强体质，提高新陈代谢，提高免疫力，降低疾病的发生。</h3><h2 id="解决近视"><a href="#解决近视" class="headerlink" title="解决近视"></a>解决近视</h2><h3 id="近视时间很久了，在高三的时候就有明显的视力模糊的现象，但当时并没有配眼镜，直到现在，坐在第一排都看不清，感叹自己书没读多少，视力却模糊了。我意识到这是一个问题，周末赶紧跑了一趟眼镜城，给心灵的窗户装上了玻璃。感觉整个世界都亮清晰了，这种感觉真好。以后得多读书了，不然对不起这扇美丽的窗。"><a href="#近视时间很久了，在高三的时候就有明显的视力模糊的现象，但当时并没有配眼镜，直到现在，坐在第一排都看不清，感叹自己书没读多少，视力却模糊了。我意识到这是一个问题，周末赶紧跑了一趟眼镜城，给心灵的窗户装上了玻璃。感觉整个世界都亮清晰了，这种感觉真好。以后得多读书了，不然对不起这扇美丽的窗。" class="headerlink" title="近视时间很久了，在高三的时候就有明显的视力模糊的现象，但当时并没有配眼镜，直到现在，坐在第一排都看不清，感叹自己书没读多少，视力却模糊了。我意识到这是一个问题，周末赶紧跑了一趟眼镜城，给心灵的窗户装上了玻璃。感觉整个世界都亮清晰了，这种感觉真好。以后得多读书了，不然对不起这扇美丽的窗。"></a>近视时间很久了，在高三的时候就有明显的视力模糊的现象，但当时并没有配眼镜，直到现在，坐在第一排都看不清，感叹自己书没读多少，视力却模糊了。我意识到这是一个问题，周末赶紧跑了一趟眼镜城，给心灵的窗户装上了玻璃。感觉整个世界都亮清晰了，这种感觉真好。以后得多读书了，不然对不起这扇美丽的窗。</h3><h2 id="裂解率计算"><a href="#裂解率计算" class="headerlink" title="裂解率计算"></a>裂解率计算</h2><h3 id="关于裂解率的计算，这种问题很简单，但是每次计算都得列出反应式，得知道物质的摩尔质量，有时候忘了还得做加和计算，虽然步骤不多，但我还是觉得烦，所以花了点时间鼓捣了一个在线工具，每次计算只需要输入进料和出料即可，方便至极。它的意义不在于解决了多么重大的问题，而在于唤起了我学以致用的意识，在以后的学习生活中，捕捉更多的灵感。"><a href="#关于裂解率的计算，这种问题很简单，但是每次计算都得列出反应式，得知道物质的摩尔质量，有时候忘了还得做加和计算，虽然步骤不多，但我还是觉得烦，所以花了点时间鼓捣了一个在线工具，每次计算只需要输入进料和出料即可，方便至极。它的意义不在于解决了多么重大的问题，而在于唤起了我学以致用的意识，在以后的学习生活中，捕捉更多的灵感。" class="headerlink" title="关于裂解率的计算，这种问题很简单，但是每次计算都得列出反应式，得知道物质的摩尔质量，有时候忘了还得做加和计算，虽然步骤不多，但我还是觉得烦，所以花了点时间鼓捣了一个在线工具，每次计算只需要输入进料和出料即可，方便至极。它的意义不在于解决了多么重大的问题，而在于唤起了我学以致用的意识，在以后的学习生活中，捕捉更多的灵感。"></a>关于裂解率的计算，这种问题很简单，但是每次计算都得列出反应式，得知道物质的摩尔质量，有时候忘了还得做加和计算，虽然步骤不多，但我还是觉得烦，所以花了点时间鼓捣了一个在线工具，每次计算只需要输入进料和出料即可，方便至极。它的意义不在于解决了多么重大的问题，而在于唤起了我学以致用的意识，在以后的学习生活中，捕捉更多的灵感。</h3><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%974/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得3</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%973/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%973/</guid>
      <pubDate>Sun, 16 Aug 2020 10:16:12 GMT</pubDate>
      <description>
      
        培训第三周流程图pfd学习
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;你所担心的事，只有不超过10%会变成现实，其余都是自己吓自己。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="emsp-emsp-本周学习内容为各单元物料流程图，只要对整个工艺流程有个映像，对各个单元具体的流程就容易理解。画流程图同样不可死记硬背，要清楚的知道每股物料的来龙去脉和每一个设备的用途，这样记忆便容易多了。"><a href="#emsp-emsp-本周学习内容为各单元物料流程图，只要对整个工艺流程有个映像，对各个单元具体的流程就容易理解。画流程图同样不可死记硬背，要清楚的知道每股物料的来龙去脉和每一个设备的用途，这样记忆便容易多了。" class="headerlink" title="&emsp;&emsp;本周学习内容为各单元物料流程图，只要对整个工艺流程有个映像，对各个单元具体的流程就容易理解。画流程图同样不可死记硬背，要清楚的知道每股物料的来龙去脉和每一个设备的用途，这样记忆便容易多了。"></a>&emsp;&emsp;本周学习内容为各单元物料流程图，只要对整个工艺流程有个映像，对各个单元具体的流程就容易理解。画流程图同样不可死记硬背，要清楚的知道每股物料的来龙去脉和每一个设备的用途，这样记忆便容易多了。</h3><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><h3 id="emsp-emsp-饮食方面，自己的饭量相比以前来说有所增加，依然保持不挑食不浪费的好习惯，回寝室后做几个俯卧撑活动一下筋骨，保持健康的生活习惯。我注意到有的同事为了保持一个好身材而不吃晚饭，对此希望自己以后不必那样做。关于宾馆马桶拉粑粑溅水的问题，这一点自己还不太习惯，真是难以启齿，还得慢慢适应才行。"><a href="#emsp-emsp-饮食方面，自己的饭量相比以前来说有所增加，依然保持不挑食不浪费的好习惯，回寝室后做几个俯卧撑活动一下筋骨，保持健康的生活习惯。我注意到有的同事为了保持一个好身材而不吃晚饭，对此希望自己以后不必那样做。关于宾馆马桶拉粑粑溅水的问题，这一点自己还不太习惯，真是难以启齿，还得慢慢适应才行。" class="headerlink" title="&emsp;&emsp;饮食方面，自己的饭量相比以前来说有所增加，依然保持不挑食不浪费的好习惯，回寝室后做几个俯卧撑活动一下筋骨，保持健康的生活习惯。我注意到有的同事为了保持一个好身材而不吃晚饭，对此希望自己以后不必那样做。关于宾馆马桶拉粑粑溅水的问题，这一点自己还不太习惯，真是难以启齿，还得慢慢适应才行。"></a>&emsp;&emsp;饮食方面，自己的饭量相比以前来说有所增加，依然保持不挑食不浪费的好习惯，回寝室后做几个俯卧撑活动一下筋骨，保持健康的生活习惯。我注意到有的同事为了保持一个好身材而不吃晚饭，对此希望自己以后不必那样做。关于宾馆马桶拉粑粑溅水的问题，这一点自己还不太习惯，真是难以启齿，还得慢慢适应才行。</h3><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="emsp-emsp-关于饮食卫生，饭前洗手是进食前的重要环节，但是很少有人做到，还有大家都是穿着工作服，有些同事可能来自生产现场，穿的衣服上面比较脏有污物，可能他们自己没有意识到或是习惯了那样，有关领导应该督促改正他们那样的陋习，不注意卫生的话，打饭的时候很可能对饭菜不太“礼貌”，在食堂这样的公众场所，注意卫生不仅仅是个人形象问题，更是有关大家的饮食健康，需要每个人的共同关注。所以建议在打饭前有个洗手环节并确保每个人都能做到，以及不穿脏衣服进食堂，这样做会更好。"><a href="#emsp-emsp-关于饮食卫生，饭前洗手是进食前的重要环节，但是很少有人做到，还有大家都是穿着工作服，有些同事可能来自生产现场，穿的衣服上面比较脏有污物，可能他们自己没有意识到或是习惯了那样，有关领导应该督促改正他们那样的陋习，不注意卫生的话，打饭的时候很可能对饭菜不太“礼貌”，在食堂这样的公众场所，注意卫生不仅仅是个人形象问题，更是有关大家的饮食健康，需要每个人的共同关注。所以建议在打饭前有个洗手环节并确保每个人都能做到，以及不穿脏衣服进食堂，这样做会更好。" class="headerlink" title="&emsp;&emsp;关于饮食卫生，饭前洗手是进食前的重要环节，但是很少有人做到，还有大家都是穿着工作服，有些同事可能来自生产现场，穿的衣服上面比较脏有污物，可能他们自己没有意识到或是习惯了那样，有关领导应该督促改正他们那样的陋习，不注意卫生的话，打饭的时候很可能对饭菜不太“礼貌”，在食堂这样的公众场所，注意卫生不仅仅是个人形象问题，更是有关大家的饮食健康，需要每个人的共同关注。所以建议在打饭前有个洗手环节并确保每个人都能做到，以及不穿脏衣服进食堂，这样做会更好。"></a>&emsp;&emsp;关于饮食卫生，饭前洗手是进食前的重要环节，但是很少有人做到，还有大家都是穿着工作服，有些同事可能来自生产现场，穿的衣服上面比较脏有污物，可能他们自己没有意识到或是习惯了那样，有关领导应该督促改正他们那样的陋习，不注意卫生的话，打饭的时候很可能对饭菜不太“礼貌”，在食堂这样的公众场所，注意卫生不仅仅是个人形象问题，更是有关大家的饮食健康，需要每个人的共同关注。所以建议在打饭前有个洗手环节并确保每个人都能做到，以及不穿脏衣服进食堂，这样做会更好。</h3><h3 id="emsp-emsp-关于运输车辆停放，上下班的时候看到公司门口的马路边上有时会停放很多的危化品槽罐车，一个接着一个，马路上各种车辆你来我往，这样子不仅影响交通舒畅，而且存在安全隐患，建议修建专门的运输车辆停放场所。"><a href="#emsp-emsp-关于运输车辆停放，上下班的时候看到公司门口的马路边上有时会停放很多的危化品槽罐车，一个接着一个，马路上各种车辆你来我往，这样子不仅影响交通舒畅，而且存在安全隐患，建议修建专门的运输车辆停放场所。" class="headerlink" title="&emsp;&emsp;关于运输车辆停放，上下班的时候看到公司门口的马路边上有时会停放很多的危化品槽罐车，一个接着一个，马路上各种车辆你来我往，这样子不仅影响交通舒畅，而且存在安全隐患，建议修建专门的运输车辆停放场所。"></a>&emsp;&emsp;关于运输车辆停放，上下班的时候看到公司门口的马路边上有时会停放很多的危化品槽罐车，一个接着一个，马路上各种车辆你来我往，这样子不仅影响交通舒畅，而且存在安全隐患，建议修建专门的运输车辆停放场所。</h3><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%973/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp心得2</title>
      <link>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%972/</link>
      <guid>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%972/</guid>
      <pubDate>Sun, 09 Aug 2020 10:19:04 GMT</pubDate>
      <description>
      
        培训第二周设备基础知识学习
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;如果你想要过上更精致的生活，就多了解些表象之下的知识。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h3>&emsp;&emsp;基础知识培训第二周，从入职到现在有半个月时间了，对这边的生活环境和工作环境逐渐了解了。<br>学习方面。学习了相关的机械设备，并去了现场，直观的感受了一下，感觉挺好，大家都很兴奋，对着高大的反应器和精馏塔互相讨论它们的工作方式和不同的用途。在仓库里见到了一排排各式各样阀门，以前认为那些铁疙瘩都差不多，不就是个开关嘛，当近距离观察甚至上手触摸以后，才知道虽然看起来大同小异，但实际上用途是不一样的。课堂上学习的图纸是二维平面的，虽然看起来很容易理解，但面对真实的设备还是感觉有点陌生，要在前辈的带领下才能准确辨识。面对裂解炉，当看到那里面燃烧的熊熊烈火，当脸庞感受到那股热浪，感觉非常兴奋刺激。第一次背空气呼吸器，大家既好奇又笨手笨脚地不知所措，洋相百出，但那玩意在关键时刻是可以救命的，练习掌握正确的使用方法至关重要。在课上学习之后能动手体验一下，能去现场再看看，加强记忆，巩固知识，在脑子里面就能形成一个画面，根本不用担心记不住而去死记硬背。<h3><br><br><h3>&emsp;&emsp;生活方面。食堂的饭菜都还不错，肉菜的量很足，味道也不错，像我这种消瘦的身子可以放开了吃，吃饱了才有力气学习干活。作为一个北方人，对面食的喜爱是与生俱来的，是吃各种面条长大的孩子，来到南方工作，生活习惯有所差异，这得慢慢去适应。周末空闲下来的时候，穿越各个小巷街道去寻找，只为吃到一碗美味的面条，可能是自己太挑剔了吧。现在正值酷暑天气，上课总是容易犯困打瞌睡，影响学习，免费提供的茶叶咖啡很快就被一抢而空，要是大家交一点班费，多买一点的话应该就够用了吧。课上犯困还有一个原因是睡眠时间不足，没能养成早睡早起的好习惯，这一点自己还得刻意练习才行。</h3><br><h3>&emsp;&emsp;其他方面。本次小组得分排名倒数第一，作为团队的一员，自己负有一定的责任，坐在第一排占据得天独厚的优势条件，却没能多多表现，为小组争光，实在不好意思。目前各小组的得分差异主要提现在上课回答问题的积极与否，考试成绩都差不多的，其实就上课回答问题这个事，自己是有些顾虑的。中学的时候上课回答问题非常积极，结果有同学反应，意思是学习好的同学不能太嚣张，老师讲啥你都会，那老师一听就不讲了或是粗略的过了，造成的结果就是大多数同学并没有真正的掌握知识，而自己却感觉很得意的样子。我曾愧疚不已，在后来的学习中便很少再抢风头了。虽然现在看来有点陈旧，但过去的影响一直都在。</h3><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center></h3></h3>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%BF%83%E5%BE%97/sp%E5%BF%83%E5%BE%972/#disqus_thread</comments>
    </item>
    
    <item>
      <title>现代礼仪</title>
      <link>https://shulu520.com/%E5%A4%A7%E5%AD%A6MOOC/%E7%8E%B0%E4%BB%A3%E7%A4%BC%E4%BB%AA/</link>
      <guid>https://shulu520.com/%E5%A4%A7%E5%AD%A6MOOC/%E7%8E%B0%E4%BB%A3%E7%A4%BC%E4%BB%AA/</guid>
      <pubDate>Fri, 31 Jul 2020 14:12:22 GMT</pubDate>
      <description>
      
        人无礼则不生，事无礼则不成，国家无礼则不宁。————荀子
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;不学礼，无以立————孔子</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><blockquote><p>&emsp;&emsp;你没有第二次机会给人留下第一印象。</p></blockquote><blockquote><p>&emsp;&emsp;留心处处皆学问。</p></blockquote><h2 id="礼仪的内涵"><a href="#礼仪的内涵" class="headerlink" title="礼仪的内涵"></a>礼仪的内涵</h2><h3 id="礼貌：尊敬、重视和有好的态度。礼节：待人接物方面的形式。仪表：精神状态。"><a href="#礼貌：尊敬、重视和有好的态度。礼节：待人接物方面的形式。仪表：精神状态。" class="headerlink" title="礼貌：尊敬、重视和有好的态度。礼节：待人接物方面的形式。仪表：精神状态。"></a>礼貌：尊敬、重视和有好的态度。礼节：待人接物方面的形式。仪表：精神状态。</h3><h3 id="仪式：约定俗成的共同认可的行为规范。"><a href="#仪式：约定俗成的共同认可的行为规范。" class="headerlink" title="仪式：约定俗成的共同认可的行为规范。"></a>仪式：约定俗成的共同认可的行为规范。</h3><h2 id="礼仪的实质：敬人敬己、慎独、三分资质，七分打扮。"><a href="#礼仪的实质：敬人敬己、慎独、三分资质，七分打扮。" class="headerlink" title="礼仪的实质：敬人敬己、慎独、三分资质，七分打扮。"></a>礼仪的实质：敬人敬己、慎独、三分资质，七分打扮。</h2><h2 id="仪容礼仪：面部、颈部、手、皮肤护理"><a href="#仪容礼仪：面部、颈部、手、皮肤护理" class="headerlink" title="仪容礼仪：面部、颈部、手、皮肤护理"></a>仪容礼仪：面部、颈部、手、皮肤护理</h2><ul><li>头型，定制发型，不遮眼，不遮耳，不遮颈</li><li>面部，每天早晚用洗面奶清洗两遍，保湿，清洁鼻子眼睛嘴唇耳朵下巴，刷牙漱口，保持清新口气</li><li>颈部，与面部同等级的护理</li><li>手部，避免洗衣粉之类的，或使用手套，洗手液清洗护理，指甲剪断 清理污物，指甲油透明的或肉色的</li><li>皮肤，保持愉快的心情，良好的睡眠习惯，睡前洗脸，常喝水，饮食清淡，水果蔬菜，防紫外线</li></ul><h2 id="仪表礼仪"><a href="#仪表礼仪" class="headerlink" title="仪表礼仪"></a>仪表礼仪</h2><h3 id="面部表情"><a href="#面部表情" class="headerlink" title="面部表情"></a>面部表情</h3><ul><li>真诚，友善，眼神注视时间三分之二左右，眉毛，微笑</li></ul><h3 id="着装礼仪"><a href="#着装礼仪" class="headerlink" title="着装礼仪"></a>着装礼仪</h3><ul><li>时间，地点，目的</li><li>整洁，整体，不超过三色，个性，鞋子比裤子重要，裤子比上衣重要，里面的衣服比外面的衣服重要</li></ul><h3 id="西服"><a href="#西服" class="headerlink" title="西服"></a>西服</h3><ul><li>两粒纽扣，站着时候只扣上面的一个，坐下时可以都打开，下面的一粒永远都不要扣，双排扣都得扣上</li><li>衬衫，白色最好，里面的衬衫比外面的外套厂1厘米左右</li><li>领带，配西服与衬衫</li><li>鞋子，皮鞋，深颜色的棉袜，深蓝色黑色</li><li>三一定律，黑色的西服皮鞋公文包，褐色的皮带公文包皮鞋</li><li>口袋里面不要放太多的东西，腰间不挂钥匙链</li></ul><h3 id="女士套裙"><a href="#女士套裙" class="headerlink" title="女士套裙"></a>女士套裙</h3><ul><li>套裙要有袜子，鞋子前不露脚趾后不露脚跟，不要黑色的皮短裙</li></ul><h3 id="配饰"><a href="#配饰" class="headerlink" title="配饰"></a>配饰</h3><ul><li>男士看表，女士看包</li><li>数量不超过6个点</li><li>同色同质</li><li>扬长避短，长型的脸戴耳钉，不戴长链的</li><li>戒指戴在中指表示正在恋爱中，已婚的人戴在无名指，独身的小拇指，装饰性的食指</li><li>男士，眼镜，皮带，领带，西服皮带3公分</li></ul><h2 id="仪态礼仪：形态-站姿-走姿-坐姿-蹲姿-手势"><a href="#仪态礼仪：形态-站姿-走姿-坐姿-蹲姿-手势" class="headerlink" title="仪态礼仪：形态 站姿 走姿 坐姿 蹲姿 手势"></a>仪态礼仪：形态 站姿 走姿 坐姿 蹲姿 手势</h2><h2 id="生活礼仪"><a href="#生活礼仪" class="headerlink" title="生活礼仪"></a>生活礼仪</h2><h3 id="家庭"><a href="#家庭" class="headerlink" title="家庭"></a>家庭</h3><ul><li>孝敬父母 礼待亲戚朋友 兄弟姐妹常联系 夫妻之间相互欣赏鼓励互相宽容</li></ul><h3 id="学校生活礼仪"><a href="#学校生活礼仪" class="headerlink" title="学校生活礼仪"></a>学校生活礼仪</h3><h3 id="课堂"><a href="#课堂" class="headerlink" title="课堂"></a>课堂</h3><ul><li>尊重老师</li><li>注重个人形象</li><li>教室不进食</li><li>认真听讲</li><li>发言举手</li></ul><h3 id="同学"><a href="#同学" class="headerlink" title="同学"></a>同学</h3><ul><li>尊重</li><li>有借有还</li><li>关心</li><li>平等对待</li><li>发现别人的优点</li><li>学会分享</li><li>不要斤斤计较</li></ul><h3 id="交友婚恋礼仪"><a href="#交友婚恋礼仪" class="headerlink" title="交友婚恋礼仪"></a>交友婚恋礼仪</h3><ul><li>欲知其人，先观其朋</li><li>物以类聚，人以群分</li><li>近朱者赤，近墨者黑</li><li>孟母三迁</li><li>广泛交友</li><li>坚持原则</li><li>完善自我</li><li>真诚付出</li></ul><h3 id="男性朋友"><a href="#男性朋友" class="headerlink" title="男性朋友"></a>男性朋友</h3><ul><li>有男子汉气魄 </li><li>有君子的风范</li><li>讲原则</li></ul><h3 id="女性朋友"><a href="#女性朋友" class="headerlink" title="女性朋友"></a>女性朋友</h3><ul><li>注重形象</li><li>坦诚相待</li><li>有容人之心</li></ul><h3 id="异性交友"><a href="#异性交友" class="headerlink" title="异性交友"></a>异性交友</h3><ul><li>男女有别</li><li>互相尊重</li><li>光明正大</li><li>顾全“大局”，当异性朋友有了对象以后，保持距离</li></ul><h3 id="恋爱朋友"><a href="#恋爱朋友" class="headerlink" title="恋爱朋友"></a>恋爱朋友</h3><ul><li>表白，首先了解对方是否有了对象，表白直白明确不模糊</li><li>拒绝，尊重别人的自尊心，不可以伤害一个喜欢自己的人，拒绝直白明确不模糊</li><li>相处，不要终日吵架，不轻易说分手，不要激化矛盾，不翻旧账，</li><li>分手，当面把话说清楚，好聚好散，到公共场所，不拖泥带水，避免发生冲突</li></ul><h3 id="出行礼仪"><a href="#出行礼仪" class="headerlink" title="出行礼仪"></a>出行礼仪</h3><ul><li>行路礼仪：不三五成群挡住别人，不玩手机，注意生命安全</li><li>行车礼仪：宁停三分，不抢一秒，一慢二看三通过，不往车窗外扔东西，雨天慢性注意行人</li><li>乘坐电梯：面朝电梯门，靠里面站</li><li>自动扶梯：要手抓扶梯，不然一旦骤停很危险，靠右边站</li><li>乘车礼仪：注意安全</li></ul><h3 id="公共场所礼仪"><a href="#公共场所礼仪" class="headerlink" title="公共场所礼仪"></a>公共场所礼仪</h3><ul><li></li></ul><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"></center>]]></content:encoded>
      
      <comments>https://shulu520.com/%E5%A4%A7%E5%AD%A6MOOC/%E7%8E%B0%E4%BB%A3%E7%A4%BC%E4%BB%AA/#disqus_thread</comments>
    </item>
    
    <item>
      <title>sp入职培训</title>
      <link>https://shulu520.com/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/</link>
      <guid>https://shulu520.com/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/</guid>
      <pubDate>Fri, 24 Jul 2020 15:26:42 GMT</pubDate>
      <description>
      
        浅记入职培训之经过
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;7月20日正式入职以来至今，为期一周的职前培训，学习了很多的东西，经历了好多事情，生活过的相当充实，丰富多彩，值得回味。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><ul><li>20日，了解工作，认识同事，熟悉环境，转换角色，重新认识自我</li><li>21日，进行双选会，面试不同的部门，期待心仪的工作岗位</li><li>22日，来到小南湖风景区，安全培训知识学习，加强团队建设，体验农家生活</li><li>23日，文化，素养，后勤，认识，6S，等学习</li><li><p>24日，职业安全培训，对生活中的安全问题有了大致的了解，考试，新人才艺表演</p></li><li><p>感受最深的就是“安全”二字，不但要时刻想着安全，而且还得不断践行在生活中的细节里</p></li></ul><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/sp%E5%85%A5%E8%81%8C%E5%9F%B9%E8%AE%AD/#disqus_thread</comments>
    </item>
    
    <item>
      <title>电脑问题处理</title>
      <link>https://shulu520.com/%E7%94%B5%E8%84%91/%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</link>
      <guid>https://shulu520.com/%E7%94%B5%E8%84%91/%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</guid>
      <pubDate>Fri, 19 Jun 2020 05:20:14 GMT</pubDate>
      <description>
      
        电脑使用中的Q&amp;A
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;git  fuck 文章写完之后直接上传，这是已经配置好的简化命令。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><ul><li><p>软件安装注册时<br>电脑Windows Defender消息显示有病毒，无法进行安装注册<br>打开设置，进入Windows Defender，<br>点击病毒和威胁防护，点击‘病毒和威胁防护’设置，将实时保护关闭。<br>待软件安装完成之后，再将实时保护关闭即可。</p></li><li><p>博客文章发表出现的问题<br>注意在 “description：” 这里的冒号之后有一个空格，少了这个空格会导致这篇文章无法发表。</p></li></ul><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/%E7%94%B5%E8%84%91/%E7%94%B5%E8%84%91%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/#disqus_thread</comments>
    </item>
    
    <item>
      <title>壁纸</title>
      <link>https://shulu520.com/%E5%A3%81%E7%BA%B8/%E5%A3%81%E7%BA%B8/</link>
      <guid>https://shulu520.com/%E5%A3%81%E7%BA%B8/%E5%A3%81%E7%BA%B8/</guid>
      <pubDate>Tue, 16 Jun 2020 08:55:54 GMT</pubDate>
      <description>
      
        免费使用必应最新的桌面壁纸
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;嘿嘿嘿</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><ul><li>必应搜索页面<br>进入必应首页cn.bing.com，<br>点击图片右键查看网页源代码，<br>在第三行可以看到一行js代码，<br>中间有蓝色部分的图片链接，点击进入，<br>浏览器会在新页面打开这张图片，<br>右键图片另存为某地即可，<br>如果觉得好看的话，可以设置为桌面壁纸</li></ul><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="/壁纸/壁纸/./images/1592484666484.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/%E5%A3%81%E7%BA%B8/%E5%A3%81%E7%BA%B8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>2020开篇</title>
      <link>https://shulu520.com/uncategorized/2020%E5%BC%80%E7%AF%87/</link>
      <guid>https://shulu520.com/uncategorized/2020%E5%BC%80%E7%AF%87/</guid>
      <pubDate>Sat, 30 May 2020 16:10:27 GMT</pubDate>
      <description>
      
        &lt;blockquote&gt;
&lt;p&gt;&amp;emsp;&amp;emsp;代码之路停下久矣，今晚无聊之时，正好试试手，看看那些花里胡哨的操作还是否记的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;div style=&quot;width:100%;height:1px;background-color:pink;opacity:.7&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;代码之路停下久矣，今晚无聊之时，正好试试手，看看那些花里胡哨的操作还是否记的。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a><br>&emsp;&emsp;哈哈哈哈哈，还好没忘记，不错不错，阔以阔以，往后继续加油哦。</p><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/uncategorized/2020%E5%BC%80%E7%AF%87/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue常见组件之menu</title>
      <link>https://shulu520.com/vue/vue%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B9%8Bmenu/</link>
      <guid>https://shulu520.com/vue/vue%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B9%8Bmenu/</guid>
      <pubDate>Sat, 05 Oct 2019 06:16:47 GMT</pubDate>
      <description>
      
        vue常见组件
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;常见的首页竖条大菜单</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="pc端常见的竖条大菜单"><a href="#pc端常见的竖条大菜单" class="headerlink" title="pc端常见的竖条大菜单"></a>pc端常见的竖条大菜单</h2><ul><li>vue中以组件的形式来学习菜单</li><li>这里以自己写的menu.vue组件为例</li><li>左边的菜单项与右边的细节内容展示项为简单并列的dom结构即可，而非多么复杂的结构 </li><li>而在数据结构方面可以为嵌套的结构</li><li><p>右边只是一块空的展示区，展示左边的某一块内容细节，左边通过鼠标事件改变数据，从而改变右边展示区的内容。</p></li><li><p>因为左右两边为并列的dom结构而非父子结构，所以左边的鼠标事件(mouseover等)与右边无法衔接(就是鼠标从左边滑到右边后，右边会消失而不是继续展示，这点类似于鼠标的hover事件，通过鼠标hover维持状态的前提是，鼠标在当前元素以及它的子元素之上停留着)，所以我们通过在左右两边都监听鼠标事件来判断情况。 </p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"m-menu"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"nav"</span> @<span class="attr">mouseleave</span>=<span class="string">"navLeave"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>全部分类<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dd</span></span></span><br><span class="line"><span class="tag">        <span class="attr">v-for</span>=<span class="string">"(item, index) in menu"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">:key</span>=<span class="string">"index"</span></span></span><br><span class="line"><span class="tag">        @<span class="attr">mouseenter</span>=<span class="string">"navEnter"</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">:class</span>=<span class="string">"item.type"</span> /&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"arrow"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-if</span>=<span class="string">"kind"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">"detail"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">mouseenter</span>=<span class="string">"detEnter"</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">mouseleave</span>=<span class="string">"detLeave"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in curDetail.children"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">          &#123;&#123; item.title &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-for</span>=<span class="string">"(val, idx) in item.child"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:key</span>=<span class="string">"idx"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          &#123;&#123; val &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      kind: <span class="string">''</span>,</span></span><br><span class="line"><span class="undefined">      menu: [</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="javascript">          type: <span class="string">'food'</span>,</span></span><br><span class="line"><span class="javascript">          name: <span class="string">'美食'</span>,</span></span><br><span class="line"><span class="undefined">          children: [</span></span><br><span class="line"><span class="undefined">            &#123;</span></span><br><span class="line"><span class="javascript">              title: <span class="string">'热门美食'</span>,</span></span><br><span class="line"><span class="javascript">              child: [<span class="string">'火锅'</span>, <span class="string">'烤串'</span>, <span class="string">'啤酒'</span>, <span class="string">' 炸鸡'</span>, <span class="string">'小龙虾'</span>]</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">          ]</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        &#123;</span></span><br><span class="line"><span class="javascript">          type: <span class="string">'takeout'</span>,</span></span><br><span class="line"><span class="javascript">          name: <span class="string">'外面'</span>,</span></span><br><span class="line"><span class="undefined">          children: [</span></span><br><span class="line"><span class="undefined">            &#123;</span></span><br><span class="line"><span class="javascript">              title: <span class="string">'热门外卖'</span>,</span></span><br><span class="line"><span class="javascript">              child: [<span class="string">'黄焖鸡'</span>, <span class="string">'炒菜'</span>, <span class="string">'花生'</span>, <span class="string">'榨菜'</span>, <span class="string">'水饺'</span>]</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">          ]</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">      ]</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  computed: &#123;</span></span><br><span class="line"><span class="undefined">    curDetail () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">this</span>.menu.filter(<span class="function"><span class="params">item</span> =&gt;</span> item.type === <span class="keyword">this</span>.kind)[<span class="number">0</span>]</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    navEnter (e) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.kind = e.target.querySelector(<span class="string">'i'</span>).className</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    navLeave () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">this</span>.kind = <span class="string">''</span></span></span><br><span class="line"><span class="undefined">      &#125;, 150)</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    detEnter () &#123;</span></span><br><span class="line"><span class="javascript">      clearTimeout(<span class="keyword">this</span>.timer)</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    detLeave () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.kind = <span class="string">''</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue/vue%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B9%8Bmenu/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue常见组件之search</title>
      <link>https://shulu520.com/vue/vue%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B9%8Bsearch/</link>
      <guid>https://shulu520.com/vue/vue%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B9%8Bsearch/</guid>
      <pubDate>Sat, 05 Oct 2019 06:08:47 GMT</pubDate>
      <description>
      
        vue常见组件
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;vue常见组件之search，即大的电商等网站的大搜索框</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="pc端常见的搜索框组件"><a href="#pc端常见的搜索框组件" class="headerlink" title="pc端常见的搜索框组件"></a>pc端常见的搜索框组件</h2><ul><li>这里结合element ui来学习</li><li>以下是我写的search.vue组件</li><li>当输入框获得焦点而未输入内容时，展示热门搜索</li><li>当输入框获得焦点且输入内容时，展示相关的内容(请求数据并展示)</li><li>以上两者dom结构为并列结构即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"search-panel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">class</span>=<span class="string">"m-header-searchbar"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"6"</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"//s0.meituan.net/bs/fe-web-meituan/fa5f0f0/img/logo.png"</span> <span class="attr">alt</span>=<span class="string">"美团"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"12"</span> <span class="attr">class</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">            <span class="attr">v-model</span>=<span class="string">"search"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">placeholder</span>=<span class="string">"搜索商家或地点"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">focus</span>=<span class="string">"foucs"</span></span></span><br><span class="line"><span class="tag">            @<span class="attr">blur</span>=<span class="string">"blur"</span></span></span><br><span class="line"><span class="tag">          /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"el-button el-button--primary"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"el-icon-search"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"hotPlace"</span> <span class="attr">v-if</span>=<span class="string">"isHotList"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dt</span>&gt;</span>热门搜索<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>火锅<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>火锅<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>火锅<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">"searchList"</span> <span class="attr">v-if</span>=<span class="string">"isSearchList"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>小龙虾<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>小龙虾<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dd</span>&gt;</span>小龙虾<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"suggset"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>故宫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>故宫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>故宫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">to</span>=<span class="string">"/"</span> <span class="attr">class</span>=<span class="string">"takeout"</span>&gt;</span>美团外卖<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">to</span>=<span class="string">"/"</span> <span class="attr">class</span>=<span class="string">"movie"</span>&gt;</span>猫眼电影<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">to</span>=<span class="string">"/"</span> <span class="attr">class</span>=<span class="string">"hotel"</span>&gt;</span>美团酒店<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">to</span>=<span class="string">"/"</span> <span class="attr">class</span>=<span class="string">"apartment"</span>&gt;</span>民宿／公寓<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nuxt-link</span> <span class="attr">to</span>=<span class="string">"/"</span> <span class="attr">class</span>=<span class="string">"business"</span>&gt;</span>商家入驻<span class="tag">&lt;/<span class="name">nuxt-link</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"6"</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"security"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"refund"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span>随时退<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"single"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span>不满意免单<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"overdue"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span>过期退<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      search: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">      isFoucs: <span class="literal">false</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  computed: &#123;</span></span><br><span class="line"><span class="undefined">    isSearchList () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">this</span>.isFoucs &amp;&amp; <span class="keyword">this</span>.search</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    isHotList () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> <span class="keyword">this</span>.isFoucs &amp;&amp; !<span class="keyword">this</span>.search</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    foucs () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.isFoucs = <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    blur () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.isFoucs = <span class="literal">false</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue/vue%E5%B8%B8%E8%A7%81%E7%BB%84%E4%BB%B6%E4%B9%8Bsearch/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue技术栈-render和jsx</title>
      <link>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-render%E5%92%8Cjsx/</link>
      <guid>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-render%E5%92%8Cjsx/</guid>
      <pubDate>Tue, 24 Sep 2019 05:57:16 GMT</pubDate>
      <description>
      
        vue技术栈-render和jsx基本用法
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="渲染函数和JSX快速掌握"><a href="#渲染函数和JSX快速掌握" class="headerlink" title="渲染函数和JSX快速掌握"></a>渲染函数和JSX快速掌握</h1><ul><li><a href="https://cn.vuejs.org/v2/guide/render-function.html" target="_blank" rel="noopener">render-function</a></li></ul><h2 id="render函数"><a href="#render函数" class="headerlink" title="render函数"></a>render函数</h2><ul><li>h函数 有三个参数：第一个参数为必选参数(要渲染的组件或一个标签的字符串)，后两个为可选参数,</li><li>第二个参数为一个配置对象</li><li><p>第三个参数为字符串或数组 即元素要显示的文本内容或子节点</p></li><li><p>在vue中就是通过render函数将组件挂载到页面上的</p></li><li><p>渲染根组件APP</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">render: <span class="function"><span class="params">h</span> =&gt;</span> h(App)</span><br></pre></td></tr></table></figure><ul><li>渲染一个元素div</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">render: <span class="function"><span class="params">h</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> h(<span class="string">'div'</span>, &#123;</span><br><span class="line">    attrs: &#123; <span class="comment">// 写原生的属性attrs对象</span></span><br><span class="line">      id: <span class="string">'box'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    style: &#123; <span class="comment">// 写原生的样式style对象</span></span><br><span class="line">      color: <span class="string">'red'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;, <span class="string">'love'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>渲染一个自己封装好的组件 CountTo</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">render: <span class="function"><span class="params">h</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> h(CountTo, &#123;</span><br><span class="line">    <span class="comment">// 向组件中最外层元素绑定一个类名</span></span><br><span class="line">    <span class="comment">// 'class': 'love sex', // 可以是字符串</span></span><br><span class="line">    <span class="comment">// 'class': ['count-to', true ? 'wrapper' : 'box'], // 可以是数组，里面可以用逻辑表达式绑定类名</span></span><br><span class="line">    <span class="string">'class'</span>: &#123;</span><br><span class="line">      <span class="string">'number'</span>: <span class="literal">true</span> <span class="comment">// 可以是对象 也可以用逻辑表达式 决定属性的有无</span></span><br><span class="line">    &#125;,</span><br><span class="line">    attrs: &#123;&#125;,</span><br><span class="line">    style: &#123;&#125;,</span><br><span class="line">    props: &#123; <span class="comment">// 向组件中传值props对象</span></span><br><span class="line">      endValue: <span class="number">99999999</span></span><br><span class="line">    &#125;,</span><br><span class="line">    domProps: &#123;&#125;,</span><br><span class="line">    on: &#123; <span class="comment">// 监听组件中抛出的事件</span></span><br><span class="line">      <span class="string">'组件中抛出的事件名'</span> : <span class="function"><span class="params">val</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    nativeOn: &#123; <span class="comment">// 绑定监听原生的点击事件</span></span><br><span class="line">      <span class="string">'click'</span>: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'click :'</span>, <span class="string">'原生的点击事件'</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    directives:[], <span class="comment">// 自定义指令</span></span><br><span class="line">    scopedSlots: &#123;&#125;, <span class="comment">// 作用域插槽</span></span><br><span class="line">    slot: <span class="string">''</span>, <span class="comment">// 插槽</span></span><br><span class="line">    key: <span class="string">''</span>, <span class="comment">// key</span></span><br><span class="line">    ref: <span class="string">''</span> <span class="comment">// ref</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>子节点必须放到一个数组中</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 子节点的添加 */</span></span><br><span class="line">render: <span class="function"><span class="params">h</span> =&gt;</span> h(<span class="string">'div'</span>, [</span><br><span class="line">  h(<span class="string">'span'</span>, <span class="string">'111'</span>),</span><br><span class="line">  h(<span class="string">'p'</span>, <span class="string">'222'</span>),</span><br><span class="line">])</span><br><span class="line"><span class="comment">// 可以这样</span></span><br><span class="line">render: <span class="function"><span class="params">h</span> =&gt;</span> h(<span class="string">'div'</span>, [</span><br><span class="line">  h(<span class="string">'ul'</span>, &#123;</span><br><span class="line">    on: &#123;</span><br><span class="line">      <span class="string">'click'</span>: handleClick</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,[</span><br><span class="line">    h(<span class="string">'li'</span>, &#123;</span><br><span class="line">      on: &#123;</span><br><span class="line">        <span class="string">'click'</span>: handleClick</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  ])</span><br><span class="line">])</span><br></pre></td></tr></table></figure><ul><li>在render函数中模仿v-for循环产生元素</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arrName = [&#123;<span class="attr">name</span>: <span class="string">'shulu'</span>&#125;, &#123;<span class="attr">name</span>: <span class="string">'yachan'</span>&#125;, &#123;<span class="attr">name</span>: <span class="string">'liuqiuyun'</span>&#125;]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历调用h 函数</span></span><br><span class="line"><span class="keyword">const</span> getArrName = <span class="function">(<span class="params">h</span>) =&gt;</span></span><br><span class="line">  arrName.map(<span class="function">(<span class="params">item, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> h(<span class="string">'li'</span>, &#123;</span><br><span class="line">      on: &#123;</span><br><span class="line">        <span class="string">'click'</span>: handleClick</span><br><span class="line">      &#125;,</span><br><span class="line">      key: index</span><br><span class="line">    &#125;, item.name)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">render: <span class="function"><span class="params">h</span> =&gt;</span> h(<span class="string">'div'</span>,[</span><br><span class="line">  h(<span class="string">'ul'</span>, getArrName(h))</span><br><span class="line">])</span><br></pre></td></tr></table></figure><h2 id="函数式组件和JSX"><a href="#函数式组件和JSX" class="headerlink" title="函数式组件和JSX"></a>函数式组件和JSX</h2><ul><li>views/render-page.vue中引入List列表组件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">// views/render-page.vue 中引入List列表组件</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span> <span class="attr">:items</span>=<span class="string">"items"</span> <span class="attr">:render</span>=<span class="string">"renderFunc"</span>&gt;</span><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> List <span class="keyword">from</span> <span class="string">'_c/list'</span> <span class="comment">// list文件夹下有 index.js 它引入并导出了List组件</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'RenderPage'</span>,</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="undefined">    List,</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined">      items: [</span></span><br><span class="line"><span class="javascript">        &#123;<span class="attr">name</span>: <span class="string">'yachan'</span>&#125;,</span></span><br><span class="line"><span class="javascript">        &#123;<span class="attr">name</span>: <span class="string">'shulu'</span>&#125;,</span></span><br><span class="line"><span class="javascript">        &#123;<span class="attr">name</span>: <span class="string">'qiuyun'</span>&#125;</span></span><br><span class="line"><span class="undefined">      ]</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    handleClick () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">'click'</span>)</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 父组件使用时自己传入的标签例如i</span></span></span><br><span class="line"><span class="javascript">    renderFunc (h, name) &#123; <span class="comment">// JSX语法</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> ( <span class="comment">// 绑定事件 on- 前缀 nativeOn-click</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">on-click</span>=<span class="string">&#123;this.handleClick&#125;</span> <span class="attr">style</span>=<span class="string">&#123;&#123;color:</span> '<span class="attr">pink</span>'&#125;&#125;&gt;</span>&#123;name&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="undefined">      )</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>views/List.vue</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">// views/List.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item, index) in items"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"!render"</span>&gt;</span>&#123;&#123; item.name &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">render-dom</span> <span class="attr">v-else</span> <span class="attr">:render-func</span>=<span class="string">"render"</span> <span class="attr">:name</span>=<span class="string">"item.name"</span>&gt;</span><span class="tag">&lt;/<span class="name">render-dom</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> RenderDom <span class="keyword">from</span> <span class="string">'_c/render-dom'</span> <span class="comment">// 引入函数式组件 shit</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'List'</span>,</span></span><br><span class="line"><span class="javascript">  components: &#123; <span class="comment">// 注册函数式组件</span></span></span><br><span class="line"><span class="undefined">    RenderDom</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  props: &#123;</span></span><br><span class="line"><span class="undefined">    items: &#123;</span></span><br><span class="line"><span class="javascript">      type: <span class="built_in">Array</span>,</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> []</span></span><br><span class="line"><span class="undefined">    &#125;,</span></span><br><span class="line"><span class="undefined">    render: &#123;</span></span><br><span class="line"><span class="javascript">      type: <span class="built_in">Function</span>,</span></span><br><span class="line"><span class="javascript">      <span class="keyword">default</span>: <span class="function"><span class="params">()</span> =&gt;</span> &#123;&#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>函数式组件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一个普通的对象</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  functional: <span class="literal">true</span>,</span><br><span class="line">  props: &#123; <span class="comment">// 接收的值</span></span><br><span class="line">    name: <span class="built_in">String</span>,</span><br><span class="line">    renderFunc: <span class="built_in">Function</span></span><br><span class="line">  &#125;,</span><br><span class="line">  render: <span class="function">(<span class="params">h, ctx</span>) =&gt;</span> &#123; <span class="comment">// ctx 上下文环境</span></span><br><span class="line">    <span class="keyword">return</span> ctx.props.renderFunc(h, ctx.props.name)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h2><ul><li>属性slot-scope</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">count-to</span> <span class="attr">slot-scope</span>=<span class="string">"count"</span> <span class="attr">:end-value</span>=<span class="string">"count.number"</span>&gt;</span><span class="tag">&lt;/<span class="name">count-to</span>&gt;</span></span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-render%E5%92%8Cjsx/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue技术栈-第三方js库的使用</title>
      <link>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%AC%AC%E4%B8%89%E6%96%B9js%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <guid>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%AC%AC%E4%B8%89%E6%96%B9js%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <pubDate>Tue, 24 Sep 2019 04:20:21 GMT</pubDate>
      <description>
      
        vue技术栈-第三方js库的使用
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="第三方js库的使用"><a href="#第三方js库的使用" class="headerlink" title="第三方js库的使用"></a>第三方js库的使用</h1><ul><li>这里以数字渐变的一个第三方js库为依赖，学习简单的组件的封装</li><li><a href="https://github.com/inorganik/CountUp.js" target="_blank" rel="noopener">CountUp.js</a></li></ul><h2 id="组件中使用id值"><a href="#组件中使用id值" class="headerlink" title="组件中使用id值"></a>组件中使用id值</h2><ul><li>这个countup.js库的第一个参数为一个元素或组件的id值</li><li>我们知道id值在页面中是唯一的，所以我们的分装的组件要想复用就得使用不同的id</li><li>this._uid 每一个vue组件都有唯一的标识 _uid, 我们通过计算属性的getter方法就可以拿到他</li></ul><h2 id="组件中获取dom"><a href="#组件中获取dom" class="headerlink" title="组件中获取dom"></a>组件中获取dom</h2><ul><li>通过id值</li><li>通过ref属性</li><li>ref属性在元素上则拿到的是这个元素</li><li>ref属性在一个组件上则拿到的是这个组件</li></ul><h2 id="组件封装基础"><a href="#组件封装基础" class="headerlink" title="组件封装基础"></a>组件封装基础</h2><ul><li>新建components/count-to文件夹，存放我们创建的数字渐变的的组件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/count-to/count-to.vue </span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;span :id=<span class="string">"eleId"</span> ref=<span class="string">"number"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; CountUp &#125; <span class="keyword">from</span> <span class="string">'countup.js'</span> <span class="comment">// 引入countup.js库</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">'CountTo'</span>,</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      counter: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    <span class="comment">/* 最终值 */</span></span><br><span class="line">    endValue: &#123;</span><br><span class="line">      type: <span class="built_in">Number</span>,</span><br><span class="line">      required: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    opations: &#123;</span><br><span class="line">      <span class="comment">// startVal?: number; // number to start at (0)</span></span><br><span class="line">      startVal: <span class="number">0</span>,</span><br><span class="line">      <span class="comment">// decimalPlaces?: number; // number of decimal places (0)</span></span><br><span class="line">      decimalPlaces: <span class="number">0</span>,</span><br><span class="line">      <span class="comment">// duration?: number; // animation duration in seconds (2)</span></span><br><span class="line">      duration: <span class="number">2</span>,</span><br><span class="line">      <span class="comment">// useGrouping?: boolean; // example: 1,000 vs 1000 (true)</span></span><br><span class="line">      useGrouping: <span class="literal">true</span>,</span><br><span class="line">      <span class="comment">// useEasing?: boolean; // ease animation (true)</span></span><br><span class="line">      useEasing: <span class="literal">true</span>,</span><br><span class="line">      <span class="comment">// smartEasingThreshold?: number; // smooth easing for large numbers above this if useEasing (999)</span></span><br><span class="line">      smartEasingThreshold: <span class="number">999</span>,</span><br><span class="line">      <span class="comment">// smartEasingAmount?: number; // amount to be eased for numbers above threshold (333)</span></span><br><span class="line">      smartEasingAmount: <span class="number">333</span>,</span><br><span class="line">      <span class="comment">// separator?: string; // grouping separator (',')</span></span><br><span class="line">      separator: <span class="string">','</span>,</span><br><span class="line">      <span class="comment">// decimal?: string; // decimal ('.')</span></span><br><span class="line">      decimal: <span class="string">'.'</span>,</span><br><span class="line">      <span class="comment">// easingFn: easing function for animation (easeOutExpo)</span></span><br><span class="line">      <span class="comment">// easingFn?: (t: number, b: number, c: number, d: number) =&gt; number;</span></span><br><span class="line">      <span class="comment">// formattingFn?: (n: number) =&gt; string; // this function formats result</span></span><br><span class="line">      <span class="comment">// prefix?: string; // text prepended to result</span></span><br><span class="line">      prefix: <span class="string">''</span>,</span><br><span class="line">      <span class="comment">// suffix?: string; // text appended to result</span></span><br><span class="line">      suffix: <span class="string">''</span></span><br><span class="line">      <span class="comment">// numerals?: string[]; // numeral glyph substitution</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// dom渲染完成之后调用次回调函数</span></span><br><span class="line">      <span class="keyword">this</span>.counter = <span class="keyword">new</span> CountUp(<span class="keyword">this</span>.eleId, <span class="keyword">this</span>.endValue , <span class="keyword">this</span>.opations)</span><br><span class="line">    &#125;)</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="comment">// 这个start一定要放在setTimeout等有延迟的方法之中调用</span></span><br><span class="line">      <span class="keyword">this</span>.counter.start()</span><br><span class="line">    &#125;, <span class="number">0</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    <span class="comment">/* 第一个参数 元素的id值 */</span></span><br><span class="line">    eleId () &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`count_up_<span class="subst">$&#123;<span class="keyword">this</span>._uid&#125;</span>`</span> <span class="comment">// 每一个组件都有唯一的标识 _uid</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getNumber () &#123; <span class="comment">// 组件中的dom获取操作</span></span><br><span class="line">      <span class="keyword">const</span> text = <span class="keyword">this</span>.$refs.number.innerText</span><br><span class="line">      <span class="keyword">let</span> num = text.replace(<span class="regexp">/[\u4e00-\u9fa5]/g</span>, <span class="string">''</span>).substring(<span class="number">1</span>)</span><br><span class="line">      <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><ul><li>components/count-to/index.js</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/count-to/index.js</span></span><br><span class="line"><span class="keyword">import</span> CountTo <span class="keyword">from</span> <span class="string">'./count-to'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> CountTo</span><br><span class="line"><span class="comment">// 这样们使用这个组件的时候只需要引入components/count-to即可</span></span><br></pre></td></tr></table></figure><ul><li>创建完了组件，下面我们来使用一下</li><li>只需要把以下的组件在页面中展示一下</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">// 新建一个组件 </span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">count-to</span> <span class="attr">class</span>=<span class="string">"numto"</span> <span class="attr">ref</span>=<span class="string">"countTo"</span> <span class="attr">:end-value</span>=<span class="string">"10000.34"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:opations</span>=<span class="string">"&#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">      duration: 10,</span></span></span><br><span class="line"><span class="tag"><span class="string">      decimalPlaces: 2,</span></span></span><br><span class="line"><span class="tag"><span class="string">      prefix: '金额：',</span></span></span><br><span class="line"><span class="tag"><span class="string">      suffix: '元'</span></span></span><br><span class="line"><span class="tag"><span class="string">      &#125;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">count-to</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"getNum"</span>&gt;</span>getNum<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> CountTo <span class="keyword">from</span> <span class="string">'_c/count-to'</span> </span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">'count_to'</span>,</span></span><br><span class="line"><span class="undefined">  components: &#123;</span></span><br><span class="line"><span class="undefined">    CountTo</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    getNum () &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.$refs.countTo.getNumber()) <span class="comment">// 调用子组件的方法</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"less"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-class">.numto</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%AC%AC%E4%B8%89%E6%96%B9js%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue技术栈-状态管理vuex进阶2</title>
      <link>https://shulu520.com/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E8%BF%9B%E9%98%B62/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E8%BF%9B%E9%98%B62/</link>
      <guid>https://shulu520.com/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E8%BF%9B%E9%98%B62/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E8%BF%9B%E9%98%B62/</guid>
      <pubDate>Tue, 24 Sep 2019 04:09:09 GMT</pubDate>
      <description>
      
        vue技术栈-状态管理vuex进阶2
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="Vuex插件"><a href="#Vuex插件" class="headerlink" title="Vuex插件"></a>Vuex插件</h2><ul><li>实现一个简单的本地化存储插件</li><li>即浏览器刷新之后状态不会变</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/plugin/saveInlocal.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (store) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 当 store 初始化后调用</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'store初始化了'</span>)</span><br><span class="line">  <span class="keyword">if</span> (localStorage.state) store.replaceState(<span class="built_in">JSON</span>.parse(localStorage.state))</span><br><span class="line">  store.subscribe(<span class="function">(<span class="params">mutation, state</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 每次 mutation 之后调用</span></span><br><span class="line">    <span class="comment">// mutation 的格式为 &#123; type, payload &#125;</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'提交了mutation'</span>)</span><br><span class="line">    localStorage.state = <span class="built_in">JSON</span>.stringify(state) </span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/index.js</span></span><br><span class="line"><span class="keyword">import</span> saveInLocal <span class="keyword">from</span> <span class="string">'../store/plugin/saveInLocal'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  plugins: [ saveInLocal ] <span class="comment">// 绑定插件</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Vuex严格模式"><a href="#Vuex严格模式" class="headerlink" title="Vuex严格模式"></a>Vuex严格模式</h2><ul><li><p><strong>不要在发布环境下启用严格模式！</strong>严格模式会深度监测状态树来检测不合规的状态变更——请确保在发布环境下关闭严格模式，以避免性能损失。</p></li><li><p>在严格模式下，无论何时发生了状态变更且不是由 mutation 函数引起的，将会<strong>抛出错误</strong>。这能保证所有的状态变更都能被调试工具跟踪到。</p></li><li><p>类似于插件，我们可以让构建工具来处理这种情况：</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  strict: process.env.NODE_ENV !== <span class="string">'production'</span>  <span class="comment">// 开发环境开启严格模式调试</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Vuex双向绑定state的某一状态"><a href="#Vuex双向绑定state的某一状态" class="headerlink" title="Vuex双向绑定state的某一状态"></a>Vuex双向绑定state的某一状态</h2><ul><li>在计算属性的setter中调用mutation来改变state的状态</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 双向绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"myNameFromState"</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; myNameFromState &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任意组件</span></span><br><span class="line">computed: &#123;</span><br><span class="line">  myNameFromState: &#123;</span><br><span class="line">    <span class="keyword">get</span> () &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.$store.state.myName</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> (value) &#123;</span><br><span class="line">      <span class="comment">// 在计算属性的setter中调用mutation 来改变state</span></span><br><span class="line">      <span class="keyword">this</span>.CHANGE_STATE_MYNAME(value) </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/state.js</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  myName: <span class="string">'yachan'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> state</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/mutations.js</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  CHANGE_STATE_MYNAME (state, val) &#123;</span><br><span class="line">    state.myName = val</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> mutations</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E8%BF%9B%E9%98%B62/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E8%BF%9B%E9%98%B62/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue技术栈-状态管理vuex进阶1</title>
      <link>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E8%BF%9B%E9%98%B61/</link>
      <guid>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E8%BF%9B%E9%98%B61/</guid>
      <pubDate>Tue, 24 Sep 2019 04:08:47 GMT</pubDate>
      <description>
      
        vue技术栈-状态管理vuex进阶1
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="vuex之module模块中参数详解"><a href="#vuex之module模块中参数详解" class="headerlink" title="vuex之module模块中参数详解"></a>vuex之module模块中参数详解</h2><ul><li>以下以store/module/user.js模块为例</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/module/user.js</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  sexName: <span class="string">'yachan mei mei'</span>,</span><br><span class="line">  phoneNumber: <span class="number">1123</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  addlover: <span class="function">(<span class="params">state</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> state.sexName + <span class="string">' I love you'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  getCode: <span class="function">(<span class="params">state, getters, rootState, rootGetters</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 前两个参数为当前模块的局部的对象，后两个参数为全局的对象</span></span><br><span class="line">    <span class="comment">// 通过全局的对象的点操作就可以得到下面每一层级的对象</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'state :'</span>, state) <span class="comment">// 局部</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'getters :'</span>, getters) <span class="comment">// 局部</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'getters.addlover :'</span>, getters.addlover) <span class="comment">// 得到当前模块的getters的某一属性</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'rootState :'</span>, rootState) <span class="comment">// 全局state</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'rootGetters :'</span>, rootGetters) <span class="comment">// 全局getters</span></span><br><span class="line">    <span class="comment">// console.log('rootGetters.nameOnlyLastLetter :', rootGetters.nameOnlyLastLetter) // 得到rootGetters的某一个属性</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  CHANGE_PHONE_NUMBER (state, params) &#123;</span><br><span class="line">    state.phoneNumber += params</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// 查看actions的各个参数</span></span><br><span class="line">  <span class="comment">// commit最常用 用于提交mutation</span></span><br><span class="line">  someAction (&#123; dispatch, commit, getters, rootGetters &#125;) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'dispatch :'</span>, dispatch)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'commit :'</span>, commit)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'getters :'</span>, getters)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'rootGetters :'</span>, rootGetters)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 组合 action 看看dispatch的用处</span></span><br><span class="line">  actionA (&#123; commit &#125;) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        commit(<span class="string">'someMutation'</span>)</span><br><span class="line">        resolve()</span><br><span class="line">      &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 参数dispatch可以在另外一个 action 中分发其他的action</span></span><br><span class="line">  actionB (&#123; dispatch, commit &#125;) &#123;</span><br><span class="line">    <span class="keyword">return</span> dispatch(<span class="string">'actionA'</span>).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      commit(<span class="string">'someOtherMutation'</span>)</span><br><span class="line">    &#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'err :'</span>, err)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 利用 async / await，我们可以如下组合 action</span></span><br><span class="line">  <span class="comment">// 假设 getData() 和 getOtherData() 返回的是 Promise</span></span><br><span class="line">  <span class="keyword">async</span> actionC (&#123; commit &#125;) &#123;</span><br><span class="line">    commit(<span class="string">'gotData'</span>, <span class="keyword">await</span> getData())</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> actionD (&#123; dispatch, commit &#125;) &#123;</span><br><span class="line">    <span class="keyword">await</span> dispatch(<span class="string">'actionC'</span>) <span class="comment">// 等待 actionC 完成</span></span><br><span class="line">    commit(<span class="string">'gotOtherData'</span>, <span class="keyword">await</span> getOtherData())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  namespaced: <span class="literal">true</span>, <span class="comment">// 使用命名空间</span></span><br><span class="line">  state,</span><br><span class="line">  getters,</span><br><span class="line">  actions,</span><br><span class="line">  mutations,</span><br><span class="line">  modules: &#123;</span><br><span class="line">    <span class="comment">// 还可以嵌套模块</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="带命名空间的绑定函数"><a href="#带命名空间的绑定函数" class="headerlink" title="带命名空间的绑定函数"></a>带命名空间的绑定函数</h2><ul><li>1写起来可能比较繁琐</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  ...mapState(&#123;</span><br><span class="line">    a: <span class="function"><span class="params">state</span> =&gt;</span> state.some.nested.module.a,</span><br><span class="line">    b: <span class="function"><span class="params">state</span> =&gt;</span> state.some.nested.module.b</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">  ...mapActions([</span><br><span class="line">    <span class="string">'some/nested/module/foo'</span>, <span class="comment">// -&gt; this['some/nested/module/foo']()</span></span><br><span class="line">    <span class="string">'some/nested/module/bar'</span> <span class="comment">// -&gt; this['some/nested/module/bar']()</span></span><br><span class="line">  ])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>2简化写法 将模块的空间名称字符串作为第一个参数传递给上述函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  ...mapState(<span class="string">'some/nested/module'</span>, &#123;</span><br><span class="line">    a: <span class="function"><span class="params">state</span> =&gt;</span> state.a,</span><br><span class="line">    b: <span class="function"><span class="params">state</span> =&gt;</span> state.b</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">  ...mapActions(<span class="string">'some/nested/module'</span>, [</span><br><span class="line">    <span class="string">'foo'</span>, <span class="comment">// -&gt; this.foo()</span></span><br><span class="line">    <span class="string">'bar'</span> <span class="comment">// -&gt; this.bar()</span></span><br><span class="line">  ])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>3创建基于某个命名空间的辅助函数</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">mport &#123; createNamespacedHelpers &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; mapState, mapActions &#125; = createNamespacedHelpers(<span class="string">'some/nested/module'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  computed: &#123;</span><br><span class="line">    <span class="comment">// 在 `some/nested/module` 中查找</span></span><br><span class="line">    ...mapState(&#123;</span><br><span class="line">      a: <span class="function"><span class="params">state</span> =&gt;</span> state.a,</span><br><span class="line">      b: <span class="function"><span class="params">state</span> =&gt;</span> state.b</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="comment">// 在 `some/nested/module` 中查找</span></span><br><span class="line">    ...mapActions([</span><br><span class="line">      <span class="string">'foo'</span>,</span><br><span class="line">      <span class="string">'bar'</span></span><br><span class="line">    ])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态模块注册"><a href="#动态模块注册" class="headerlink" title="动态模块注册"></a>动态模块注册</h2><ul><li>在 store 创建之后，你可以使用 store.registerModule 方法注册模块</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"registerModule"</span>&gt;</span>动态注册模块<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; myMoney &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任意组件</span></span><br><span class="line"><span class="keyword">import</span> &#123; mapState &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line">computed: &#123;</span><br><span class="line">  ...mapState(&#123;</span><br><span class="line">    myMoney: <span class="function"><span class="params">state</span> =&gt;</span> state.myModule ? state.myModule.myMoney : [] <span class="comment">// myModule模块创建完成后获取其状态</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">  registerModule () &#123;</span><br><span class="line">    <span class="keyword">this</span>.$store.registerModule(<span class="string">'myModule'</span>, &#123; <span class="comment">// 动态创建模块</span></span><br><span class="line">      state: &#123;</span><br><span class="line">        myMoney: <span class="number">999999999999</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册嵌套模块 `nested/myModule`</span></span><br><span class="line">store.registerModule([<span class="string">'nested'</span>, <span class="string">'myModule'</span>], &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E8%BF%9B%E9%98%B61/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue技术栈-状态管理vuex基础</title>
      <link>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E5%9F%BA%E7%A1%80/</link>
      <guid>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E5%9F%BA%E7%A1%80/</guid>
      <pubDate>Tue, 24 Sep 2019 04:00:36 GMT</pubDate>
      <description>
      
        vue技术栈-状态管理vuex基础
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;优美的代码要有好的状态管理，美好的人生也是如此。</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="Vuex之state"><a href="#Vuex之state" class="headerlink" title="Vuex之state"></a>Vuex之state</h2><ul><li><strong>mapGetters,mapState是一些属性之类的 要放到computed里面</strong></li></ul><h3 id="全局state的使用"><a href="#全局state的使用" class="headerlink" title="全局state的使用"></a>全局state的使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局的state.js</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  myName: <span class="string">'yachan'</span> <span class="comment">// 记录一个值为myName</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> state</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任意一个组件</span></span><br><span class="line">&lt;p&gt;Vuex-state.maName:&#123;&#123; myName &#125;&#125;&lt;<span class="regexp">/p&gt; /</span><span class="regexp">/ 展示一下</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 获取myName</span></span><br><span class="line"><span class="regexp">computed: &#123;</span></span><br><span class="line"><span class="regexp">  myName () &#123;</span></span><br><span class="line"><span class="regexp">    return this.$store.state.myName</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="modules模块之内的state的使用"><a href="#modules模块之内的state的使用" class="headerlink" title="modules模块之内的state的使用"></a>modules模块之内的state的使用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// module/user.js</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  sexName: <span class="string">'女神'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123; &#125;</span><br><span class="line"><span class="keyword">const</span> actions = &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任意组件</span></span><br><span class="line">&lt;p&gt;Vuex-state.sexName:&#123;&#123; sexName &#125;&#125;&lt;<span class="regexp">/p&gt; /</span><span class="regexp">/ 展示一下</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">import &#123; mapState &#125; from 'vuex' /</span><span class="regexp">/引入mapState</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">computed: &#123;</span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/ sexName () &#123; /</span><span class="regexp">/ 方式一</span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/   return this.$store.state.user.sexName</span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/ &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  ...mapState(&#123; /</span><span class="regexp">/ 方式二</span></span><br><span class="line"><span class="regexp">    myName: state =&gt; state.myName,</span></span><br><span class="line"><span class="regexp">    sexName: state =&gt; state.user.sexName</span></span><br><span class="line"><span class="regexp">  &#125;)</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure><h4 id="命名空间的使用"><a href="#命名空间的使用" class="headerlink" title="命名空间的使用"></a>命名空间的使用</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命名空间的使用</span></span><br><span class="line"><span class="comment">// module/user.js</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  sexName: <span class="string">'女神'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123; &#125;</span><br><span class="line"><span class="keyword">const</span> actions = &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  namespaced: <span class="literal">true</span>, <span class="comment">// 命名空间的使用</span></span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任意组件</span></span><br><span class="line"><span class="comment">// 方式一</span></span><br><span class="line"><span class="comment">// import &#123; createNamespacedHelpers &#125; from 'vuex'</span></span><br><span class="line"><span class="comment">// const &#123; mapState &#125; = createNamespacedHelpers('user') // 使用命名空间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// computed: &#123;</span></span><br><span class="line"><span class="comment">//   ...mapState(&#123;</span></span><br><span class="line"><span class="comment">//     sexName: state =&gt; state.sexName</span></span><br><span class="line"><span class="comment">//   &#125;)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方式二</span></span><br><span class="line"><span class="keyword">import</span> &#123; mapState &#125; <span class="keyword">from</span> <span class="string">'vuex'</span> </span><br><span class="line">computed: &#123;</span><br><span class="line">  ...mapState(<span class="string">'user'</span>, &#123; <span class="comment">// 这里的第一个参数为模块名</span></span><br><span class="line">    sexName: <span class="function"><span class="params">state</span> =&gt;</span> state.sexName</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Vuex之getters"><a href="#Vuex之getters" class="headerlink" title="Vuex之getters"></a>Vuex之getters</h2><ul><li>有时候我们需要从 store 中的 state 中派生出一些状态，例如对列表进行过滤并计数：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例如对列表进行过滤并计数</span></span><br><span class="line">computed: &#123;</span><br><span class="line">  doneTodosCount () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.$store.state.todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> todo.done).length</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>如果有多个组件需要用到此属性，我们要么复制这个函数，或者抽取到一个共享函数然后在多处导入它——无论哪种方式都不是很理想。</strong></p></li><li><p>Vuex 允许我们在 store 中定义“getter”（可以认为是 store 的计算属性）。就像计算属性一样，getter 的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。</p></li><li><p>Getter 接受 state 作为其第一个参数：</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/getters.js</span></span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="comment">// 定义一个获取state中的myName的最后一个字母的属性</span></span><br><span class="line">  nameOnlyLastLetter: <span class="function">(<span class="params">state</span>) =&gt;</span> &#123; <span class="comment">// 这里是全局可以使用的方法</span></span><br><span class="line">    <span class="keyword">return</span> state.myName.substr(<span class="number">-1</span>, <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在store/index.js中需要引入，并注入Vuex 这里不再演示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 组件中使用</span></span><br><span class="line">&lt;p&gt;nameOnlyLastLetter: &#123;&#123; nameOnlyLastLetter &#125;&#125;&lt;<span class="regexp">/p&gt; /</span><span class="regexp">/ 展示</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">...mapGetters(['nameOnlyLastLetter']) /</span><span class="regexp">/ 获取</span></span><br></pre></td></tr></table></figure><h2 id="Vuex之mutations"><a href="#Vuex之mutations" class="headerlink" title="Vuex之mutations"></a>Vuex之mutations</h2><ul><li>mutation 必须同步执行。</li><li><strong>mapActions, mapMutations里面是一些方法 要放到methods里面</strong></li><li>更改 Vuex 的 store 中的状态的唯一方法是提交 mutation。</li><li>以下为一个通过mutations改变state中的myName的小例子:</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/mutations.js</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  CHANGE_STATE_MYNAME (state, val) &#123;</span><br><span class="line">    state.myName = val</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> mutations</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任意的组件中</span></span><br><span class="line"><span class="comment">// 展示省略</span></span><br><span class="line">methods: &#123;</span><br><span class="line">  ...mapMutations([<span class="string">'CHANGE_STATE_MYNAME'</span>]), <span class="comment">// 拿到CHANGE_STATE_MYNAME这个方法</span></span><br><span class="line">  changeName () &#123;</span><br><span class="line">    <span class="keyword">this</span>.CHANGE_STATE_MYNAME(<span class="string">'liu yachan'</span>) <span class="comment">// 调用这个方法并传值去直接改变state中的值</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>动态往state中添加一个状态</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">'vue'</span> <span class="comment">// 引入vue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  CHANGE_STATE_MYNAME (state, val) &#123;</span><br><span class="line">    state.myName = val</span><br><span class="line">  &#125;,</span><br><span class="line">  ADD_AGE (state) &#123;</span><br><span class="line">    vue.set(state, <span class="string">'age'</span>, <span class="string">'18'</span>) <span class="comment">// 使用vue.set(对象，'属性', '属性值')</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> mutations</span><br></pre></td></tr></table></figure><h2 id="Vuex之Action"><a href="#Vuex之Action" class="headerlink" title="Vuex之Action"></a>Vuex之Action</h2><ul><li>提交的是 mutation，而不是直接变更状态。</li><li>Action 可以包含任意异步操作。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// api/app.js</span></span><br><span class="line"><span class="comment">// 定义一个异步获取数据的方法</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getHobby = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> err = <span class="literal">null</span></span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!err) resolve(&#123;<span class="attr">code</span>: <span class="number">200</span>, <span class="attr">info</span>: &#123;<span class="attr">hobby</span>: <span class="string">'sleep'</span>&#125;&#125;)</span><br><span class="line">      <span class="keyword">else</span> reject(err)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/actions.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; getHobby &#125; <span class="keyword">from</span> <span class="string">'@/api/app'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// updateHobby (&#123; commit &#125;) &#123;</span></span><br><span class="line">  <span class="comment">//   getHobby().then(res =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//     const &#123; info: &#123; hobby &#125; &#125; = res // 解构赋值</span></span><br><span class="line">  <span class="comment">//     commit('UPDATE_HOBBY', hobby) // 在这里提交mutation 并且传值过去</span></span><br><span class="line">  <span class="comment">//   &#125;).catch((err) =&gt; &#123;</span></span><br><span class="line">  <span class="comment">//     console.log('err :', err)</span></span><br><span class="line">  <span class="comment">//   &#125;)</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> updateHobby (&#123; commit &#125;) &#123; <span class="comment">// ES7的async也行 更好</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; <span class="attr">info</span>: &#123; hobby &#125; &#125; = <span class="keyword">await</span> getHobby()</span><br><span class="line">      commit(<span class="string">'UPDATE_HOBBY'</span>, hobby)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123; <span class="comment">// 一定要捕获错误</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'error :'</span>, error)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> actions</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store/actions.js</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  UPDATE_HOBBY (state, val) &#123;</span><br><span class="line">    state.hobby = val <span class="comment">// 在这里直接修改state的属性hobby</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> mutations</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任意组件</span></span><br><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"font-color"</span>&gt;hobby: &#123;&#123;hobby&#125;&#125;&lt;<span class="regexp">/p&gt; /</span><span class="regexp">/ 展示</span></span><br><span class="line"><span class="regexp">&lt;button @click="changeHobby"&gt;changeHobby&lt;/</span>button&gt;</span><br><span class="line"></span><br><span class="line">imoprt &#123; mapState &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"></span><br><span class="line">computed: &#123;</span><br><span class="line">  ...mapState([<span class="string">'hobby'</span>]) <span class="comment">// 获取hobby</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">  changeHobby () &#123;</span><br><span class="line">    <span class="keyword">this</span>.updateHobby() <span class="comment">// 这里调用action里的方法</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86vuex%E5%9F%BA%E7%A1%80/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue技术栈-状态管理Bus</title>
      <link>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86Bus/</link>
      <guid>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86Bus/</guid>
      <pubDate>Tue, 24 Sep 2019 03:53:10 GMT</pubDate>
      <description>
      
        vue技术栈-状态管理Bus
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;好想再见见你……</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="状态管理之bus总线"><a href="#状态管理之bus总线" class="headerlink" title="状态管理之bus总线"></a>状态管理之bus总线</h1><ul><li>bus即一个空的vue实例</li><li>一个中央事件总线bus,可以作为一个简单的组件传递数据,用于解决跨级和兄弟组件通信问题。</li><li>在要实现通信的组件间都引入bus，分别触发和监听事件并传递值。</li><li>下面是一个兄弟组件间传值的例子：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib/bus.js</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> bus = <span class="keyword">new</span> Vue() <span class="comment">// 创建bus</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// views/Email.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    this is email 组件</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"点点我"</span> @<span class="attr">click</span>=<span class="string">"handleClick"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; bus &#125; <span class="keyword">from</span> <span class="string">'@/lib/bus'</span> <span class="comment">// 引入bus</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    handleClick () &#123;</span></span><br><span class="line"><span class="javascript">      bus.$emit(<span class="string">'on-click'</span>, <span class="string">'hello-tel'</span>)</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// views/Tel.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    this is tel 组件</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>value:&#123;&#123; valueFromEmail &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; bus &#125; <span class="keyword">from</span> <span class="string">'@/lib/bus'</span> <span class="comment">// 引入bus</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="undefined">  data () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      valueFromEmail: <span class="string">''</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  created () &#123; </span></span><br><span class="line"><span class="javascript">    bus.$on(<span class="string">'on-click'</span>, val =&gt; &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.valueFromEmail = val</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86Bus/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue技术栈-路由进阶2</title>
      <link>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E8%B7%AF%E7%94%B1%E8%BF%9B%E9%98%B62/</link>
      <guid>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E8%B7%AF%E7%94%B1%E8%BF%9B%E9%98%B62/</guid>
      <pubDate>Tue, 17 Sep 2019 06:51:21 GMT</pubDate>
      <description>
      
        vue技术栈-路由进阶2
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h2 id="完整的导航解析流程"><a href="#完整的导航解析流程" class="headerlink" title="完整的导航解析流程"></a>完整的导航解析流程</h2><ul><li>来自官网</li></ul><ol><li>导航被触发。</li><li>在失活的组件里调用离开守卫。</li><li>调用全局的 beforeEach 守卫。</li><li>在重用的组件里调用 beforeRouteUpdate 守卫 (2.2+)。</li><li>在路由配置里调用 beforeEnter。</li><li>解析异步路由组件。</li><li>在被激活的组件里调用 beforeRouteEnter。</li><li>调用全局的 beforeResolve 守卫 (2.5+)。</li><li>导航被确认。</li><li>调用全局的 afterEach 钩子。</li><li>触发 DOM 更新。</li><li>用创建好的实例调用 beforeRouteEnter 守卫中传给 next 的回调函数。</li></ol><h2 id="路由元信息"><a href="#路由元信息" class="headerlink" title="路由元信息"></a>路由元信息</h2><ul><li>定义路由的时候可以配置 meta 字段：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router.js</span></span><br><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/about'</span>,</span><br><span class="line">  name: <span class="string">'about'</span>,</span><br><span class="line">  component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/About'</span>),</span><br><span class="line">  meta: &#123; <span class="comment">// 路由元信息</span></span><br><span class="line">    title: <span class="string">'about'</span> <span class="comment">//页面的title</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lib/util.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> setTitle = <span class="function">(<span class="params">title</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">window</span>.document.title = title || <span class="string">'admin'</span> <span class="comment">//默认title为admin</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"><span class="comment">// 全局前置守卫</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 路由元信息存在时调用设置title的方法</span></span><br><span class="line">  to.meta &amp;&amp; setTitle(to.meta.title) </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="过渡效果"><a href="#过渡效果" class="headerlink" title="过渡效果"></a>过渡效果</h2><ul><li>单个路由的过渡</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">transition</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>一组路由的过渡</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 例如：App.vue</span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123; name: 'home' &#125;"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span> |</span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123; name: 'about' &#125;"</span>&gt;</span>About<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">transition-group</span> <span class="attr">:name</span>=<span class="string">"transitionName"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">key</span>=<span class="string">"default"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">key</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">key</span>=<span class="string">"tel"</span> <span class="attr">name</span>=<span class="string">"tel"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">transition-group</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      transitionName: <span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// watch $route 决定使用哪种过渡</span></span><br><span class="line">  watch: &#123;</span><br><span class="line">    <span class="string">'$route'</span> (to, <span class="keyword">from</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (to.name === <span class="string">'home'</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.transitionName = <span class="string">'transitionName'</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.transitionName = <span class="string">''</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 进入 */</span></span><br><span class="line"><span class="selector-class">.transitionName-enter</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.transitionName-enter-active</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">1s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.transitionName-enter-to</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 离开 */</span></span><br><span class="line"><span class="selector-class">.transitionName-leave</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.transitionName-leave-active</span>&#123;</span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">1s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.transitionName-leave-to</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="路由懒加载"><a href="#路由懒加载" class="headerlink" title="路由懒加载"></a>路由懒加载</h2><p>&emsp;&emsp;当打包构建应用时，JavaScript 包会变得非常大，影响页面加载。<br>&emsp;&emsp;如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就更加高效了。</p><ul><li>一般用于不常用的页面 </li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例如404页面</span></span><br><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'*'</span>, <span class="comment">// 所有匹配不到的路劲都会走到这里</span></span><br><span class="line">  component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/Error_404.vue'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据获取"><a href="#数据获取" class="headerlink" title="数据获取"></a>数据获取</h2><ul><li><a href="https://router.vuejs.org/zh/guide/advanced/data-fetching.html" target="_blank" rel="noopener">详情见官网</a></li></ul><p>&emsp;&emsp;有时候，进入某个路由后，需要从服务器获取数据。例如，在渲染用户信息时，你需要从服务器获取用户的数据。我们可以通过两种方式来实现：</p><p>&emsp;&emsp;导航完成之后获取：先完成导航，然后在接下来的组件生命周期钩子中获取数据。在数据获取期间显示“加载中”之类的指示。</p><p>&emsp;&emsp;导航完成之前获取：导航完成前，在路由进入的守卫中获取数据，在数据获取成功后执行导航。</p><p>&emsp;&emsp;从技术角度讲，两种方式都不错 —— 就看你想要的用户体验是哪种。</p><h2 id="滚动行为"><a href="#滚动行为" class="headerlink" title="滚动行为"></a>滚动行为</h2><p>&emsp;&emsp;使用前端路由，当切换到新路由时，想要页面滚到顶部，或者是保持原先的滚动位置，就像重新加载页面那样。 vue-router 能做到，而且更好，它让你可以自定义路由切换时页面如何滚动。</p><p>注意: 这个功能只在支持 history.pushState 的浏览器中可用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes,</span><br><span class="line">  scrollBehavior (to, <span class="keyword">from</span>, savedPosition) &#123;</span><br><span class="line">    <span class="keyword">if</span> (savedPosition) &#123;</span><br><span class="line">      <span class="keyword">return</span> savedPosition <span class="comment">// 保持原先的滚动位置</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123; <span class="attr">x</span>: <span class="number">0</span>, <span class="attr">y</span>: <span class="number">0</span> &#125; <span class="comment">// 想要页面滚到顶部</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E8%B7%AF%E7%94%B1%E8%BF%9B%E9%98%B62/#disqus_thread</comments>
    </item>
    
    <item>
      <title>vue技术栈-路由进阶1</title>
      <link>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E8%B7%AF%E7%94%B1%E8%BF%9B%E9%98%B61/</link>
      <guid>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E8%B7%AF%E7%94%B1%E8%BF%9B%E9%98%B61/</guid>
      <pubDate>Tue, 17 Sep 2019 06:49:22 GMT</pubDate>
      <description>
      
        vue技术栈-路由进阶1
      
      </description>
      
      <content:encoded><![CDATA[<blockquote><p>&emsp;&emsp;</p></blockquote><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div><br><a id="more"></a></p><h1 id="路由进阶"><a href="#路由进阶" class="headerlink" title="路由进阶"></a>路由进阶</h1><h2 id="路由组件传参1"><a href="#路由组件传参1" class="headerlink" title="路由组件传参1"></a>路由组件传参1</h2><ul><li>动态路由</li><li>传入时props为布尔类型</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router.js 动态路由</span></span><br><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/argu/:name'</span>,</span><br><span class="line">  props: <span class="literal">true</span> <span class="comment">// 布尔形式</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Argue.vue</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &#123;&#123; name &#125;&#125;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    name: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="string">'yachan'</span> <span class="comment">// 默认值不见效果</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="路由组件传参2"><a href="#路由组件传参2" class="headerlink" title="路由组件传参2"></a>路由组件传参2</h2><ul><li>普通路由</li><li>传入时props为对象形式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/about'</span>,</span><br><span class="line">  props: &#123; <span class="comment">// 对象形式</span></span><br><span class="line">    food: <span class="string">'banana'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对应About.vue的结构同Argu的一样</span></span><br><span class="line"><span class="comment">// props接收一下 模板中展示一下</span></span><br></pre></td></tr></table></figure><h2 id="路由组件传参3"><a href="#路由组件传参3" class="headerlink" title="路由组件传参3"></a>路由组件传参3</h2><ul><li>普通路由</li><li>传入时props为函数形式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/'</span>,</span><br><span class="line">  props: <span class="function"><span class="params">route</span> =&gt;</span> (&#123; <span class="comment">// 函数形式</span></span><br><span class="line">    food: route.query.food <span class="comment">// 例如 http://localhost:8080/#/?food=yachan</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对应Home.vue的结构同Argu的一样</span></span><br><span class="line"><span class="comment">// props接收一下 模板中展示一下</span></span><br></pre></td></tr></table></figure><h2 id="H5之history模式"><a href="#H5之history模式" class="headerlink" title="H5之history模式"></a>H5之history模式</h2><ul><li>默认为哈希模式即路劲中有#号</li><li>H5之history模式好看没有#号</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>, <span class="comment">// H5 history模式</span></span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router.js的最后添加</span></span><br><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'*'</span>, <span class="comment">// 所有匹配不到的路劲都会走到这里</span></span><br><span class="line">  component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'@/views/Error_404.vue'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="导航守卫"><a href="#导航守卫" class="headerlink" title="导航守卫"></a>导航守卫</h2><ul><li>“导航”表示路由正在发生改变。</li><li>即通过跳转或取消的方式守卫导航。</li><li>例如：路由跳转前做一些验证，比如登录验证，是网站中的普遍需求。</li></ul><h3 id="全局前置守卫"><a href="#全局前置守卫" class="headerlink" title="全局前置守卫"></a>全局前置守卫</h3><ul><li>确保要调用 next 方法，否则钩子就不会被 resolved。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> HAS_LOGINED = <span class="literal">false</span> <span class="comment">// 模拟 假设还没有登录</span></span><br><span class="line"></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (to.name !== <span class="string">'login'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (HAS_LOGINED) next()</span><br><span class="line">    <span class="keyword">else</span> next(&#123; <span class="attr">name</span>: <span class="string">'login'</span> &#125;)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (HAS_LOGINED) next(&#123; <span class="attr">name</span>: <span class="string">'home'</span> &#125;)</span><br><span class="line">    <span class="keyword">else</span> next()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h3 id="全局后置钩子"><a href="#全局后置钩子" class="headerlink" title="全局后置钩子"></a>全局后置钩子</h3><ul><li>然而和守卫不同的是，这些钩子不会接受 next 函数也不会改变导航本身</li><li>一般用来改变一些跳转前后的样式</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局后置钩子</span></span><br><span class="line">router.afterEach(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// </span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="路由独享的守卫"><a href="#路由独享的守卫" class="headerlink" title="路由独享的守卫"></a>路由独享的守卫</h3><ul><li>你可以在路由配置上直接定义 beforeEnter 守卫</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// router.js</span></span><br><span class="line">&#123;</span><br><span class="line">  path: <span class="string">'/'</span>,</span><br><span class="line">  name: <span class="string">'home'</span>,</span><br><span class="line">  component: Home,</span><br><span class="line">  beforeEnter: <span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">from</span>.name === <span class="string">'about'</span>) alert(<span class="string">'这是从about页面来的'</span>)</span><br><span class="line">    <span class="keyword">else</span> alert(<span class="string">'这不是从about页面来的'</span>)</span><br><span class="line">    next() <span class="comment">// 一定要调用next 钩子</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="组件内的守卫"><a href="#组件内的守卫" class="headerlink" title="组件内的守卫"></a>组件内的守卫</h3><ul><li>可以在路由组件内直接定义以下路由导航守卫：</li><li>注意 beforeRouteEnter 是支持给 next 传递回调的唯一守卫</li><li>对于 beforeRouteUpdate 和 beforeRouteLeave 来说，this 已经可用了，所以不支持传递回调，因为没有必要了</li><li>beforeRouteLeave这个离开守卫通常用来禁止用户在还未保存修改前突然离开。该导航可以通过 next(false) 来取消。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 组件内部</span></span><br><span class="line">beforeRouteEnter (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">  <span class="comment">// 在渲染该组件的对应路由被 confirm 前调用</span></span><br><span class="line">  <span class="comment">// 不！能！获取组件实例 `this`</span></span><br><span class="line">  <span class="comment">// 因为当守卫执行前，组件实例还没被创建</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 不过可以通过回调来解决</span></span><br><span class="line">  <span class="comment">// 次回调在页面被渲染完之后才被调用</span></span><br><span class="line">  next(<span class="function"><span class="params">vm</span> =&gt;</span> &#123; <span class="comment">// 通过 `vm` 访问组件实例</span></span><br><span class="line">    <span class="built_in">console</span>.log(vm) <span class="comment">//vm即为当前组件实例 this</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteUpdate (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">  <span class="comment">// 在当前路由改变，但是该组件被复用时调用</span></span><br><span class="line">  <span class="comment">// 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，</span></span><br><span class="line">  <span class="comment">// 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。</span></span><br><span class="line">  <span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">&#125;,</span><br><span class="line">beforeRouteLeave (to, <span class="keyword">from</span>, next) &#123;</span><br><span class="line">  <span class="comment">// 导航离开该组件的对应路由时调用</span></span><br><span class="line">  <span class="comment">// 可以访问组件实例 `this`</span></span><br><span class="line">  <span class="keyword">const</span> leave = confirm(<span class="string">'您确定要离开吗？当前编辑的内容还没有被保存'</span>)</span><br><span class="line">  <span class="keyword">if</span> (leave) next() <span class="comment">// 用户点击了确定 则跳转页面</span></span><br><span class="line">  <span class="keyword">else</span> next(<span class="literal">false</span>) <span class="comment">// 页面不会跳转</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><div style="width:100%;height:1px;background-color:pink;opacity:.7"></div></p><center><img width="50px" height="50px" src="https://www.z4a.net/images/2019/05/27/20190527-20267.th.png" alt="QQ" border="0"><a target="_blank" style="color:skyblue;font-weight:bold;" href="http://wpa.qq.com/msgrd?v=3&uin=2642816105&site=qq&menu=yes">有事您Q我👇</a></center>]]></content:encoded>
      
      <comments>https://shulu520.com/vue/vue%E6%8A%80%E6%9C%AF%E6%A0%88-%E8%B7%AF%E7%94%B1%E8%BF%9B%E9%98%B61/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
